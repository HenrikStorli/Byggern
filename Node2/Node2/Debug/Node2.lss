
Node2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c80  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00081c80  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000094  20000434  000820b4  00020434  2**2
                  ALLOC
  3 .stack        00000400  200004c8  00082148  00020434  2**0
                  ALLOC
  4 .heap         00000200  200008c8  00082548  00020434  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  0002045d  2**0
                  CONTENTS, READONLY
  7 .debug_info   000061ad  00000000  00000000  000204b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000011dd  00000000  00000000  00026663  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00001271  00000000  00000000  00027840  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000001b0  00000000  00000000  00028ab1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000168  00000000  00000000  00028c61  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00012c03  00000000  00000000  00028dc9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000043b3  00000000  00000000  0003b9cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000550fc  00000000  00000000  0003fd7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000089c  00000000  00000000  00094e7c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	c8 08 00 20 75 03 08 00 71 03 08 00 71 03 08 00     ... u...q...q...
   80010:	71 03 08 00 71 03 08 00 71 03 08 00 00 00 00 00     q...q...q.......
	...
   8002c:	71 03 08 00 71 03 08 00 00 00 00 00 71 03 08 00     q...q.......q...
   8003c:	71 03 08 00 71 03 08 00 71 03 08 00 71 03 08 00     q...q...q...q...
   8004c:	71 03 08 00 71 03 08 00 71 03 08 00 71 03 08 00     q...q...q...q...
   8005c:	71 03 08 00 31 0a 08 00 71 03 08 00 00 00 00 00     q...1...q.......
   8006c:	71 03 08 00 71 03 08 00 71 03 08 00 71 03 08 00     q...q...q...q...
	...
   80084:	71 03 08 00 71 03 08 00 71 03 08 00 71 03 08 00     q...q...q...q...
   80094:	71 03 08 00 71 03 08 00 71 03 08 00 71 03 08 00     q...q...q...q...
   800a4:	00 00 00 00 71 03 08 00 71 03 08 00 71 03 08 00     ....q...q...q...
   800b4:	71 03 08 00 71 03 08 00 71 03 08 00 71 03 08 00     q...q...q...q...
   800c4:	71 03 08 00 71 03 08 00 71 03 08 00 71 03 08 00     q...q...q...q...
   800d4:	71 03 08 00 71 03 08 00 71 03 08 00 71 03 08 00     q...q...q...q...
   800e4:	71 03 08 00 71 03 08 00 d5 02 08 00 71 03 08 00     q...q.......q...

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	20000434 	.word	0x20000434
   80110:	00000000 	.word	0x00000000
   80114:	00081c80 	.word	0x00081c80

00080118 <frame_dummy>:
   80118:	4b0c      	ldr	r3, [pc, #48]	; (8014c <frame_dummy+0x34>)
   8011a:	b143      	cbz	r3, 8012e <frame_dummy+0x16>
   8011c:	480c      	ldr	r0, [pc, #48]	; (80150 <frame_dummy+0x38>)
   8011e:	b510      	push	{r4, lr}
   80120:	490c      	ldr	r1, [pc, #48]	; (80154 <frame_dummy+0x3c>)
   80122:	f3af 8000 	nop.w
   80126:	480c      	ldr	r0, [pc, #48]	; (80158 <frame_dummy+0x40>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b923      	cbnz	r3, 80136 <frame_dummy+0x1e>
   8012c:	bd10      	pop	{r4, pc}
   8012e:	480a      	ldr	r0, [pc, #40]	; (80158 <frame_dummy+0x40>)
   80130:	6803      	ldr	r3, [r0, #0]
   80132:	b933      	cbnz	r3, 80142 <frame_dummy+0x2a>
   80134:	4770      	bx	lr
   80136:	4b09      	ldr	r3, [pc, #36]	; (8015c <frame_dummy+0x44>)
   80138:	2b00      	cmp	r3, #0
   8013a:	d0f7      	beq.n	8012c <frame_dummy+0x14>
   8013c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80140:	4718      	bx	r3
   80142:	4b06      	ldr	r3, [pc, #24]	; (8015c <frame_dummy+0x44>)
   80144:	2b00      	cmp	r3, #0
   80146:	d0f5      	beq.n	80134 <frame_dummy+0x1c>
   80148:	4718      	bx	r3
   8014a:	bf00      	nop
   8014c:	00000000 	.word	0x00000000
   80150:	00081c80 	.word	0x00081c80
   80154:	20000438 	.word	0x20000438
   80158:	00081c80 	.word	0x00081c80
   8015c:	00000000 	.word	0x00000000

00080160 <can_init>:
 * \retval Success(0) or failure(1)
 */


uint8_t can_init(uint32_t can_br, uint8_t num_tx_mb, uint8_t num_rx_mb)
{
   80160:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	
	//Make sure num_rx_mb and num_tx_mb is valid
	if(num_rx_mb > 8 | num_tx_mb > 8 | num_rx_mb + num_tx_mb > 8)
   80164:	1855      	adds	r5, r2, r1
   80166:	2908      	cmp	r1, #8
   80168:	bf98      	it	ls
   8016a:	2a08      	cmpls	r2, #8
   8016c:	d864      	bhi.n	80238 <can_init+0xd8>
   8016e:	460e      	mov	r6, r1
   80170:	2d08      	cmp	r5, #8
   80172:	dc61      	bgt.n	80238 <can_init+0xd8>


	uint32_t ul_status; 
	
	//Disable can
	CAN0->CAN_MR &= ~CAN_MR_CANEN; 
   80174:	4a32      	ldr	r2, [pc, #200]	; (80240 <can_init+0xe0>)
   80176:	6813      	ldr	r3, [r2, #0]
   80178:	f023 0301 	bic.w	r3, r3, #1
   8017c:	6013      	str	r3, [r2, #0]
	//Clear status register on read
	ul_status = CAN0->CAN_SR; 
   8017e:	6913      	ldr	r3, [r2, #16]
	
	
	// Disable interrupts on CANH and CANL pins
	PIOA->PIO_IDR = PIO_PA8A_URXD | PIO_PA9A_UTXD;
   80180:	4b30      	ldr	r3, [pc, #192]	; (80244 <can_init+0xe4>)
   80182:	f44f 7440 	mov.w	r4, #768	; 0x300
   80186:	645c      	str	r4, [r3, #68]	; 0x44
	
	//Select CAN0 RX and TX in PIOA
	uint32_t ul_sr = PIOA->PIO_ABSR;
   80188:	6f1c      	ldr	r4, [r3, #112]	; 0x70
	PIOA->PIO_ABSR = ~(PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0) & ul_sr;
   8018a:	f024 0403 	bic.w	r4, r4, #3
   8018e:	671c      	str	r4, [r3, #112]	; 0x70
	
	// Disable the Parallel IO (PIO) of the Rx and Tx pins so that the peripheral controller can use them
	PIOA->PIO_PDR = PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0;
   80190:	2403      	movs	r4, #3
   80192:	605c      	str	r4, [r3, #4]
	
	// Enable pull up on CANH and CANL pin
	PIOA->PIO_PUER = (PIO_PA1A_CANRX0 | PIO_PA0A_CANTX0);
   80194:	665c      	str	r4, [r3, #100]	; 0x64
	
	
	//Enable Clock for CAN0 in PMC
	PMC->PMC_PCR = PMC_PCR_EN | (0 << PMC_PCR_DIV_Pos) | PMC_PCR_CMD | (ID_CAN0 << PMC_PCR_PID_Pos); // DIV = 1(can clk = MCK/2), CMD = 1 (write), PID = 2B (CAN0)
   80196:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   8019a:	4c2b      	ldr	r4, [pc, #172]	; (80248 <can_init+0xe8>)
   8019c:	f8c3 410c 	str.w	r4, [r3, #268]	; 0x10c
	PMC->PMC_PCER1 |= 1 << (ID_CAN0 - 32);
   801a0:	f8d3 4100 	ldr.w	r4, [r3, #256]	; 0x100
   801a4:	f444 6400 	orr.w	r4, r4, #2048	; 0x800
   801a8:	f8c3 4100 	str.w	r4, [r3, #256]	; 0x100
	
	//Set baudrate, Phase1, phase2 and propagation delay for can bus. Must match on all nodes!
	CAN0->CAN_BR = can_br; 
   801ac:	6150      	str	r0, [r2, #20]
	/****** Start of mailbox configuration ******/

	uint32_t can_ier = 0;

	/* Configure receive mailboxes */
	for (int n = num_tx_mb; n <= num_rx_mb + num_tx_mb; n++)  //Simply one mailbox setup for all messages. You might want to apply filter for them.
   801ae:	42a9      	cmp	r1, r5
   801b0:	dc40      	bgt.n	80234 <can_init+0xd4>
   801b2:	460a      	mov	r2, r1
   801b4:	2400      	movs	r4, #0
	{
		CAN0->CAN_MB[n].CAN_MAM = 0; //Accept all messages
   801b6:	46a1      	mov	r9, r4
		CAN0->CAN_MB[n].CAN_MID = CAN_MID_MIDE;
   801b8:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80240 <can_init+0xe0>
   801bc:	f04f 5c00 	mov.w	ip, #536870912	; 0x20000000
		CAN0->CAN_MB[n].CAN_MMR = (CAN_MMR_MOT_MB_RX);
   801c0:	f04f 7e80 	mov.w	lr, #16777216	; 0x1000000
		CAN0->CAN_MB[n].CAN_MCR |= CAN_MCR_MTCR;

		can_ier |= 1 << n; //Enable interrupt on rx mailbox
   801c4:	2701      	movs	r7, #1
   801c6:	0153      	lsls	r3, r2, #5
   801c8:	f103 2040 	add.w	r0, r3, #1073758208	; 0x40004000
   801cc:	f500 2030 	add.w	r0, r0, #720896	; 0xb0000
		CAN0->CAN_MB[n].CAN_MAM = 0; //Accept all messages
   801d0:	f8c0 9204 	str.w	r9, [r0, #516]	; 0x204
		CAN0->CAN_MB[n].CAN_MID = CAN_MID_MIDE;
   801d4:	4443      	add	r3, r8
   801d6:	f8c3 c208 	str.w	ip, [r3, #520]	; 0x208
		CAN0->CAN_MB[n].CAN_MMR = (CAN_MMR_MOT_MB_RX);
   801da:	f8c0 e200 	str.w	lr, [r0, #512]	; 0x200
		CAN0->CAN_MB[n].CAN_MCR |= CAN_MCR_MTCR;
   801de:	f8d3 021c 	ldr.w	r0, [r3, #540]	; 0x21c
   801e2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   801e6:	f8c3 021c 	str.w	r0, [r3, #540]	; 0x21c
		can_ier |= 1 << n; //Enable interrupt on rx mailbox
   801ea:	fa07 f302 	lsl.w	r3, r7, r2
   801ee:	431c      	orrs	r4, r3
	for (int n = num_tx_mb; n <= num_rx_mb + num_tx_mb; n++)  //Simply one mailbox setup for all messages. You might want to apply filter for them.
   801f0:	3201      	adds	r2, #1
   801f2:	4295      	cmp	r5, r2
   801f4:	dae7      	bge.n	801c6 <can_init+0x66>
	}
	
	/*Configure transmit mailboxes */
	for (int n = 0; n < num_tx_mb; n++)
   801f6:	b181      	cbz	r1, 8021a <can_init+0xba>
   801f8:	2300      	movs	r3, #0
	{
		CAN0->CAN_MB[n].CAN_MID = CAN_MID_MIDE;
   801fa:	4911      	ldr	r1, [pc, #68]	; (80240 <can_init+0xe0>)
   801fc:	f04f 5500 	mov.w	r5, #536870912	; 0x20000000
		CAN0->CAN_MB[n].CAN_MMR = (CAN_MMR_MOT_MB_TX);
   80200:	f04f 7040 	mov.w	r0, #50331648	; 0x3000000
		CAN0->CAN_MB[n].CAN_MID = CAN_MID_MIDE;
   80204:	eb01 1243 	add.w	r2, r1, r3, lsl #5
   80208:	f8c2 5208 	str.w	r5, [r2, #520]	; 0x208
		CAN0->CAN_MB[n].CAN_MMR = (CAN_MMR_MOT_MB_TX);
   8020c:	f103 0210 	add.w	r2, r3, #16
   80210:	0152      	lsls	r2, r2, #5
   80212:	5088      	str	r0, [r1, r2]
	for (int n = 0; n < num_tx_mb; n++)
   80214:	3301      	adds	r3, #1
   80216:	429e      	cmp	r6, r3
   80218:	d1f4      	bne.n	80204 <can_init+0xa4>
	}
	
	/****** End of mailbox configuraion ******/

	//Enable interrupt on receive mailboxes
	CAN0->CAN_IER = can_ier;
   8021a:	4b09      	ldr	r3, [pc, #36]	; (80240 <can_init+0xe0>)
   8021c:	605c      	str	r4, [r3, #4]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   8021e:	f44f 6100 	mov.w	r1, #2048	; 0x800
   80222:	4a0a      	ldr	r2, [pc, #40]	; (8024c <can_init+0xec>)
   80224:	6051      	str	r1, [r2, #4]

	//Enable interrupt in NVIC 
	NVIC_EnableIRQ(ID_CAN0);

	//enable CAN
	CAN0->CAN_MR |= CAN_MR_CANEN;
   80226:	681a      	ldr	r2, [r3, #0]
   80228:	f042 0201 	orr.w	r2, r2, #1
   8022c:	601a      	str	r2, [r3, #0]

	return 0;
   8022e:	2000      	movs	r0, #0
   80230:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	uint32_t can_ier = 0;
   80234:	2400      	movs	r4, #0
   80236:	e7de      	b.n	801f6 <can_init+0x96>
		return 1; //Too many mailboxes is configured
   80238:	2001      	movs	r0, #1
}
   8023a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8023e:	bf00      	nop
   80240:	400b4000 	.word	0x400b4000
   80244:	400e0e00 	.word	0x400e0e00
   80248:	1000102b 	.word	0x1000102b
   8024c:	e000e100 	.word	0xe000e100

00080250 <can_receive>:
 * \retval Success(0) or failure(1)
 */
uint8_t can_receive(CAN_MESSAGE* can_msg, uint8_t rx_mb_id)
{
	//Check that mailbox is ready
	if(CAN0->CAN_MB[rx_mb_id].CAN_MSR & CAN_MSR_MRDY)
   80250:	014b      	lsls	r3, r1, #5
   80252:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   80256:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   8025a:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   8025e:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
   80262:	d033      	beq.n	802cc <can_receive+0x7c>
{
   80264:	b430      	push	{r4, r5}
	{
		//Get data from CAN mailbox
		uint32_t data_low = CAN0->CAN_MB[rx_mb_id].CAN_MDL;
   80266:	014b      	lsls	r3, r1, #5
   80268:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8026c:	f503 2330 	add.w	r3, r3, #720896	; 0xb0000
   80270:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
		uint32_t data_high = CAN0->CAN_MB[rx_mb_id].CAN_MDH;
   80274:	f8d3 4218 	ldr.w	r4, [r3, #536]	; 0x218
		
		//Get message ID
		can_msg->id = (uint16_t)((CAN0->CAN_MB[rx_mb_id].CAN_MID & CAN_MID_MIDvA_Msk) >> CAN_MID_MIDvA_Pos);
   80278:	f8d3 5208 	ldr.w	r5, [r3, #520]	; 0x208
   8027c:	f3c5 458a 	ubfx	r5, r5, #18, #11
   80280:	8005      	strh	r5, [r0, #0]
		
		//Get data length
		can_msg->data_length = (uint8_t)((CAN0->CAN_MB[rx_mb_id].CAN_MSR & CAN_MSR_MDLC_Msk) >> CAN_MSR_MDLC_Pos);
   80282:	f8d3 3210 	ldr.w	r3, [r3, #528]	; 0x210
   80286:	f3c3 4303 	ubfx	r3, r3, #16, #4
   8028a:	7083      	strb	r3, [r0, #2]
		
		//Put data in CAN_MESSAGE object
		for(int i = 0; i < can_msg->data_length;i++)
   8028c:	461d      	mov	r5, r3
   8028e:	b15b      	cbz	r3, 802a8 <can_receive+0x58>
   80290:	3003      	adds	r0, #3
   80292:	2300      	movs	r3, #0
		{
			if(i < 4)
   80294:	2b03      	cmp	r3, #3
			{
				can_msg->data[i] = (char)(data_low & 0xff);
   80296:	bfd9      	ittee	le
   80298:	7002      	strble	r2, [r0, #0]
				data_low = data_low >> 8;
   8029a:	0a12      	lsrle	r2, r2, #8
			}
			else
			{
				can_msg->data[i] = (uint8_t)(data_high & 0xff);
   8029c:	7004      	strbgt	r4, [r0, #0]
				data_high = data_high >> 8;
   8029e:	0a24      	lsrgt	r4, r4, #8
		for(int i = 0; i < can_msg->data_length;i++)
   802a0:	3301      	adds	r3, #1
   802a2:	3001      	adds	r0, #1
   802a4:	42ab      	cmp	r3, r5
   802a6:	d1f5      	bne.n	80294 <can_receive+0x44>
			}
		}
		
		//Reset for new receive
		CAN0->CAN_MB[rx_mb_id].CAN_MMR = CAN_MMR_MOT_MB_RX;
   802a8:	4b09      	ldr	r3, [pc, #36]	; (802d0 <can_receive+0x80>)
   802aa:	f101 0210 	add.w	r2, r1, #16
   802ae:	0152      	lsls	r2, r2, #5
   802b0:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   802b4:	5098      	str	r0, [r3, r2]
		CAN0->CAN_MB[rx_mb_id].CAN_MCR |= CAN_MCR_MTCR;
   802b6:	eb03 1141 	add.w	r1, r3, r1, lsl #5
   802ba:	f8d1 321c 	ldr.w	r3, [r1, #540]	; 0x21c
   802be:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
   802c2:	f8c1 321c 	str.w	r3, [r1, #540]	; 0x21c
		return 0;
   802c6:	2000      	movs	r0, #0
	}
	else //Mailbox busy
	{
		return 1;
	}
}
   802c8:	bc30      	pop	{r4, r5}
   802ca:	4770      	bx	lr
		return 1;
   802cc:	2001      	movs	r0, #1
   802ce:	4770      	bx	lr
   802d0:	400b4000 	.word	0x400b4000

000802d4 <CAN0_Handler>:
 * \param void
 *
 * \retval 
 */
void CAN0_Handler( void )
{
   802d4:	b510      	push	{r4, lr}
   802d6:	b084      	sub	sp, #16
	if(DEBUG_INTERRUPT)printf("CAN0 interrupt\n\r");
	char can_sr = CAN0->CAN_SR; 
   802d8:	4b1f      	ldr	r3, [pc, #124]	; (80358 <CAN0_Handler+0x84>)
   802da:	691c      	ldr	r4, [r3, #16]
	
	//RX interrupt
	if(can_sr & (CAN_SR_MB1 | CAN_SR_MB2) )//Only mailbox 1 and 2 specified for receiving
   802dc:	f014 0f06 	tst.w	r4, #6
   802e0:	d023      	beq.n	8032a <CAN0_Handler+0x56>
	{
		CAN_MESSAGE message;
		if(can_sr & CAN_SR_MB1)  //Mailbox 1 event
   802e2:	f014 0f02 	tst.w	r4, #2
   802e6:	d12d      	bne.n	80344 <CAN0_Handler+0x70>
		{
			can_receive(&message, 1);

		}
		else if(can_sr & CAN_SR_MB2) //Mailbox 2 event
   802e8:	f014 0f04 	tst.w	r4, #4
   802ec:	d02f      	beq.n	8034e <CAN0_Handler+0x7a>
		
		{
			can_receive(&message, 2);
   802ee:	2102      	movs	r1, #2
   802f0:	a801      	add	r0, sp, #4
   802f2:	4b1a      	ldr	r3, [pc, #104]	; (8035c <CAN0_Handler+0x88>)
   802f4:	4798      	blx	r3
			printf("CAN0 message arrived in non-used mailbox\n\r");
		}

		if(DEBUG_INTERRUPT)printf("message id: %d\n\r", message.id);
		if(DEBUG_INTERRUPT)printf("message data length: %d\n\r", message.data_length);
		for (int i = 0; i < message.data_length; i++)
   802f6:	f89d 2006 	ldrb.w	r2, [sp, #6]
   802fa:	b11a      	cbz	r2, 80304 <CAN0_Handler+0x30>
   802fc:	2300      	movs	r3, #0
   802fe:	3301      	adds	r3, #1
   80300:	4293      	cmp	r3, r2
   80302:	d1fc      	bne.n	802fe <CAN0_Handler+0x2a>
			if(DEBUG_INTERRUPT)printf("%d ", message.data[i]);
		}
		if(DEBUG_INTERRUPT)printf("\n\r");
        
        //Fetching joystick data
        received_joystick_data.posX = (message.data[0]) - 128;
   80304:	4b16      	ldr	r3, [pc, #88]	; (80360 <CAN0_Handler+0x8c>)
   80306:	f89d 2007 	ldrb.w	r2, [sp, #7]
   8030a:	3a80      	subs	r2, #128	; 0x80
   8030c:	601a      	str	r2, [r3, #0]
        received_joystick_data.posY = (message.data[1]) - 128;  
   8030e:	f89d 2008 	ldrb.w	r2, [sp, #8]
   80312:	3a80      	subs	r2, #128	; 0x80
   80314:	605a      	str	r2, [r3, #4]
        received_joystick_data.button_pushed = (message.data[2]) % 2;     
   80316:	f89d 2009 	ldrb.w	r2, [sp, #9]
   8031a:	f002 0101 	and.w	r1, r2, #1
   8031e:	7219      	strb	r1, [r3, #8]
        received_joystick_data.joystick_direction = (message.data[2] >> 1);
   80320:	0852      	lsrs	r2, r2, #1
   80322:	725a      	strb	r2, [r3, #9]
		received_joystick_data.sliderRight = message.data[3];
   80324:	f89d 200a 	ldrb.w	r2, [sp, #10]
   80328:	60da      	str	r2, [r3, #12]
	}
	
	if(can_sr & CAN_SR_MB0)
   8032a:	f014 0f01 	tst.w	r4, #1
   8032e:	d002      	beq.n	80336 <CAN0_Handler+0x62>
	{
		if(DEBUG_INTERRUPT) printf("CAN0 MB0 ready to send \n\r");
		
	//Disable interrupt
		CAN0->CAN_IDR = CAN_IER_MB0;
   80330:	2201      	movs	r2, #1
   80332:	4b09      	ldr	r3, [pc, #36]	; (80358 <CAN0_Handler+0x84>)
   80334:	609a      	str	r2, [r3, #8]
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   80336:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8033a:	4b0a      	ldr	r3, [pc, #40]	; (80364 <CAN0_Handler+0x90>)
   8033c:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
	NVIC_ClearPendingIRQ(ID_CAN0);
	//sei();*/


    
}
   80340:	b004      	add	sp, #16
   80342:	bd10      	pop	{r4, pc}
			can_receive(&message, 1);
   80344:	2101      	movs	r1, #1
   80346:	a801      	add	r0, sp, #4
   80348:	4b04      	ldr	r3, [pc, #16]	; (8035c <CAN0_Handler+0x88>)
   8034a:	4798      	blx	r3
   8034c:	e7d3      	b.n	802f6 <CAN0_Handler+0x22>
			printf("CAN0 message arrived in non-used mailbox\n\r");
   8034e:	4806      	ldr	r0, [pc, #24]	; (80368 <CAN0_Handler+0x94>)
   80350:	4b06      	ldr	r3, [pc, #24]	; (8036c <CAN0_Handler+0x98>)
   80352:	4798      	blx	r3
   80354:	e7cf      	b.n	802f6 <CAN0_Handler+0x22>
   80356:	bf00      	nop
   80358:	400b4000 	.word	0x400b4000
   8035c:	00080251 	.word	0x00080251
   80360:	20000450 	.word	0x20000450
   80364:	e000e100 	.word	0xe000e100
   80368:	00081b84 	.word	0x00081b84
   8036c:	00080841 	.word	0x00080841

00080370 <Dummy_Handler>:
   80370:	e7fe      	b.n	80370 <Dummy_Handler>
	...

00080374 <Reset_Handler>:
   80374:	b508      	push	{r3, lr}
   80376:	4b18      	ldr	r3, [pc, #96]	; (803d8 <Reset_Handler+0x64>)
   80378:	4a18      	ldr	r2, [pc, #96]	; (803dc <Reset_Handler+0x68>)
   8037a:	429a      	cmp	r2, r3
   8037c:	d010      	beq.n	803a0 <Reset_Handler+0x2c>
   8037e:	4b18      	ldr	r3, [pc, #96]	; (803e0 <Reset_Handler+0x6c>)
   80380:	4a15      	ldr	r2, [pc, #84]	; (803d8 <Reset_Handler+0x64>)
   80382:	429a      	cmp	r2, r3
   80384:	d20c      	bcs.n	803a0 <Reset_Handler+0x2c>
   80386:	3b01      	subs	r3, #1
   80388:	1a9b      	subs	r3, r3, r2
   8038a:	f023 0303 	bic.w	r3, r3, #3
   8038e:	3304      	adds	r3, #4
   80390:	4413      	add	r3, r2
   80392:	4912      	ldr	r1, [pc, #72]	; (803dc <Reset_Handler+0x68>)
   80394:	f851 0b04 	ldr.w	r0, [r1], #4
   80398:	f842 0b04 	str.w	r0, [r2], #4
   8039c:	429a      	cmp	r2, r3
   8039e:	d1f9      	bne.n	80394 <Reset_Handler+0x20>
   803a0:	4b10      	ldr	r3, [pc, #64]	; (803e4 <Reset_Handler+0x70>)
   803a2:	4a11      	ldr	r2, [pc, #68]	; (803e8 <Reset_Handler+0x74>)
   803a4:	429a      	cmp	r2, r3
   803a6:	d20a      	bcs.n	803be <Reset_Handler+0x4a>
   803a8:	3b01      	subs	r3, #1
   803aa:	1a9b      	subs	r3, r3, r2
   803ac:	f023 0303 	bic.w	r3, r3, #3
   803b0:	3304      	adds	r3, #4
   803b2:	4413      	add	r3, r2
   803b4:	2100      	movs	r1, #0
   803b6:	f842 1b04 	str.w	r1, [r2], #4
   803ba:	4293      	cmp	r3, r2
   803bc:	d1fb      	bne.n	803b6 <Reset_Handler+0x42>
   803be:	4b0b      	ldr	r3, [pc, #44]	; (803ec <Reset_Handler+0x78>)
   803c0:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   803c4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   803c8:	4a09      	ldr	r2, [pc, #36]	; (803f0 <Reset_Handler+0x7c>)
   803ca:	6093      	str	r3, [r2, #8]
   803cc:	4b09      	ldr	r3, [pc, #36]	; (803f4 <Reset_Handler+0x80>)
   803ce:	4798      	blx	r3
   803d0:	4b09      	ldr	r3, [pc, #36]	; (803f8 <Reset_Handler+0x84>)
   803d2:	4798      	blx	r3
   803d4:	e7fe      	b.n	803d4 <Reset_Handler+0x60>
   803d6:	bf00      	nop
   803d8:	20000000 	.word	0x20000000
   803dc:	00081c80 	.word	0x00081c80
   803e0:	20000434 	.word	0x20000434
   803e4:	200004c8 	.word	0x200004c8
   803e8:	20000434 	.word	0x20000434
   803ec:	00080000 	.word	0x00080000
   803f0:	e000ed00 	.word	0xe000ed00
   803f4:	00081a15 	.word	0x00081a15
   803f8:	000804a1 	.word	0x000804a1

000803fc <SystemInit>:
   803fc:	f44f 6380 	mov.w	r3, #1024	; 0x400
   80400:	4a20      	ldr	r2, [pc, #128]	; (80484 <SystemInit+0x88>)
   80402:	6013      	str	r3, [r2, #0]
   80404:	f502 7200 	add.w	r2, r2, #512	; 0x200
   80408:	6013      	str	r3, [r2, #0]
   8040a:	4b1f      	ldr	r3, [pc, #124]	; (80488 <SystemInit+0x8c>)
   8040c:	6a1b      	ldr	r3, [r3, #32]
   8040e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80412:	d107      	bne.n	80424 <SystemInit+0x28>
   80414:	4a1d      	ldr	r2, [pc, #116]	; (8048c <SystemInit+0x90>)
   80416:	4b1c      	ldr	r3, [pc, #112]	; (80488 <SystemInit+0x8c>)
   80418:	621a      	str	r2, [r3, #32]
   8041a:	461a      	mov	r2, r3
   8041c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8041e:	f013 0f01 	tst.w	r3, #1
   80422:	d0fb      	beq.n	8041c <SystemInit+0x20>
   80424:	4a1a      	ldr	r2, [pc, #104]	; (80490 <SystemInit+0x94>)
   80426:	4b18      	ldr	r3, [pc, #96]	; (80488 <SystemInit+0x8c>)
   80428:	621a      	str	r2, [r3, #32]
   8042a:	461a      	mov	r2, r3
   8042c:	6e93      	ldr	r3, [r2, #104]	; 0x68
   8042e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
   80432:	d0fb      	beq.n	8042c <SystemInit+0x30>
   80434:	4a14      	ldr	r2, [pc, #80]	; (80488 <SystemInit+0x8c>)
   80436:	6b13      	ldr	r3, [r2, #48]	; 0x30
   80438:	f023 0303 	bic.w	r3, r3, #3
   8043c:	f043 0301 	orr.w	r3, r3, #1
   80440:	6313      	str	r3, [r2, #48]	; 0x30
   80442:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80444:	f013 0f08 	tst.w	r3, #8
   80448:	d0fb      	beq.n	80442 <SystemInit+0x46>
   8044a:	4a12      	ldr	r2, [pc, #72]	; (80494 <SystemInit+0x98>)
   8044c:	4b0e      	ldr	r3, [pc, #56]	; (80488 <SystemInit+0x8c>)
   8044e:	629a      	str	r2, [r3, #40]	; 0x28
   80450:	461a      	mov	r2, r3
   80452:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80454:	f013 0f02 	tst.w	r3, #2
   80458:	d0fb      	beq.n	80452 <SystemInit+0x56>
   8045a:	2211      	movs	r2, #17
   8045c:	4b0a      	ldr	r3, [pc, #40]	; (80488 <SystemInit+0x8c>)
   8045e:	631a      	str	r2, [r3, #48]	; 0x30
   80460:	461a      	mov	r2, r3
   80462:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80464:	f013 0f08 	tst.w	r3, #8
   80468:	d0fb      	beq.n	80462 <SystemInit+0x66>
   8046a:	2212      	movs	r2, #18
   8046c:	4b06      	ldr	r3, [pc, #24]	; (80488 <SystemInit+0x8c>)
   8046e:	631a      	str	r2, [r3, #48]	; 0x30
   80470:	461a      	mov	r2, r3
   80472:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80474:	f013 0f08 	tst.w	r3, #8
   80478:	d0fb      	beq.n	80472 <SystemInit+0x76>
   8047a:	4a07      	ldr	r2, [pc, #28]	; (80498 <SystemInit+0x9c>)
   8047c:	4b07      	ldr	r3, [pc, #28]	; (8049c <SystemInit+0xa0>)
   8047e:	601a      	str	r2, [r3, #0]
   80480:	4770      	bx	lr
   80482:	bf00      	nop
   80484:	400e0a00 	.word	0x400e0a00
   80488:	400e0600 	.word	0x400e0600
   8048c:	00370809 	.word	0x00370809
   80490:	01370809 	.word	0x01370809
   80494:	200d3f01 	.word	0x200d3f01
   80498:	0501bd00 	.word	0x0501bd00
   8049c:	20000000 	.word	0x20000000

000804a0 <main>:
#include "motor_controll.h"

#define F_CPU 84E6 //84Mhz

int main(void)
{
   804a0:	b5f0      	push	{r4, r5, r6, r7, lr}
   804a2:	b083      	sub	sp, #12
    /* Initialize the SAM system */
    SystemInit();
   804a4:	4b11      	ldr	r3, [pc, #68]	; (804ec <main+0x4c>)
   804a6:	4798      	blx	r3
    configure_uart();
   804a8:	4b11      	ldr	r3, [pc, #68]	; (804f0 <main+0x50>)
   804aa:	4798      	blx	r3
	servo_pwm_init();
   804ac:	4b11      	ldr	r3, [pc, #68]	; (804f4 <main+0x54>)
   804ae:	4798      	blx	r3
	motor_init_DAC();
   804b0:	4b11      	ldr	r3, [pc, #68]	; (804f8 <main+0x58>)
   804b2:	4798      	blx	r3
    
    //init can config     
    uint32_t can_msk = 0x00143555;
    uint8_t can_status = can_init(can_msk, 1, 1);
   804b4:	2201      	movs	r2, #1
   804b6:	4611      	mov	r1, r2
   804b8:	4810      	ldr	r0, [pc, #64]	; (804fc <main+0x5c>)
   804ba:	4b11      	ldr	r3, [pc, #68]	; (80500 <main+0x60>)
   804bc:	4798      	blx	r3
    
    WDT->WDT_MR = WDT_MR_WDDIS; // Dissable watchdog      
   804be:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   804c2:	4b10      	ldr	r3, [pc, #64]	; (80504 <main+0x64>)
   804c4:	605a      	str	r2, [r3, #4]
	//	servo_set_pwm_test();
    
   
    while (1) 
    {
		motor_set_position(received_joystick_data.sliderRight);
   804c6:	4c10      	ldr	r4, [pc, #64]	; (80508 <main+0x68>)
   804c8:	4f10      	ldr	r7, [pc, #64]	; (8050c <main+0x6c>)
		servo_set_angle(received_joystick_data);
   804ca:	4e11      	ldr	r6, [pc, #68]	; (80510 <main+0x70>)
		motor_set_position(received_joystick_data.sliderRight);
   804cc:	68e0      	ldr	r0, [r4, #12]
   804ce:	47b8      	blx	r7
		servo_set_angle(received_joystick_data);
   804d0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
   804d4:	47b0      	blx	r6
        
        //if(mm){
        //    printf("Mailbox budy");
        //}
        
        printf("X = %d Y = %d, joybutton = %d, joydirection = %d, RightSlider = %d \n\r", received_joystick_data.posX, received_joystick_data.posY, received_joystick_data.button_pushed, received_joystick_data.joystick_direction, received_joystick_data.sliderRight);
   804d6:	7a23      	ldrb	r3, [r4, #8]
   804d8:	68e2      	ldr	r2, [r4, #12]
   804da:	9201      	str	r2, [sp, #4]
   804dc:	7a62      	ldrb	r2, [r4, #9]
   804de:	9200      	str	r2, [sp, #0]
   804e0:	6862      	ldr	r2, [r4, #4]
   804e2:	6821      	ldr	r1, [r4, #0]
   804e4:	480b      	ldr	r0, [pc, #44]	; (80514 <main+0x74>)
   804e6:	4d0c      	ldr	r5, [pc, #48]	; (80518 <main+0x78>)
   804e8:	47a8      	blx	r5
   804ea:	e7ef      	b.n	804cc <main+0x2c>
   804ec:	000803fd 	.word	0x000803fd
   804f0:	000809a5 	.word	0x000809a5
   804f4:	00080865 	.word	0x00080865
   804f8:	0008051d 	.word	0x0008051d
   804fc:	00143555 	.word	0x00143555
   80500:	00080161 	.word	0x00080161
   80504:	400e1a50 	.word	0x400e1a50
   80508:	20000450 	.word	0x20000450
   8050c:	00080541 	.word	0x00080541
   80510:	00080941 	.word	0x00080941
   80514:	00081bb0 	.word	0x00081bb0
   80518:	00080841 	.word	0x00080841

0008051c <motor_init_DAC>:
#include "motor_controll.h"


void motor_init_DAC(){
	// Set clock for DACC peripheral
	REG_PMC_PCER1 |= (1<<6);
   8051c:	4a05      	ldr	r2, [pc, #20]	; (80534 <motor_init_DAC+0x18>)
   8051e:	6813      	ldr	r3, [r2, #0]
   80520:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   80524:	6013      	str	r3, [r2, #0]
	
	//Set DACC MODE REGISTER, free running mode
	REG_DACC_MR = 0x05012000; //0x050012000
   80526:	4a04      	ldr	r2, [pc, #16]	; (80538 <motor_init_DAC+0x1c>)
   80528:	4b04      	ldr	r3, [pc, #16]	; (8053c <motor_init_DAC+0x20>)
   8052a:	601a      	str	r2, [r3, #0]
	
	//Set DAC channel to channel 1
	REG_DACC_CHER = 0b10;
   8052c:	2202      	movs	r2, #2
   8052e:	330c      	adds	r3, #12
   80530:	601a      	str	r2, [r3, #0]
   80532:	4770      	bx	lr
   80534:	400e0700 	.word	0x400e0700
   80538:	05012000 	.word	0x05012000
   8053c:	400c8004 	.word	0x400c8004

00080540 <motor_set_position>:
}

void motor_set_position(int position){
   80540:	b510      	push	{r4, lr}
	int register_value = (4095.0/255.0)* position;
   80542:	4b09      	ldr	r3, [pc, #36]	; (80568 <motor_set_position+0x28>)
   80544:	4798      	blx	r3
   80546:	a306      	add	r3, pc, #24	; (adr r3, 80560 <motor_set_position+0x20>)
   80548:	e9d3 2300 	ldrd	r2, r3, [r3]
   8054c:	4c07      	ldr	r4, [pc, #28]	; (8056c <motor_set_position+0x2c>)
   8054e:	47a0      	blx	r4
   80550:	4b07      	ldr	r3, [pc, #28]	; (80570 <motor_set_position+0x30>)
   80552:	4798      	blx	r3
	
	REG_DACC_CDR = register_value;
   80554:	4b07      	ldr	r3, [pc, #28]	; (80574 <motor_set_position+0x34>)
   80556:	6018      	str	r0, [r3, #0]
   80558:	bd10      	pop	{r4, pc}
   8055a:	bf00      	nop
   8055c:	f3af 8000 	nop.w
   80560:	0f0f0f0f 	.word	0x0f0f0f0f
   80564:	40300f0f 	.word	0x40300f0f
   80568:	00080d3d 	.word	0x00080d3d
   8056c:	00080e09 	.word	0x00080e09
   80570:	0008133d 	.word	0x0008133d
   80574:	400c8020 	.word	0x400c8020

00080578 <prints>:
   80578:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8057c:	460d      	mov	r5, r1
   8057e:	1e16      	subs	r6, r2, #0
   80580:	dd48      	ble.n	80614 <prints+0x9c>
   80582:	780a      	ldrb	r2, [r1, #0]
   80584:	2a00      	cmp	r2, #0
   80586:	d035      	beq.n	805f4 <prints+0x7c>
   80588:	460a      	mov	r2, r1
   8058a:	2400      	movs	r4, #0
   8058c:	3401      	adds	r4, #1
   8058e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
   80592:	2900      	cmp	r1, #0
   80594:	d1fa      	bne.n	8058c <prints+0x14>
   80596:	42a6      	cmp	r6, r4
   80598:	dc2d      	bgt.n	805f6 <prints+0x7e>
   8059a:	2400      	movs	r4, #0
   8059c:	f003 0202 	and.w	r2, r3, #2
   805a0:	2a00      	cmp	r2, #0
   805a2:	bf0c      	ite	eq
   805a4:	f04f 0820 	moveq.w	r8, #32
   805a8:	f04f 0830 	movne.w	r8, #48	; 0x30
   805ac:	f013 0301 	ands.w	r3, r3, #1
   805b0:	d123      	bne.n	805fa <prints+0x82>
   805b2:	2c00      	cmp	r4, #0
   805b4:	dd28      	ble.n	80608 <prints+0x90>
   805b6:	4626      	mov	r6, r4
   805b8:	fa5f f988 	uxtb.w	r9, r8
   805bc:	4f18      	ldr	r7, [pc, #96]	; (80620 <prints+0xa8>)
   805be:	4648      	mov	r0, r9
   805c0:	47b8      	blx	r7
   805c2:	3e01      	subs	r6, #1
   805c4:	d1fb      	bne.n	805be <prints+0x46>
   805c6:	7828      	ldrb	r0, [r5, #0]
   805c8:	b188      	cbz	r0, 805ee <prints+0x76>
   805ca:	4f15      	ldr	r7, [pc, #84]	; (80620 <prints+0xa8>)
   805cc:	47b8      	blx	r7
   805ce:	3401      	adds	r4, #1
   805d0:	f815 0f01 	ldrb.w	r0, [r5, #1]!
   805d4:	2800      	cmp	r0, #0
   805d6:	d1f9      	bne.n	805cc <prints+0x54>
   805d8:	2e00      	cmp	r6, #0
   805da:	dd08      	ble.n	805ee <prints+0x76>
   805dc:	4635      	mov	r5, r6
   805de:	fa5f f888 	uxtb.w	r8, r8
   805e2:	4f0f      	ldr	r7, [pc, #60]	; (80620 <prints+0xa8>)
   805e4:	4640      	mov	r0, r8
   805e6:	47b8      	blx	r7
   805e8:	3d01      	subs	r5, #1
   805ea:	d1fb      	bne.n	805e4 <prints+0x6c>
   805ec:	4434      	add	r4, r6
   805ee:	4620      	mov	r0, r4
   805f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   805f4:	2400      	movs	r4, #0
   805f6:	1b34      	subs	r4, r6, r4
   805f8:	e7d0      	b.n	8059c <prints+0x24>
   805fa:	4626      	mov	r6, r4
   805fc:	7828      	ldrb	r0, [r5, #0]
   805fe:	b108      	cbz	r0, 80604 <prints+0x8c>
   80600:	2400      	movs	r4, #0
   80602:	e7e2      	b.n	805ca <prints+0x52>
   80604:	2400      	movs	r4, #0
   80606:	e7e7      	b.n	805d8 <prints+0x60>
   80608:	4626      	mov	r6, r4
   8060a:	461c      	mov	r4, r3
   8060c:	e7db      	b.n	805c6 <prints+0x4e>
   8060e:	f04f 0820 	mov.w	r8, #32
   80612:	e7d8      	b.n	805c6 <prints+0x4e>
   80614:	f013 0401 	ands.w	r4, r3, #1
   80618:	d0f9      	beq.n	8060e <prints+0x96>
   8061a:	f04f 0820 	mov.w	r8, #32
   8061e:	e7ed      	b.n	805fc <prints+0x84>
   80620:	00080a0d 	.word	0x00080a0d

00080624 <printi>:
   80624:	b5f0      	push	{r4, r5, r6, r7, lr}
   80626:	b085      	sub	sp, #20
   80628:	4607      	mov	r7, r0
   8062a:	b381      	cbz	r1, 8068e <printi+0x6a>
   8062c:	460c      	mov	r4, r1
   8062e:	b10b      	cbz	r3, 80634 <printi+0x10>
   80630:	2a0a      	cmp	r2, #10
   80632:	d038      	beq.n	806a6 <printi+0x82>
   80634:	2300      	movs	r3, #0
   80636:	f88d 300f 	strb.w	r3, [sp, #15]
   8063a:	2600      	movs	r6, #0
   8063c:	2900      	cmp	r1, #0
   8063e:	d046      	beq.n	806ce <printi+0xaa>
   80640:	f10d 050f 	add.w	r5, sp, #15
   80644:	990c      	ldr	r1, [sp, #48]	; 0x30
   80646:	393a      	subs	r1, #58	; 0x3a
   80648:	fbb4 f3f2 	udiv	r3, r4, r2
   8064c:	fb02 4313 	mls	r3, r2, r3, r4
   80650:	2b09      	cmp	r3, #9
   80652:	bfc8      	it	gt
   80654:	185b      	addgt	r3, r3, r1
   80656:	3330      	adds	r3, #48	; 0x30
   80658:	f805 3d01 	strb.w	r3, [r5, #-1]!
   8065c:	fbb4 f4f2 	udiv	r4, r4, r2
   80660:	2c00      	cmp	r4, #0
   80662:	d1f1      	bne.n	80648 <printi+0x24>
   80664:	b156      	cbz	r6, 8067c <printi+0x58>
   80666:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   80668:	b11b      	cbz	r3, 80672 <printi+0x4e>
   8066a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8066c:	f013 0f02 	tst.w	r3, #2
   80670:	d125      	bne.n	806be <printi+0x9a>
   80672:	232d      	movs	r3, #45	; 0x2d
   80674:	f805 3c01 	strb.w	r3, [r5, #-1]
   80678:	3d01      	subs	r5, #1
   8067a:	2600      	movs	r6, #0
   8067c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8067e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   80680:	4629      	mov	r1, r5
   80682:	4638      	mov	r0, r7
   80684:	4c14      	ldr	r4, [pc, #80]	; (806d8 <printi+0xb4>)
   80686:	47a0      	blx	r4
   80688:	4430      	add	r0, r6
   8068a:	b005      	add	sp, #20
   8068c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8068e:	2330      	movs	r3, #48	; 0x30
   80690:	f88d 3004 	strb.w	r3, [sp, #4]
   80694:	2300      	movs	r3, #0
   80696:	f88d 3005 	strb.w	r3, [sp, #5]
   8069a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8069c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8069e:	a901      	add	r1, sp, #4
   806a0:	4c0d      	ldr	r4, [pc, #52]	; (806d8 <printi+0xb4>)
   806a2:	47a0      	blx	r4
   806a4:	e7f1      	b.n	8068a <printi+0x66>
   806a6:	2900      	cmp	r1, #0
   806a8:	dac4      	bge.n	80634 <printi+0x10>
   806aa:	424c      	negs	r4, r1
   806ac:	2300      	movs	r3, #0
   806ae:	f88d 300f 	strb.w	r3, [sp, #15]
   806b2:	f10d 050f 	add.w	r5, sp, #15
   806b6:	2c00      	cmp	r4, #0
   806b8:	d0d5      	beq.n	80666 <printi+0x42>
   806ba:	2601      	movs	r6, #1
   806bc:	e7c0      	b.n	80640 <printi+0x1c>
   806be:	202d      	movs	r0, #45	; 0x2d
   806c0:	4b06      	ldr	r3, [pc, #24]	; (806dc <printi+0xb8>)
   806c2:	4798      	blx	r3
   806c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   806c6:	3b01      	subs	r3, #1
   806c8:	930a      	str	r3, [sp, #40]	; 0x28
   806ca:	2601      	movs	r6, #1
   806cc:	e7d6      	b.n	8067c <printi+0x58>
   806ce:	461e      	mov	r6, r3
   806d0:	f10d 050f 	add.w	r5, sp, #15
   806d4:	e7d2      	b.n	8067c <printi+0x58>
   806d6:	bf00      	nop
   806d8:	00080579 	.word	0x00080579
   806dc:	00080a0d 	.word	0x00080a0d

000806e0 <print>:
   806e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   806e4:	b087      	sub	sp, #28
   806e6:	4680      	mov	r8, r0
   806e8:	780b      	ldrb	r3, [r1, #0]
   806ea:	2b00      	cmp	r3, #0
   806ec:	f000 8094 	beq.w	80818 <print+0x138>
   806f0:	468b      	mov	fp, r1
   806f2:	4617      	mov	r7, r2
   806f4:	2500      	movs	r5, #0
   806f6:	4e4e      	ldr	r6, [pc, #312]	; (80830 <print+0x150>)
   806f8:	f8df a13c 	ldr.w	sl, [pc, #316]	; 80838 <print+0x158>
   806fc:	f8df 913c 	ldr.w	r9, [pc, #316]	; 8083c <print+0x15c>
   80700:	e046      	b.n	80790 <print+0xb0>
   80702:	2200      	movs	r2, #0
   80704:	e070      	b.n	807e8 <print+0x108>
   80706:	6839      	ldr	r1, [r7, #0]
   80708:	3704      	adds	r7, #4
   8070a:	484a      	ldr	r0, [pc, #296]	; (80834 <print+0x154>)
   8070c:	2900      	cmp	r1, #0
   8070e:	bf08      	it	eq
   80710:	4601      	moveq	r1, r0
   80712:	4640      	mov	r0, r8
   80714:	47d0      	blx	sl
   80716:	4405      	add	r5, r0
   80718:	e035      	b.n	80786 <print+0xa6>
   8071a:	6839      	ldr	r1, [r7, #0]
   8071c:	3704      	adds	r7, #4
   8071e:	2061      	movs	r0, #97	; 0x61
   80720:	9002      	str	r0, [sp, #8]
   80722:	9301      	str	r3, [sp, #4]
   80724:	9200      	str	r2, [sp, #0]
   80726:	2301      	movs	r3, #1
   80728:	220a      	movs	r2, #10
   8072a:	4640      	mov	r0, r8
   8072c:	47c8      	blx	r9
   8072e:	4405      	add	r5, r0
   80730:	e029      	b.n	80786 <print+0xa6>
   80732:	6839      	ldr	r1, [r7, #0]
   80734:	3704      	adds	r7, #4
   80736:	2061      	movs	r0, #97	; 0x61
   80738:	9002      	str	r0, [sp, #8]
   8073a:	9301      	str	r3, [sp, #4]
   8073c:	9200      	str	r2, [sp, #0]
   8073e:	2300      	movs	r3, #0
   80740:	2210      	movs	r2, #16
   80742:	4640      	mov	r0, r8
   80744:	47c8      	blx	r9
   80746:	4405      	add	r5, r0
   80748:	e01d      	b.n	80786 <print+0xa6>
   8074a:	6839      	ldr	r1, [r7, #0]
   8074c:	3704      	adds	r7, #4
   8074e:	2041      	movs	r0, #65	; 0x41
   80750:	9002      	str	r0, [sp, #8]
   80752:	9301      	str	r3, [sp, #4]
   80754:	9200      	str	r2, [sp, #0]
   80756:	2300      	movs	r3, #0
   80758:	2210      	movs	r2, #16
   8075a:	4640      	mov	r0, r8
   8075c:	47c8      	blx	r9
   8075e:	4405      	add	r5, r0
   80760:	e011      	b.n	80786 <print+0xa6>
   80762:	6839      	ldr	r1, [r7, #0]
   80764:	3704      	adds	r7, #4
   80766:	2061      	movs	r0, #97	; 0x61
   80768:	9002      	str	r0, [sp, #8]
   8076a:	9301      	str	r3, [sp, #4]
   8076c:	9200      	str	r2, [sp, #0]
   8076e:	2300      	movs	r3, #0
   80770:	220a      	movs	r2, #10
   80772:	4640      	mov	r0, r8
   80774:	47c8      	blx	r9
   80776:	4405      	add	r5, r0
   80778:	e005      	b.n	80786 <print+0xa6>
   8077a:	46a3      	mov	fp, r4
   8077c:	f89b 0000 	ldrb.w	r0, [fp]
   80780:	47b0      	blx	r6
   80782:	3501      	adds	r5, #1
   80784:	465c      	mov	r4, fp
   80786:	f104 0b01 	add.w	fp, r4, #1
   8078a:	7863      	ldrb	r3, [r4, #1]
   8078c:	2b00      	cmp	r3, #0
   8078e:	d044      	beq.n	8081a <print+0x13a>
   80790:	2b25      	cmp	r3, #37	; 0x25
   80792:	d1f3      	bne.n	8077c <print+0x9c>
   80794:	f10b 0401 	add.w	r4, fp, #1
   80798:	f89b 3001 	ldrb.w	r3, [fp, #1]
   8079c:	2b00      	cmp	r3, #0
   8079e:	d03c      	beq.n	8081a <print+0x13a>
   807a0:	2b25      	cmp	r3, #37	; 0x25
   807a2:	d0ea      	beq.n	8077a <print+0x9a>
   807a4:	2b2d      	cmp	r3, #45	; 0x2d
   807a6:	bf06      	itte	eq
   807a8:	f10b 0402 	addeq.w	r4, fp, #2
   807ac:	2301      	moveq	r3, #1
   807ae:	2300      	movne	r3, #0
   807b0:	7822      	ldrb	r2, [r4, #0]
   807b2:	2a30      	cmp	r2, #48	; 0x30
   807b4:	d105      	bne.n	807c2 <print+0xe2>
   807b6:	f043 0302 	orr.w	r3, r3, #2
   807ba:	f814 2f01 	ldrb.w	r2, [r4, #1]!
   807be:	2a30      	cmp	r2, #48	; 0x30
   807c0:	d0f9      	beq.n	807b6 <print+0xd6>
   807c2:	7821      	ldrb	r1, [r4, #0]
   807c4:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
   807c8:	b2d2      	uxtb	r2, r2
   807ca:	2a09      	cmp	r2, #9
   807cc:	d899      	bhi.n	80702 <print+0x22>
   807ce:	2200      	movs	r2, #0
   807d0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   807d4:	3930      	subs	r1, #48	; 0x30
   807d6:	eb01 0242 	add.w	r2, r1, r2, lsl #1
   807da:	f814 1f01 	ldrb.w	r1, [r4, #1]!
   807de:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
   807e2:	b2c0      	uxtb	r0, r0
   807e4:	2809      	cmp	r0, #9
   807e6:	d9f3      	bls.n	807d0 <print+0xf0>
   807e8:	2973      	cmp	r1, #115	; 0x73
   807ea:	d08c      	beq.n	80706 <print+0x26>
   807ec:	2964      	cmp	r1, #100	; 0x64
   807ee:	d094      	beq.n	8071a <print+0x3a>
   807f0:	2978      	cmp	r1, #120	; 0x78
   807f2:	d09e      	beq.n	80732 <print+0x52>
   807f4:	2958      	cmp	r1, #88	; 0x58
   807f6:	d0a8      	beq.n	8074a <print+0x6a>
   807f8:	2975      	cmp	r1, #117	; 0x75
   807fa:	d0b2      	beq.n	80762 <print+0x82>
   807fc:	2963      	cmp	r1, #99	; 0x63
   807fe:	d1c2      	bne.n	80786 <print+0xa6>
   80800:	6839      	ldr	r1, [r7, #0]
   80802:	3704      	adds	r7, #4
   80804:	f88d 1014 	strb.w	r1, [sp, #20]
   80808:	2100      	movs	r1, #0
   8080a:	f88d 1015 	strb.w	r1, [sp, #21]
   8080e:	a905      	add	r1, sp, #20
   80810:	4640      	mov	r0, r8
   80812:	47d0      	blx	sl
   80814:	4405      	add	r5, r0
   80816:	e7b6      	b.n	80786 <print+0xa6>
   80818:	2500      	movs	r5, #0
   8081a:	f1b8 0f00 	cmp.w	r8, #0
   8081e:	d003      	beq.n	80828 <print+0x148>
   80820:	f8d8 3000 	ldr.w	r3, [r8]
   80824:	2200      	movs	r2, #0
   80826:	701a      	strb	r2, [r3, #0]
   80828:	4628      	mov	r0, r5
   8082a:	b007      	add	sp, #28
   8082c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80830:	00080a0d 	.word	0x00080a0d
   80834:	00081bf8 	.word	0x00081bf8
   80838:	00080579 	.word	0x00080579
   8083c:	00080625 	.word	0x00080625

00080840 <printf>:
   80840:	b40f      	push	{r0, r1, r2, r3}
   80842:	b500      	push	{lr}
   80844:	b083      	sub	sp, #12
   80846:	aa04      	add	r2, sp, #16
   80848:	f852 1b04 	ldr.w	r1, [r2], #4
   8084c:	9201      	str	r2, [sp, #4]
   8084e:	2000      	movs	r0, #0
   80850:	4b03      	ldr	r3, [pc, #12]	; (80860 <printf+0x20>)
   80852:	4798      	blx	r3
   80854:	b003      	add	sp, #12
   80856:	f85d eb04 	ldr.w	lr, [sp], #4
   8085a:	b004      	add	sp, #16
   8085c:	4770      	bx	lr
   8085e:	bf00      	nop
   80860:	000806e1 	.word	0x000806e1

00080864 <servo_pwm_init>:

#include "servo_ctrl.h"

void servo_pwm_init(void){
		//First enable PWM clock
		REG_PMC_PCER1 |= (1<<4);
   80864:	4a0d      	ldr	r2, [pc, #52]	; (8089c <servo_pwm_init+0x38>)
   80866:	6813      	ldr	r3, [r2, #0]
   80868:	f043 0310 	orr.w	r3, r3, #16
   8086c:	6013      	str	r3, [r2, #0]
		
		//Turn of the PIO conteller for pin PC19. PIN 44 on shield.
		PIOC->PIO_PDR |= PIO_PDR_P19;
   8086e:	4b0c      	ldr	r3, [pc, #48]	; (808a0 <servo_pwm_init+0x3c>)
   80870:	685a      	ldr	r2, [r3, #4]
   80872:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   80876:	605a      	str	r2, [r3, #4]
		
		//Choose peripheral B for PC19, PWMH5
		PIOC->PIO_ABSR |= PIO_ABSR_P19;
   80878:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8087a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
   8087e:	671a      	str	r2, [r3, #112]	; 0x70
		
		//Set clock frequency for PWM, 2Mhz, CLKA.
		REG_PWM_CLK = 0x002A0000;
   80880:	f44f 1228 	mov.w	r2, #2752512	; 0x2a0000
   80884:	4b07      	ldr	r3, [pc, #28]	; (808a4 <servo_pwm_init+0x40>)
   80886:	601a      	str	r2, [r3, #0]
		
		//Set channel mode
		REG_PWM_CMR5 = 0x0000000C;
   80888:	220c      	movs	r2, #12
   8088a:	f503 7328 	add.w	r3, r3, #672	; 0x2a0
   8088e:	601a      	str	r2, [r3, #0]
		
		//Set channel period to 20ms
		REG_PWM_CPRD5 = 0x00009C40;
   80890:	f649 4240 	movw	r2, #40000	; 0x9c40
   80894:	330c      	adds	r3, #12
   80896:	601a      	str	r2, [r3, #0]
   80898:	4770      	bx	lr
   8089a:	bf00      	nop
   8089c:	400e0700 	.word	0x400e0700
   808a0:	400e1200 	.word	0x400e1200
   808a4:	40094000 	.word	0x40094000

000808a8 <servo_set_pwm>:
}

int servo_set_pwm(float duty_cycle){
   808a8:	b538      	push	{r3, r4, r5, lr}
   808aa:	4604      	mov	r4, r0
	
	if(duty_cycle < 0.040){
   808ac:	4b16      	ldr	r3, [pc, #88]	; (80908 <servo_set_pwm+0x60>)
   808ae:	4798      	blx	r3
   808b0:	a313      	add	r3, pc, #76	; (adr r3, 80900 <servo_set_pwm+0x58>)
   808b2:	e9d3 2300 	ldrd	r2, r3, [r3]
   808b6:	4d15      	ldr	r5, [pc, #84]	; (8090c <servo_set_pwm+0x64>)
   808b8:	47a8      	blx	r5
   808ba:	b9b8      	cbnz	r0, 808ec <servo_set_pwm+0x44>
		printf("ERROR: duty cycle too low");
		return 1;
	}
	else if(duty_cycle > 110){
   808bc:	4914      	ldr	r1, [pc, #80]	; (80910 <servo_set_pwm+0x68>)
   808be:	4620      	mov	r0, r4
   808c0:	4b14      	ldr	r3, [pc, #80]	; (80914 <servo_set_pwm+0x6c>)
   808c2:	4798      	blx	r3
   808c4:	b9b8      	cbnz	r0, 808f6 <servo_set_pwm+0x4e>
		printf("ERROR: duty cycle too high");
		return 1;
	}
	//Value to be set in duty cycle register
	float CDTY = 2000000*0.02*(1 - duty_cycle); //pwm_clock_frequency*period*(1-duty_cycle)
   808c6:	4621      	mov	r1, r4
   808c8:	f04f 507e 	mov.w	r0, #1065353216	; 0x3f800000
   808cc:	4b12      	ldr	r3, [pc, #72]	; (80918 <servo_set_pwm+0x70>)
   808ce:	4798      	blx	r3
   808d0:	4912      	ldr	r1, [pc, #72]	; (8091c <servo_set_pwm+0x74>)
   808d2:	4b13      	ldr	r3, [pc, #76]	; (80920 <servo_set_pwm+0x78>)
   808d4:	4798      	blx	r3
	
	//Set channel duty register
	REG_PWM_CDTY5 = CDTY;  
   808d6:	4b13      	ldr	r3, [pc, #76]	; (80924 <servo_set_pwm+0x7c>)
   808d8:	4798      	blx	r3
   808da:	4b13      	ldr	r3, [pc, #76]	; (80928 <servo_set_pwm+0x80>)
   808dc:	6018      	str	r0, [r3, #0]
	
	//Activate PWM signal
	REG_PWM_ENA |= 0x00000020;
   808de:	4a13      	ldr	r2, [pc, #76]	; (8092c <servo_set_pwm+0x84>)
   808e0:	6813      	ldr	r3, [r2, #0]
   808e2:	f043 0320 	orr.w	r3, r3, #32
   808e6:	6013      	str	r3, [r2, #0]
	
	return 0;	
   808e8:	2000      	movs	r0, #0
}
   808ea:	bd38      	pop	{r3, r4, r5, pc}
		printf("ERROR: duty cycle too low");
   808ec:	4810      	ldr	r0, [pc, #64]	; (80930 <servo_set_pwm+0x88>)
   808ee:	4b11      	ldr	r3, [pc, #68]	; (80934 <servo_set_pwm+0x8c>)
   808f0:	4798      	blx	r3
		return 1;
   808f2:	2001      	movs	r0, #1
   808f4:	bd38      	pop	{r3, r4, r5, pc}
		printf("ERROR: duty cycle too high");
   808f6:	4810      	ldr	r0, [pc, #64]	; (80938 <servo_set_pwm+0x90>)
   808f8:	4b0e      	ldr	r3, [pc, #56]	; (80934 <servo_set_pwm+0x8c>)
   808fa:	4798      	blx	r3
		return 1;
   808fc:	2001      	movs	r0, #1
   808fe:	bd38      	pop	{r3, r4, r5, pc}
   80900:	47ae147b 	.word	0x47ae147b
   80904:	3fa47ae1 	.word	0x3fa47ae1
   80908:	00080d61 	.word	0x00080d61
   8090c:	000812ed 	.word	0x000812ed
   80910:	42dc0000 	.word	0x42dc0000
   80914:	000819c1 	.word	0x000819c1
   80918:	00081435 	.word	0x00081435
   8091c:	471c4000 	.word	0x471c4000
   80920:	00081649 	.word	0x00081649
   80924:	000819d5 	.word	0x000819d5
   80928:	400942a4 	.word	0x400942a4
   8092c:	40094004 	.word	0x40094004
   80930:	00081c00 	.word	0x00081c00
   80934:	00080841 	.word	0x00080841
   80938:	00081c1c 	.word	0x00081c1c
   8093c:	00000000 	.word	0x00000000

00080940 <servo_set_angle>:

void servo_set_angle(joystick_data_t data){
   80940:	b510      	push	{r4, lr}
   80942:	b084      	sub	sp, #16
   80944:	ac04      	add	r4, sp, #16
   80946:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}

	float servo_position = data.posX;
   8094a:	9800      	ldr	r0, [sp, #0]
   8094c:	4b0c      	ldr	r3, [pc, #48]	; (80980 <servo_set_angle+0x40>)
   8094e:	4798      	blx	r3
	
	 //Linearization of joystick position to pulse with
	float pulse_width = 0.006*servo_position + 1.5; 
   80950:	4b0c      	ldr	r3, [pc, #48]	; (80984 <servo_set_angle+0x44>)
   80952:	4798      	blx	r3
   80954:	a308      	add	r3, pc, #32	; (adr r3, 80978 <servo_set_angle+0x38>)
   80956:	e9d3 2300 	ldrd	r2, r3, [r3]
   8095a:	4c0b      	ldr	r4, [pc, #44]	; (80988 <servo_set_angle+0x48>)
   8095c:	47a0      	blx	r4
   8095e:	2200      	movs	r2, #0
   80960:	4b0a      	ldr	r3, [pc, #40]	; (8098c <servo_set_angle+0x4c>)
   80962:	4c0b      	ldr	r4, [pc, #44]	; (80990 <servo_set_angle+0x50>)
   80964:	47a0      	blx	r4
   80966:	4b0b      	ldr	r3, [pc, #44]	; (80994 <servo_set_angle+0x54>)
   80968:	4798      	blx	r3
	
	float duty_cycle = pulse_width / 20.0; //20.0 is PWM period.
   8096a:	490b      	ldr	r1, [pc, #44]	; (80998 <servo_set_angle+0x58>)
   8096c:	4b0b      	ldr	r3, [pc, #44]	; (8099c <servo_set_angle+0x5c>)
   8096e:	4798      	blx	r3
	
	servo_set_pwm(duty_cycle);
   80970:	4b0b      	ldr	r3, [pc, #44]	; (809a0 <servo_set_angle+0x60>)
   80972:	4798      	blx	r3
}
   80974:	b004      	add	sp, #16
   80976:	bd10      	pop	{r4, pc}
   80978:	bc6a7efa 	.word	0xbc6a7efa
   8097c:	3f789374 	.word	0x3f789374
   80980:	000815a1 	.word	0x000815a1
   80984:	00080d61 	.word	0x00080d61
   80988:	00080e09 	.word	0x00080e09
   8098c:	3ff80000 	.word	0x3ff80000
   80990:	00080aa5 	.word	0x00080aa5
   80994:	0008138d 	.word	0x0008138d
   80998:	41a00000 	.word	0x41a00000
   8099c:	000817b1 	.word	0x000817b1
   809a0:	000808a9 	.word	0x000808a9

000809a4 <configure_uart>:
   809a4:	4b16      	ldr	r3, [pc, #88]	; (80a00 <configure_uart+0x5c>)
   809a6:	2200      	movs	r2, #0
   809a8:	701a      	strb	r2, [r3, #0]
   809aa:	705a      	strb	r2, [r3, #1]
   809ac:	4b15      	ldr	r3, [pc, #84]	; (80a04 <configure_uart+0x60>)
   809ae:	f44f 7140 	mov.w	r1, #768	; 0x300
   809b2:	6459      	str	r1, [r3, #68]	; 0x44
   809b4:	6059      	str	r1, [r3, #4]
   809b6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   809b8:	6f18      	ldr	r0, [r3, #112]	; 0x70
   809ba:	4002      	ands	r2, r0
   809bc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
   809c0:	671a      	str	r2, [r3, #112]	; 0x70
   809c2:	6659      	str	r1, [r3, #100]	; 0x64
   809c4:	f44f 7280 	mov.w	r2, #256	; 0x100
   809c8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
   809cc:	611a      	str	r2, [r3, #16]
   809ce:	f503 7300 	add.w	r3, r3, #512	; 0x200
   809d2:	21ac      	movs	r1, #172	; 0xac
   809d4:	6019      	str	r1, [r3, #0]
   809d6:	f240 2123 	movw	r1, #547	; 0x223
   809da:	6219      	str	r1, [r3, #32]
   809dc:	f44f 6100 	mov.w	r1, #2048	; 0x800
   809e0:	6059      	str	r1, [r3, #4]
   809e2:	f240 2102 	movw	r1, #514	; 0x202
   809e6:	f8c3 1120 	str.w	r1, [r3, #288]	; 0x120
   809ea:	f04f 31ff 	mov.w	r1, #4294967295
   809ee:	60d9      	str	r1, [r3, #12]
   809f0:	21e1      	movs	r1, #225	; 0xe1
   809f2:	6099      	str	r1, [r3, #8]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
   809f4:	4904      	ldr	r1, [pc, #16]	; (80a08 <configure_uart+0x64>)
   809f6:	600a      	str	r2, [r1, #0]
   809f8:	2250      	movs	r2, #80	; 0x50
   809fa:	601a      	str	r2, [r3, #0]
   809fc:	4770      	bx	lr
   809fe:	bf00      	nop
   80a00:	20000460 	.word	0x20000460
   80a04:	400e0e00 	.word	0x400e0e00
   80a08:	e000e100 	.word	0xe000e100

00080a0c <uart_putchar>:
   80a0c:	4b07      	ldr	r3, [pc, #28]	; (80a2c <uart_putchar+0x20>)
   80a0e:	695b      	ldr	r3, [r3, #20]
   80a10:	f013 0f02 	tst.w	r3, #2
   80a14:	d008      	beq.n	80a28 <uart_putchar+0x1c>
   80a16:	4b05      	ldr	r3, [pc, #20]	; (80a2c <uart_putchar+0x20>)
   80a18:	61d8      	str	r0, [r3, #28]
   80a1a:	461a      	mov	r2, r3
   80a1c:	6953      	ldr	r3, [r2, #20]
   80a1e:	f413 7f00 	tst.w	r3, #512	; 0x200
   80a22:	d0fb      	beq.n	80a1c <uart_putchar+0x10>
   80a24:	2000      	movs	r0, #0
   80a26:	4770      	bx	lr
   80a28:	2001      	movs	r0, #1
   80a2a:	4770      	bx	lr
   80a2c:	400e0800 	.word	0x400e0800

00080a30 <UART_Handler>:
   80a30:	b508      	push	{r3, lr}
   80a32:	4b15      	ldr	r3, [pc, #84]	; (80a88 <UART_Handler+0x58>)
   80a34:	695b      	ldr	r3, [r3, #20]
   80a36:	f013 0fe0 	tst.w	r3, #224	; 0xe0
   80a3a:	d003      	beq.n	80a44 <UART_Handler+0x14>
   80a3c:	f44f 71a8 	mov.w	r1, #336	; 0x150
   80a40:	4a11      	ldr	r2, [pc, #68]	; (80a88 <UART_Handler+0x58>)
   80a42:	6011      	str	r1, [r2, #0]
   80a44:	f013 0f01 	tst.w	r3, #1
   80a48:	d012      	beq.n	80a70 <UART_Handler+0x40>
   80a4a:	4810      	ldr	r0, [pc, #64]	; (80a8c <UART_Handler+0x5c>)
   80a4c:	7842      	ldrb	r2, [r0, #1]
   80a4e:	1c53      	adds	r3, r2, #1
   80a50:	4259      	negs	r1, r3
   80a52:	f003 033f 	and.w	r3, r3, #63	; 0x3f
   80a56:	f001 013f 	and.w	r1, r1, #63	; 0x3f
   80a5a:	bf58      	it	pl
   80a5c:	424b      	negpl	r3, r1
   80a5e:	7801      	ldrb	r1, [r0, #0]
   80a60:	428b      	cmp	r3, r1
   80a62:	d006      	beq.n	80a72 <UART_Handler+0x42>
   80a64:	4908      	ldr	r1, [pc, #32]	; (80a88 <UART_Handler+0x58>)
   80a66:	6988      	ldr	r0, [r1, #24]
   80a68:	4908      	ldr	r1, [pc, #32]	; (80a8c <UART_Handler+0x5c>)
   80a6a:	440a      	add	r2, r1
   80a6c:	7090      	strb	r0, [r2, #2]
   80a6e:	704b      	strb	r3, [r1, #1]
   80a70:	bd08      	pop	{r3, pc}
   80a72:	4807      	ldr	r0, [pc, #28]	; (80a90 <UART_Handler+0x60>)
   80a74:	4b07      	ldr	r3, [pc, #28]	; (80a94 <UART_Handler+0x64>)
   80a76:	4798      	blx	r3
   80a78:	4b03      	ldr	r3, [pc, #12]	; (80a88 <UART_Handler+0x58>)
   80a7a:	699a      	ldr	r2, [r3, #24]
   80a7c:	4b03      	ldr	r3, [pc, #12]	; (80a8c <UART_Handler+0x5c>)
   80a7e:	7859      	ldrb	r1, [r3, #1]
   80a80:	440b      	add	r3, r1
   80a82:	709a      	strb	r2, [r3, #2]
   80a84:	bd08      	pop	{r3, pc}
   80a86:	bf00      	nop
   80a88:	400e0800 	.word	0x400e0800
   80a8c:	20000460 	.word	0x20000460
   80a90:	00081c38 	.word	0x00081c38
   80a94:	00080841 	.word	0x00080841

00080a98 <__aeabi_drsub>:
   80a98:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   80a9c:	e002      	b.n	80aa4 <__adddf3>
   80a9e:	bf00      	nop

00080aa0 <__aeabi_dsub>:
   80aa0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00080aa4 <__adddf3>:
   80aa4:	b530      	push	{r4, r5, lr}
   80aa6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   80aaa:	ea4f 0543 	mov.w	r5, r3, lsl #1
   80aae:	ea94 0f05 	teq	r4, r5
   80ab2:	bf08      	it	eq
   80ab4:	ea90 0f02 	teqeq	r0, r2
   80ab8:	bf1f      	itttt	ne
   80aba:	ea54 0c00 	orrsne.w	ip, r4, r0
   80abe:	ea55 0c02 	orrsne.w	ip, r5, r2
   80ac2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   80ac6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80aca:	f000 80e2 	beq.w	80c92 <__adddf3+0x1ee>
   80ace:	ea4f 5454 	mov.w	r4, r4, lsr #21
   80ad2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   80ad6:	bfb8      	it	lt
   80ad8:	426d      	neglt	r5, r5
   80ada:	dd0c      	ble.n	80af6 <__adddf3+0x52>
   80adc:	442c      	add	r4, r5
   80ade:	ea80 0202 	eor.w	r2, r0, r2
   80ae2:	ea81 0303 	eor.w	r3, r1, r3
   80ae6:	ea82 0000 	eor.w	r0, r2, r0
   80aea:	ea83 0101 	eor.w	r1, r3, r1
   80aee:	ea80 0202 	eor.w	r2, r0, r2
   80af2:	ea81 0303 	eor.w	r3, r1, r3
   80af6:	2d36      	cmp	r5, #54	; 0x36
   80af8:	bf88      	it	hi
   80afa:	bd30      	pophi	{r4, r5, pc}
   80afc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   80b00:	ea4f 3101 	mov.w	r1, r1, lsl #12
   80b04:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   80b08:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   80b0c:	d002      	beq.n	80b14 <__adddf3+0x70>
   80b0e:	4240      	negs	r0, r0
   80b10:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80b14:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   80b18:	ea4f 3303 	mov.w	r3, r3, lsl #12
   80b1c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   80b20:	d002      	beq.n	80b28 <__adddf3+0x84>
   80b22:	4252      	negs	r2, r2
   80b24:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   80b28:	ea94 0f05 	teq	r4, r5
   80b2c:	f000 80a7 	beq.w	80c7e <__adddf3+0x1da>
   80b30:	f1a4 0401 	sub.w	r4, r4, #1
   80b34:	f1d5 0e20 	rsbs	lr, r5, #32
   80b38:	db0d      	blt.n	80b56 <__adddf3+0xb2>
   80b3a:	fa02 fc0e 	lsl.w	ip, r2, lr
   80b3e:	fa22 f205 	lsr.w	r2, r2, r5
   80b42:	1880      	adds	r0, r0, r2
   80b44:	f141 0100 	adc.w	r1, r1, #0
   80b48:	fa03 f20e 	lsl.w	r2, r3, lr
   80b4c:	1880      	adds	r0, r0, r2
   80b4e:	fa43 f305 	asr.w	r3, r3, r5
   80b52:	4159      	adcs	r1, r3
   80b54:	e00e      	b.n	80b74 <__adddf3+0xd0>
   80b56:	f1a5 0520 	sub.w	r5, r5, #32
   80b5a:	f10e 0e20 	add.w	lr, lr, #32
   80b5e:	2a01      	cmp	r2, #1
   80b60:	fa03 fc0e 	lsl.w	ip, r3, lr
   80b64:	bf28      	it	cs
   80b66:	f04c 0c02 	orrcs.w	ip, ip, #2
   80b6a:	fa43 f305 	asr.w	r3, r3, r5
   80b6e:	18c0      	adds	r0, r0, r3
   80b70:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   80b74:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80b78:	d507      	bpl.n	80b8a <__adddf3+0xe6>
   80b7a:	f04f 0e00 	mov.w	lr, #0
   80b7e:	f1dc 0c00 	rsbs	ip, ip, #0
   80b82:	eb7e 0000 	sbcs.w	r0, lr, r0
   80b86:	eb6e 0101 	sbc.w	r1, lr, r1
   80b8a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   80b8e:	d31b      	bcc.n	80bc8 <__adddf3+0x124>
   80b90:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   80b94:	d30c      	bcc.n	80bb0 <__adddf3+0x10c>
   80b96:	0849      	lsrs	r1, r1, #1
   80b98:	ea5f 0030 	movs.w	r0, r0, rrx
   80b9c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   80ba0:	f104 0401 	add.w	r4, r4, #1
   80ba4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   80ba8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   80bac:	f080 809a 	bcs.w	80ce4 <__adddf3+0x240>
   80bb0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   80bb4:	bf08      	it	eq
   80bb6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   80bba:	f150 0000 	adcs.w	r0, r0, #0
   80bbe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80bc2:	ea41 0105 	orr.w	r1, r1, r5
   80bc6:	bd30      	pop	{r4, r5, pc}
   80bc8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   80bcc:	4140      	adcs	r0, r0
   80bce:	eb41 0101 	adc.w	r1, r1, r1
   80bd2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80bd6:	f1a4 0401 	sub.w	r4, r4, #1
   80bda:	d1e9      	bne.n	80bb0 <__adddf3+0x10c>
   80bdc:	f091 0f00 	teq	r1, #0
   80be0:	bf04      	itt	eq
   80be2:	4601      	moveq	r1, r0
   80be4:	2000      	moveq	r0, #0
   80be6:	fab1 f381 	clz	r3, r1
   80bea:	bf08      	it	eq
   80bec:	3320      	addeq	r3, #32
   80bee:	f1a3 030b 	sub.w	r3, r3, #11
   80bf2:	f1b3 0220 	subs.w	r2, r3, #32
   80bf6:	da0c      	bge.n	80c12 <__adddf3+0x16e>
   80bf8:	320c      	adds	r2, #12
   80bfa:	dd08      	ble.n	80c0e <__adddf3+0x16a>
   80bfc:	f102 0c14 	add.w	ip, r2, #20
   80c00:	f1c2 020c 	rsb	r2, r2, #12
   80c04:	fa01 f00c 	lsl.w	r0, r1, ip
   80c08:	fa21 f102 	lsr.w	r1, r1, r2
   80c0c:	e00c      	b.n	80c28 <__adddf3+0x184>
   80c0e:	f102 0214 	add.w	r2, r2, #20
   80c12:	bfd8      	it	le
   80c14:	f1c2 0c20 	rsble	ip, r2, #32
   80c18:	fa01 f102 	lsl.w	r1, r1, r2
   80c1c:	fa20 fc0c 	lsr.w	ip, r0, ip
   80c20:	bfdc      	itt	le
   80c22:	ea41 010c 	orrle.w	r1, r1, ip
   80c26:	4090      	lslle	r0, r2
   80c28:	1ae4      	subs	r4, r4, r3
   80c2a:	bfa2      	ittt	ge
   80c2c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   80c30:	4329      	orrge	r1, r5
   80c32:	bd30      	popge	{r4, r5, pc}
   80c34:	ea6f 0404 	mvn.w	r4, r4
   80c38:	3c1f      	subs	r4, #31
   80c3a:	da1c      	bge.n	80c76 <__adddf3+0x1d2>
   80c3c:	340c      	adds	r4, #12
   80c3e:	dc0e      	bgt.n	80c5e <__adddf3+0x1ba>
   80c40:	f104 0414 	add.w	r4, r4, #20
   80c44:	f1c4 0220 	rsb	r2, r4, #32
   80c48:	fa20 f004 	lsr.w	r0, r0, r4
   80c4c:	fa01 f302 	lsl.w	r3, r1, r2
   80c50:	ea40 0003 	orr.w	r0, r0, r3
   80c54:	fa21 f304 	lsr.w	r3, r1, r4
   80c58:	ea45 0103 	orr.w	r1, r5, r3
   80c5c:	bd30      	pop	{r4, r5, pc}
   80c5e:	f1c4 040c 	rsb	r4, r4, #12
   80c62:	f1c4 0220 	rsb	r2, r4, #32
   80c66:	fa20 f002 	lsr.w	r0, r0, r2
   80c6a:	fa01 f304 	lsl.w	r3, r1, r4
   80c6e:	ea40 0003 	orr.w	r0, r0, r3
   80c72:	4629      	mov	r1, r5
   80c74:	bd30      	pop	{r4, r5, pc}
   80c76:	fa21 f004 	lsr.w	r0, r1, r4
   80c7a:	4629      	mov	r1, r5
   80c7c:	bd30      	pop	{r4, r5, pc}
   80c7e:	f094 0f00 	teq	r4, #0
   80c82:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   80c86:	bf06      	itte	eq
   80c88:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   80c8c:	3401      	addeq	r4, #1
   80c8e:	3d01      	subne	r5, #1
   80c90:	e74e      	b.n	80b30 <__adddf3+0x8c>
   80c92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80c96:	bf18      	it	ne
   80c98:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   80c9c:	d029      	beq.n	80cf2 <__adddf3+0x24e>
   80c9e:	ea94 0f05 	teq	r4, r5
   80ca2:	bf08      	it	eq
   80ca4:	ea90 0f02 	teqeq	r0, r2
   80ca8:	d005      	beq.n	80cb6 <__adddf3+0x212>
   80caa:	ea54 0c00 	orrs.w	ip, r4, r0
   80cae:	bf04      	itt	eq
   80cb0:	4619      	moveq	r1, r3
   80cb2:	4610      	moveq	r0, r2
   80cb4:	bd30      	pop	{r4, r5, pc}
   80cb6:	ea91 0f03 	teq	r1, r3
   80cba:	bf1e      	ittt	ne
   80cbc:	2100      	movne	r1, #0
   80cbe:	2000      	movne	r0, #0
   80cc0:	bd30      	popne	{r4, r5, pc}
   80cc2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   80cc6:	d105      	bne.n	80cd4 <__adddf3+0x230>
   80cc8:	0040      	lsls	r0, r0, #1
   80cca:	4149      	adcs	r1, r1
   80ccc:	bf28      	it	cs
   80cce:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   80cd2:	bd30      	pop	{r4, r5, pc}
   80cd4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   80cd8:	bf3c      	itt	cc
   80cda:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   80cde:	bd30      	popcc	{r4, r5, pc}
   80ce0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80ce4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   80ce8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   80cec:	f04f 0000 	mov.w	r0, #0
   80cf0:	bd30      	pop	{r4, r5, pc}
   80cf2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   80cf6:	bf1a      	itte	ne
   80cf8:	4619      	movne	r1, r3
   80cfa:	4610      	movne	r0, r2
   80cfc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   80d00:	bf1c      	itt	ne
   80d02:	460b      	movne	r3, r1
   80d04:	4602      	movne	r2, r0
   80d06:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   80d0a:	bf06      	itte	eq
   80d0c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   80d10:	ea91 0f03 	teqeq	r1, r3
   80d14:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   80d18:	bd30      	pop	{r4, r5, pc}
   80d1a:	bf00      	nop

00080d1c <__aeabi_ui2d>:
   80d1c:	f090 0f00 	teq	r0, #0
   80d20:	bf04      	itt	eq
   80d22:	2100      	moveq	r1, #0
   80d24:	4770      	bxeq	lr
   80d26:	b530      	push	{r4, r5, lr}
   80d28:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80d2c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80d30:	f04f 0500 	mov.w	r5, #0
   80d34:	f04f 0100 	mov.w	r1, #0
   80d38:	e750      	b.n	80bdc <__adddf3+0x138>
   80d3a:	bf00      	nop

00080d3c <__aeabi_i2d>:
   80d3c:	f090 0f00 	teq	r0, #0
   80d40:	bf04      	itt	eq
   80d42:	2100      	moveq	r1, #0
   80d44:	4770      	bxeq	lr
   80d46:	b530      	push	{r4, r5, lr}
   80d48:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80d4c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80d50:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   80d54:	bf48      	it	mi
   80d56:	4240      	negmi	r0, r0
   80d58:	f04f 0100 	mov.w	r1, #0
   80d5c:	e73e      	b.n	80bdc <__adddf3+0x138>
   80d5e:	bf00      	nop

00080d60 <__aeabi_f2d>:
   80d60:	0042      	lsls	r2, r0, #1
   80d62:	ea4f 01e2 	mov.w	r1, r2, asr #3
   80d66:	ea4f 0131 	mov.w	r1, r1, rrx
   80d6a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   80d6e:	bf1f      	itttt	ne
   80d70:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   80d74:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   80d78:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   80d7c:	4770      	bxne	lr
   80d7e:	f092 0f00 	teq	r2, #0
   80d82:	bf14      	ite	ne
   80d84:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   80d88:	4770      	bxeq	lr
   80d8a:	b530      	push	{r4, r5, lr}
   80d8c:	f44f 7460 	mov.w	r4, #896	; 0x380
   80d90:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   80d94:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   80d98:	e720      	b.n	80bdc <__adddf3+0x138>
   80d9a:	bf00      	nop

00080d9c <__aeabi_ul2d>:
   80d9c:	ea50 0201 	orrs.w	r2, r0, r1
   80da0:	bf08      	it	eq
   80da2:	4770      	bxeq	lr
   80da4:	b530      	push	{r4, r5, lr}
   80da6:	f04f 0500 	mov.w	r5, #0
   80daa:	e00a      	b.n	80dc2 <__aeabi_l2d+0x16>

00080dac <__aeabi_l2d>:
   80dac:	ea50 0201 	orrs.w	r2, r0, r1
   80db0:	bf08      	it	eq
   80db2:	4770      	bxeq	lr
   80db4:	b530      	push	{r4, r5, lr}
   80db6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   80dba:	d502      	bpl.n	80dc2 <__aeabi_l2d+0x16>
   80dbc:	4240      	negs	r0, r0
   80dbe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   80dc2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   80dc6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   80dca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   80dce:	f43f aedc 	beq.w	80b8a <__adddf3+0xe6>
   80dd2:	f04f 0203 	mov.w	r2, #3
   80dd6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   80dda:	bf18      	it	ne
   80ddc:	3203      	addne	r2, #3
   80dde:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   80de2:	bf18      	it	ne
   80de4:	3203      	addne	r2, #3
   80de6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   80dea:	f1c2 0320 	rsb	r3, r2, #32
   80dee:	fa00 fc03 	lsl.w	ip, r0, r3
   80df2:	fa20 f002 	lsr.w	r0, r0, r2
   80df6:	fa01 fe03 	lsl.w	lr, r1, r3
   80dfa:	ea40 000e 	orr.w	r0, r0, lr
   80dfe:	fa21 f102 	lsr.w	r1, r1, r2
   80e02:	4414      	add	r4, r2
   80e04:	e6c1      	b.n	80b8a <__adddf3+0xe6>
   80e06:	bf00      	nop

00080e08 <__aeabi_dmul>:
   80e08:	b570      	push	{r4, r5, r6, lr}
   80e0a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   80e0e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   80e12:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   80e16:	bf1d      	ittte	ne
   80e18:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   80e1c:	ea94 0f0c 	teqne	r4, ip
   80e20:	ea95 0f0c 	teqne	r5, ip
   80e24:	f000 f8de 	bleq	80fe4 <__aeabi_dmul+0x1dc>
   80e28:	442c      	add	r4, r5
   80e2a:	ea81 0603 	eor.w	r6, r1, r3
   80e2e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   80e32:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   80e36:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   80e3a:	bf18      	it	ne
   80e3c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   80e40:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   80e44:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   80e48:	d038      	beq.n	80ebc <__aeabi_dmul+0xb4>
   80e4a:	fba0 ce02 	umull	ip, lr, r0, r2
   80e4e:	f04f 0500 	mov.w	r5, #0
   80e52:	fbe1 e502 	umlal	lr, r5, r1, r2
   80e56:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   80e5a:	fbe0 e503 	umlal	lr, r5, r0, r3
   80e5e:	f04f 0600 	mov.w	r6, #0
   80e62:	fbe1 5603 	umlal	r5, r6, r1, r3
   80e66:	f09c 0f00 	teq	ip, #0
   80e6a:	bf18      	it	ne
   80e6c:	f04e 0e01 	orrne.w	lr, lr, #1
   80e70:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   80e74:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   80e78:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   80e7c:	d204      	bcs.n	80e88 <__aeabi_dmul+0x80>
   80e7e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   80e82:	416d      	adcs	r5, r5
   80e84:	eb46 0606 	adc.w	r6, r6, r6
   80e88:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   80e8c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   80e90:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   80e94:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   80e98:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   80e9c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   80ea0:	bf88      	it	hi
   80ea2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   80ea6:	d81e      	bhi.n	80ee6 <__aeabi_dmul+0xde>
   80ea8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   80eac:	bf08      	it	eq
   80eae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   80eb2:	f150 0000 	adcs.w	r0, r0, #0
   80eb6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   80eba:	bd70      	pop	{r4, r5, r6, pc}
   80ebc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   80ec0:	ea46 0101 	orr.w	r1, r6, r1
   80ec4:	ea40 0002 	orr.w	r0, r0, r2
   80ec8:	ea81 0103 	eor.w	r1, r1, r3
   80ecc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   80ed0:	bfc2      	ittt	gt
   80ed2:	ebd4 050c 	rsbsgt	r5, r4, ip
   80ed6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   80eda:	bd70      	popgt	{r4, r5, r6, pc}
   80edc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   80ee0:	f04f 0e00 	mov.w	lr, #0
   80ee4:	3c01      	subs	r4, #1
   80ee6:	f300 80ab 	bgt.w	81040 <__aeabi_dmul+0x238>
   80eea:	f114 0f36 	cmn.w	r4, #54	; 0x36
   80eee:	bfde      	ittt	le
   80ef0:	2000      	movle	r0, #0
   80ef2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   80ef6:	bd70      	pople	{r4, r5, r6, pc}
   80ef8:	f1c4 0400 	rsb	r4, r4, #0
   80efc:	3c20      	subs	r4, #32
   80efe:	da35      	bge.n	80f6c <__aeabi_dmul+0x164>
   80f00:	340c      	adds	r4, #12
   80f02:	dc1b      	bgt.n	80f3c <__aeabi_dmul+0x134>
   80f04:	f104 0414 	add.w	r4, r4, #20
   80f08:	f1c4 0520 	rsb	r5, r4, #32
   80f0c:	fa00 f305 	lsl.w	r3, r0, r5
   80f10:	fa20 f004 	lsr.w	r0, r0, r4
   80f14:	fa01 f205 	lsl.w	r2, r1, r5
   80f18:	ea40 0002 	orr.w	r0, r0, r2
   80f1c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   80f20:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   80f24:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   80f28:	fa21 f604 	lsr.w	r6, r1, r4
   80f2c:	eb42 0106 	adc.w	r1, r2, r6
   80f30:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80f34:	bf08      	it	eq
   80f36:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80f3a:	bd70      	pop	{r4, r5, r6, pc}
   80f3c:	f1c4 040c 	rsb	r4, r4, #12
   80f40:	f1c4 0520 	rsb	r5, r4, #32
   80f44:	fa00 f304 	lsl.w	r3, r0, r4
   80f48:	fa20 f005 	lsr.w	r0, r0, r5
   80f4c:	fa01 f204 	lsl.w	r2, r1, r4
   80f50:	ea40 0002 	orr.w	r0, r0, r2
   80f54:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80f58:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   80f5c:	f141 0100 	adc.w	r1, r1, #0
   80f60:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80f64:	bf08      	it	eq
   80f66:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80f6a:	bd70      	pop	{r4, r5, r6, pc}
   80f6c:	f1c4 0520 	rsb	r5, r4, #32
   80f70:	fa00 f205 	lsl.w	r2, r0, r5
   80f74:	ea4e 0e02 	orr.w	lr, lr, r2
   80f78:	fa20 f304 	lsr.w	r3, r0, r4
   80f7c:	fa01 f205 	lsl.w	r2, r1, r5
   80f80:	ea43 0302 	orr.w	r3, r3, r2
   80f84:	fa21 f004 	lsr.w	r0, r1, r4
   80f88:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   80f8c:	fa21 f204 	lsr.w	r2, r1, r4
   80f90:	ea20 0002 	bic.w	r0, r0, r2
   80f94:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   80f98:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   80f9c:	bf08      	it	eq
   80f9e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   80fa2:	bd70      	pop	{r4, r5, r6, pc}
   80fa4:	f094 0f00 	teq	r4, #0
   80fa8:	d10f      	bne.n	80fca <__aeabi_dmul+0x1c2>
   80faa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   80fae:	0040      	lsls	r0, r0, #1
   80fb0:	eb41 0101 	adc.w	r1, r1, r1
   80fb4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   80fb8:	bf08      	it	eq
   80fba:	3c01      	subeq	r4, #1
   80fbc:	d0f7      	beq.n	80fae <__aeabi_dmul+0x1a6>
   80fbe:	ea41 0106 	orr.w	r1, r1, r6
   80fc2:	f095 0f00 	teq	r5, #0
   80fc6:	bf18      	it	ne
   80fc8:	4770      	bxne	lr
   80fca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   80fce:	0052      	lsls	r2, r2, #1
   80fd0:	eb43 0303 	adc.w	r3, r3, r3
   80fd4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   80fd8:	bf08      	it	eq
   80fda:	3d01      	subeq	r5, #1
   80fdc:	d0f7      	beq.n	80fce <__aeabi_dmul+0x1c6>
   80fde:	ea43 0306 	orr.w	r3, r3, r6
   80fe2:	4770      	bx	lr
   80fe4:	ea94 0f0c 	teq	r4, ip
   80fe8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   80fec:	bf18      	it	ne
   80fee:	ea95 0f0c 	teqne	r5, ip
   80ff2:	d00c      	beq.n	8100e <__aeabi_dmul+0x206>
   80ff4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   80ff8:	bf18      	it	ne
   80ffa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   80ffe:	d1d1      	bne.n	80fa4 <__aeabi_dmul+0x19c>
   81000:	ea81 0103 	eor.w	r1, r1, r3
   81004:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81008:	f04f 0000 	mov.w	r0, #0
   8100c:	bd70      	pop	{r4, r5, r6, pc}
   8100e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81012:	bf06      	itte	eq
   81014:	4610      	moveq	r0, r2
   81016:	4619      	moveq	r1, r3
   81018:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8101c:	d019      	beq.n	81052 <__aeabi_dmul+0x24a>
   8101e:	ea94 0f0c 	teq	r4, ip
   81022:	d102      	bne.n	8102a <__aeabi_dmul+0x222>
   81024:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   81028:	d113      	bne.n	81052 <__aeabi_dmul+0x24a>
   8102a:	ea95 0f0c 	teq	r5, ip
   8102e:	d105      	bne.n	8103c <__aeabi_dmul+0x234>
   81030:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   81034:	bf1c      	itt	ne
   81036:	4610      	movne	r0, r2
   81038:	4619      	movne	r1, r3
   8103a:	d10a      	bne.n	81052 <__aeabi_dmul+0x24a>
   8103c:	ea81 0103 	eor.w	r1, r1, r3
   81040:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   81044:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81048:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8104c:	f04f 0000 	mov.w	r0, #0
   81050:	bd70      	pop	{r4, r5, r6, pc}
   81052:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   81056:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8105a:	bd70      	pop	{r4, r5, r6, pc}

0008105c <__aeabi_ddiv>:
   8105c:	b570      	push	{r4, r5, r6, lr}
   8105e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   81062:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   81066:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8106a:	bf1d      	ittte	ne
   8106c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   81070:	ea94 0f0c 	teqne	r4, ip
   81074:	ea95 0f0c 	teqne	r5, ip
   81078:	f000 f8a7 	bleq	811ca <__aeabi_ddiv+0x16e>
   8107c:	eba4 0405 	sub.w	r4, r4, r5
   81080:	ea81 0e03 	eor.w	lr, r1, r3
   81084:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81088:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8108c:	f000 8088 	beq.w	811a0 <__aeabi_ddiv+0x144>
   81090:	ea4f 3303 	mov.w	r3, r3, lsl #12
   81094:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   81098:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8109c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   810a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   810a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   810a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   810ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
   810b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   810b4:	429d      	cmp	r5, r3
   810b6:	bf08      	it	eq
   810b8:	4296      	cmpeq	r6, r2
   810ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   810be:	f504 7440 	add.w	r4, r4, #768	; 0x300
   810c2:	d202      	bcs.n	810ca <__aeabi_ddiv+0x6e>
   810c4:	085b      	lsrs	r3, r3, #1
   810c6:	ea4f 0232 	mov.w	r2, r2, rrx
   810ca:	1ab6      	subs	r6, r6, r2
   810cc:	eb65 0503 	sbc.w	r5, r5, r3
   810d0:	085b      	lsrs	r3, r3, #1
   810d2:	ea4f 0232 	mov.w	r2, r2, rrx
   810d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   810da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   810de:	ebb6 0e02 	subs.w	lr, r6, r2
   810e2:	eb75 0e03 	sbcs.w	lr, r5, r3
   810e6:	bf22      	ittt	cs
   810e8:	1ab6      	subcs	r6, r6, r2
   810ea:	4675      	movcs	r5, lr
   810ec:	ea40 000c 	orrcs.w	r0, r0, ip
   810f0:	085b      	lsrs	r3, r3, #1
   810f2:	ea4f 0232 	mov.w	r2, r2, rrx
   810f6:	ebb6 0e02 	subs.w	lr, r6, r2
   810fa:	eb75 0e03 	sbcs.w	lr, r5, r3
   810fe:	bf22      	ittt	cs
   81100:	1ab6      	subcs	r6, r6, r2
   81102:	4675      	movcs	r5, lr
   81104:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   81108:	085b      	lsrs	r3, r3, #1
   8110a:	ea4f 0232 	mov.w	r2, r2, rrx
   8110e:	ebb6 0e02 	subs.w	lr, r6, r2
   81112:	eb75 0e03 	sbcs.w	lr, r5, r3
   81116:	bf22      	ittt	cs
   81118:	1ab6      	subcs	r6, r6, r2
   8111a:	4675      	movcs	r5, lr
   8111c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   81120:	085b      	lsrs	r3, r3, #1
   81122:	ea4f 0232 	mov.w	r2, r2, rrx
   81126:	ebb6 0e02 	subs.w	lr, r6, r2
   8112a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8112e:	bf22      	ittt	cs
   81130:	1ab6      	subcs	r6, r6, r2
   81132:	4675      	movcs	r5, lr
   81134:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   81138:	ea55 0e06 	orrs.w	lr, r5, r6
   8113c:	d018      	beq.n	81170 <__aeabi_ddiv+0x114>
   8113e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   81142:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   81146:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8114a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8114e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   81152:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   81156:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8115a:	d1c0      	bne.n	810de <__aeabi_ddiv+0x82>
   8115c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81160:	d10b      	bne.n	8117a <__aeabi_ddiv+0x11e>
   81162:	ea41 0100 	orr.w	r1, r1, r0
   81166:	f04f 0000 	mov.w	r0, #0
   8116a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8116e:	e7b6      	b.n	810de <__aeabi_ddiv+0x82>
   81170:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   81174:	bf04      	itt	eq
   81176:	4301      	orreq	r1, r0
   81178:	2000      	moveq	r0, #0
   8117a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8117e:	bf88      	it	hi
   81180:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   81184:	f63f aeaf 	bhi.w	80ee6 <__aeabi_dmul+0xde>
   81188:	ebb5 0c03 	subs.w	ip, r5, r3
   8118c:	bf04      	itt	eq
   8118e:	ebb6 0c02 	subseq.w	ip, r6, r2
   81192:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   81196:	f150 0000 	adcs.w	r0, r0, #0
   8119a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8119e:	bd70      	pop	{r4, r5, r6, pc}
   811a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   811a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   811a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   811ac:	bfc2      	ittt	gt
   811ae:	ebd4 050c 	rsbsgt	r5, r4, ip
   811b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   811b6:	bd70      	popgt	{r4, r5, r6, pc}
   811b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   811bc:	f04f 0e00 	mov.w	lr, #0
   811c0:	3c01      	subs	r4, #1
   811c2:	e690      	b.n	80ee6 <__aeabi_dmul+0xde>
   811c4:	ea45 0e06 	orr.w	lr, r5, r6
   811c8:	e68d      	b.n	80ee6 <__aeabi_dmul+0xde>
   811ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   811ce:	ea94 0f0c 	teq	r4, ip
   811d2:	bf08      	it	eq
   811d4:	ea95 0f0c 	teqeq	r5, ip
   811d8:	f43f af3b 	beq.w	81052 <__aeabi_dmul+0x24a>
   811dc:	ea94 0f0c 	teq	r4, ip
   811e0:	d10a      	bne.n	811f8 <__aeabi_ddiv+0x19c>
   811e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   811e6:	f47f af34 	bne.w	81052 <__aeabi_dmul+0x24a>
   811ea:	ea95 0f0c 	teq	r5, ip
   811ee:	f47f af25 	bne.w	8103c <__aeabi_dmul+0x234>
   811f2:	4610      	mov	r0, r2
   811f4:	4619      	mov	r1, r3
   811f6:	e72c      	b.n	81052 <__aeabi_dmul+0x24a>
   811f8:	ea95 0f0c 	teq	r5, ip
   811fc:	d106      	bne.n	8120c <__aeabi_ddiv+0x1b0>
   811fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   81202:	f43f aefd 	beq.w	81000 <__aeabi_dmul+0x1f8>
   81206:	4610      	mov	r0, r2
   81208:	4619      	mov	r1, r3
   8120a:	e722      	b.n	81052 <__aeabi_dmul+0x24a>
   8120c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   81210:	bf18      	it	ne
   81212:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   81216:	f47f aec5 	bne.w	80fa4 <__aeabi_dmul+0x19c>
   8121a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8121e:	f47f af0d 	bne.w	8103c <__aeabi_dmul+0x234>
   81222:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   81226:	f47f aeeb 	bne.w	81000 <__aeabi_dmul+0x1f8>
   8122a:	e712      	b.n	81052 <__aeabi_dmul+0x24a>

0008122c <__gedf2>:
   8122c:	f04f 3cff 	mov.w	ip, #4294967295
   81230:	e006      	b.n	81240 <__cmpdf2+0x4>
   81232:	bf00      	nop

00081234 <__ledf2>:
   81234:	f04f 0c01 	mov.w	ip, #1
   81238:	e002      	b.n	81240 <__cmpdf2+0x4>
   8123a:	bf00      	nop

0008123c <__cmpdf2>:
   8123c:	f04f 0c01 	mov.w	ip, #1
   81240:	f84d cd04 	str.w	ip, [sp, #-4]!
   81244:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   81248:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8124c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   81250:	bf18      	it	ne
   81252:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   81256:	d01b      	beq.n	81290 <__cmpdf2+0x54>
   81258:	b001      	add	sp, #4
   8125a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8125e:	bf0c      	ite	eq
   81260:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   81264:	ea91 0f03 	teqne	r1, r3
   81268:	bf02      	ittt	eq
   8126a:	ea90 0f02 	teqeq	r0, r2
   8126e:	2000      	moveq	r0, #0
   81270:	4770      	bxeq	lr
   81272:	f110 0f00 	cmn.w	r0, #0
   81276:	ea91 0f03 	teq	r1, r3
   8127a:	bf58      	it	pl
   8127c:	4299      	cmppl	r1, r3
   8127e:	bf08      	it	eq
   81280:	4290      	cmpeq	r0, r2
   81282:	bf2c      	ite	cs
   81284:	17d8      	asrcs	r0, r3, #31
   81286:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8128a:	f040 0001 	orr.w	r0, r0, #1
   8128e:	4770      	bx	lr
   81290:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   81294:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   81298:	d102      	bne.n	812a0 <__cmpdf2+0x64>
   8129a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8129e:	d107      	bne.n	812b0 <__cmpdf2+0x74>
   812a0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   812a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   812a8:	d1d6      	bne.n	81258 <__cmpdf2+0x1c>
   812aa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   812ae:	d0d3      	beq.n	81258 <__cmpdf2+0x1c>
   812b0:	f85d 0b04 	ldr.w	r0, [sp], #4
   812b4:	4770      	bx	lr
   812b6:	bf00      	nop

000812b8 <__aeabi_cdrcmple>:
   812b8:	4684      	mov	ip, r0
   812ba:	4610      	mov	r0, r2
   812bc:	4662      	mov	r2, ip
   812be:	468c      	mov	ip, r1
   812c0:	4619      	mov	r1, r3
   812c2:	4663      	mov	r3, ip
   812c4:	e000      	b.n	812c8 <__aeabi_cdcmpeq>
   812c6:	bf00      	nop

000812c8 <__aeabi_cdcmpeq>:
   812c8:	b501      	push	{r0, lr}
   812ca:	f7ff ffb7 	bl	8123c <__cmpdf2>
   812ce:	2800      	cmp	r0, #0
   812d0:	bf48      	it	mi
   812d2:	f110 0f00 	cmnmi.w	r0, #0
   812d6:	bd01      	pop	{r0, pc}

000812d8 <__aeabi_dcmpeq>:
   812d8:	f84d ed08 	str.w	lr, [sp, #-8]!
   812dc:	f7ff fff4 	bl	812c8 <__aeabi_cdcmpeq>
   812e0:	bf0c      	ite	eq
   812e2:	2001      	moveq	r0, #1
   812e4:	2000      	movne	r0, #0
   812e6:	f85d fb08 	ldr.w	pc, [sp], #8
   812ea:	bf00      	nop

000812ec <__aeabi_dcmplt>:
   812ec:	f84d ed08 	str.w	lr, [sp, #-8]!
   812f0:	f7ff ffea 	bl	812c8 <__aeabi_cdcmpeq>
   812f4:	bf34      	ite	cc
   812f6:	2001      	movcc	r0, #1
   812f8:	2000      	movcs	r0, #0
   812fa:	f85d fb08 	ldr.w	pc, [sp], #8
   812fe:	bf00      	nop

00081300 <__aeabi_dcmple>:
   81300:	f84d ed08 	str.w	lr, [sp, #-8]!
   81304:	f7ff ffe0 	bl	812c8 <__aeabi_cdcmpeq>
   81308:	bf94      	ite	ls
   8130a:	2001      	movls	r0, #1
   8130c:	2000      	movhi	r0, #0
   8130e:	f85d fb08 	ldr.w	pc, [sp], #8
   81312:	bf00      	nop

00081314 <__aeabi_dcmpge>:
   81314:	f84d ed08 	str.w	lr, [sp, #-8]!
   81318:	f7ff ffce 	bl	812b8 <__aeabi_cdrcmple>
   8131c:	bf94      	ite	ls
   8131e:	2001      	movls	r0, #1
   81320:	2000      	movhi	r0, #0
   81322:	f85d fb08 	ldr.w	pc, [sp], #8
   81326:	bf00      	nop

00081328 <__aeabi_dcmpgt>:
   81328:	f84d ed08 	str.w	lr, [sp, #-8]!
   8132c:	f7ff ffc4 	bl	812b8 <__aeabi_cdrcmple>
   81330:	bf34      	ite	cc
   81332:	2001      	movcc	r0, #1
   81334:	2000      	movcs	r0, #0
   81336:	f85d fb08 	ldr.w	pc, [sp], #8
   8133a:	bf00      	nop

0008133c <__aeabi_d2iz>:
   8133c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   81340:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   81344:	d215      	bcs.n	81372 <__aeabi_d2iz+0x36>
   81346:	d511      	bpl.n	8136c <__aeabi_d2iz+0x30>
   81348:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8134c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   81350:	d912      	bls.n	81378 <__aeabi_d2iz+0x3c>
   81352:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   81356:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8135a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8135e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   81362:	fa23 f002 	lsr.w	r0, r3, r2
   81366:	bf18      	it	ne
   81368:	4240      	negne	r0, r0
   8136a:	4770      	bx	lr
   8136c:	f04f 0000 	mov.w	r0, #0
   81370:	4770      	bx	lr
   81372:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   81376:	d105      	bne.n	81384 <__aeabi_d2iz+0x48>
   81378:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8137c:	bf08      	it	eq
   8137e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   81382:	4770      	bx	lr
   81384:	f04f 0000 	mov.w	r0, #0
   81388:	4770      	bx	lr
   8138a:	bf00      	nop

0008138c <__aeabi_d2f>:
   8138c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   81390:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   81394:	bf24      	itt	cs
   81396:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   8139a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   8139e:	d90d      	bls.n	813bc <__aeabi_d2f+0x30>
   813a0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   813a4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   813a8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   813ac:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   813b0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   813b4:	bf08      	it	eq
   813b6:	f020 0001 	biceq.w	r0, r0, #1
   813ba:	4770      	bx	lr
   813bc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   813c0:	d121      	bne.n	81406 <__aeabi_d2f+0x7a>
   813c2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   813c6:	bfbc      	itt	lt
   813c8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   813cc:	4770      	bxlt	lr
   813ce:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   813d2:	ea4f 5252 	mov.w	r2, r2, lsr #21
   813d6:	f1c2 0218 	rsb	r2, r2, #24
   813da:	f1c2 0c20 	rsb	ip, r2, #32
   813de:	fa10 f30c 	lsls.w	r3, r0, ip
   813e2:	fa20 f002 	lsr.w	r0, r0, r2
   813e6:	bf18      	it	ne
   813e8:	f040 0001 	orrne.w	r0, r0, #1
   813ec:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   813f0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   813f4:	fa03 fc0c 	lsl.w	ip, r3, ip
   813f8:	ea40 000c 	orr.w	r0, r0, ip
   813fc:	fa23 f302 	lsr.w	r3, r3, r2
   81400:	ea4f 0343 	mov.w	r3, r3, lsl #1
   81404:	e7cc      	b.n	813a0 <__aeabi_d2f+0x14>
   81406:	ea7f 5362 	mvns.w	r3, r2, asr #21
   8140a:	d107      	bne.n	8141c <__aeabi_d2f+0x90>
   8140c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   81410:	bf1e      	ittt	ne
   81412:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   81416:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   8141a:	4770      	bxne	lr
   8141c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   81420:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   81424:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   81428:	4770      	bx	lr
   8142a:	bf00      	nop

0008142c <__aeabi_frsub>:
   8142c:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   81430:	e002      	b.n	81438 <__addsf3>
   81432:	bf00      	nop

00081434 <__aeabi_fsub>:
   81434:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00081438 <__addsf3>:
   81438:	0042      	lsls	r2, r0, #1
   8143a:	bf1f      	itttt	ne
   8143c:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   81440:	ea92 0f03 	teqne	r2, r3
   81444:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   81448:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   8144c:	d06a      	beq.n	81524 <__addsf3+0xec>
   8144e:	ea4f 6212 	mov.w	r2, r2, lsr #24
   81452:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   81456:	bfc1      	itttt	gt
   81458:	18d2      	addgt	r2, r2, r3
   8145a:	4041      	eorgt	r1, r0
   8145c:	4048      	eorgt	r0, r1
   8145e:	4041      	eorgt	r1, r0
   81460:	bfb8      	it	lt
   81462:	425b      	neglt	r3, r3
   81464:	2b19      	cmp	r3, #25
   81466:	bf88      	it	hi
   81468:	4770      	bxhi	lr
   8146a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   8146e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   81472:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   81476:	bf18      	it	ne
   81478:	4240      	negne	r0, r0
   8147a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   8147e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   81482:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   81486:	bf18      	it	ne
   81488:	4249      	negne	r1, r1
   8148a:	ea92 0f03 	teq	r2, r3
   8148e:	d03f      	beq.n	81510 <__addsf3+0xd8>
   81490:	f1a2 0201 	sub.w	r2, r2, #1
   81494:	fa41 fc03 	asr.w	ip, r1, r3
   81498:	eb10 000c 	adds.w	r0, r0, ip
   8149c:	f1c3 0320 	rsb	r3, r3, #32
   814a0:	fa01 f103 	lsl.w	r1, r1, r3
   814a4:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   814a8:	d502      	bpl.n	814b0 <__addsf3+0x78>
   814aa:	4249      	negs	r1, r1
   814ac:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   814b0:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   814b4:	d313      	bcc.n	814de <__addsf3+0xa6>
   814b6:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   814ba:	d306      	bcc.n	814ca <__addsf3+0x92>
   814bc:	0840      	lsrs	r0, r0, #1
   814be:	ea4f 0131 	mov.w	r1, r1, rrx
   814c2:	f102 0201 	add.w	r2, r2, #1
   814c6:	2afe      	cmp	r2, #254	; 0xfe
   814c8:	d251      	bcs.n	8156e <__addsf3+0x136>
   814ca:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   814ce:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   814d2:	bf08      	it	eq
   814d4:	f020 0001 	biceq.w	r0, r0, #1
   814d8:	ea40 0003 	orr.w	r0, r0, r3
   814dc:	4770      	bx	lr
   814de:	0049      	lsls	r1, r1, #1
   814e0:	eb40 0000 	adc.w	r0, r0, r0
   814e4:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   814e8:	f1a2 0201 	sub.w	r2, r2, #1
   814ec:	d1ed      	bne.n	814ca <__addsf3+0x92>
   814ee:	fab0 fc80 	clz	ip, r0
   814f2:	f1ac 0c08 	sub.w	ip, ip, #8
   814f6:	ebb2 020c 	subs.w	r2, r2, ip
   814fa:	fa00 f00c 	lsl.w	r0, r0, ip
   814fe:	bfaa      	itet	ge
   81500:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   81504:	4252      	neglt	r2, r2
   81506:	4318      	orrge	r0, r3
   81508:	bfbc      	itt	lt
   8150a:	40d0      	lsrlt	r0, r2
   8150c:	4318      	orrlt	r0, r3
   8150e:	4770      	bx	lr
   81510:	f092 0f00 	teq	r2, #0
   81514:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   81518:	bf06      	itte	eq
   8151a:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   8151e:	3201      	addeq	r2, #1
   81520:	3b01      	subne	r3, #1
   81522:	e7b5      	b.n	81490 <__addsf3+0x58>
   81524:	ea4f 0341 	mov.w	r3, r1, lsl #1
   81528:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   8152c:	bf18      	it	ne
   8152e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   81532:	d021      	beq.n	81578 <__addsf3+0x140>
   81534:	ea92 0f03 	teq	r2, r3
   81538:	d004      	beq.n	81544 <__addsf3+0x10c>
   8153a:	f092 0f00 	teq	r2, #0
   8153e:	bf08      	it	eq
   81540:	4608      	moveq	r0, r1
   81542:	4770      	bx	lr
   81544:	ea90 0f01 	teq	r0, r1
   81548:	bf1c      	itt	ne
   8154a:	2000      	movne	r0, #0
   8154c:	4770      	bxne	lr
   8154e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   81552:	d104      	bne.n	8155e <__addsf3+0x126>
   81554:	0040      	lsls	r0, r0, #1
   81556:	bf28      	it	cs
   81558:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   8155c:	4770      	bx	lr
   8155e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   81562:	bf3c      	itt	cc
   81564:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   81568:	4770      	bxcc	lr
   8156a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   8156e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   81572:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   81576:	4770      	bx	lr
   81578:	ea7f 6222 	mvns.w	r2, r2, asr #24
   8157c:	bf16      	itet	ne
   8157e:	4608      	movne	r0, r1
   81580:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   81584:	4601      	movne	r1, r0
   81586:	0242      	lsls	r2, r0, #9
   81588:	bf06      	itte	eq
   8158a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   8158e:	ea90 0f01 	teqeq	r0, r1
   81592:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   81596:	4770      	bx	lr

00081598 <__aeabi_ui2f>:
   81598:	f04f 0300 	mov.w	r3, #0
   8159c:	e004      	b.n	815a8 <__aeabi_i2f+0x8>
   8159e:	bf00      	nop

000815a0 <__aeabi_i2f>:
   815a0:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   815a4:	bf48      	it	mi
   815a6:	4240      	negmi	r0, r0
   815a8:	ea5f 0c00 	movs.w	ip, r0
   815ac:	bf08      	it	eq
   815ae:	4770      	bxeq	lr
   815b0:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   815b4:	4601      	mov	r1, r0
   815b6:	f04f 0000 	mov.w	r0, #0
   815ba:	e01c      	b.n	815f6 <__aeabi_l2f+0x2a>

000815bc <__aeabi_ul2f>:
   815bc:	ea50 0201 	orrs.w	r2, r0, r1
   815c0:	bf08      	it	eq
   815c2:	4770      	bxeq	lr
   815c4:	f04f 0300 	mov.w	r3, #0
   815c8:	e00a      	b.n	815e0 <__aeabi_l2f+0x14>
   815ca:	bf00      	nop

000815cc <__aeabi_l2f>:
   815cc:	ea50 0201 	orrs.w	r2, r0, r1
   815d0:	bf08      	it	eq
   815d2:	4770      	bxeq	lr
   815d4:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   815d8:	d502      	bpl.n	815e0 <__aeabi_l2f+0x14>
   815da:	4240      	negs	r0, r0
   815dc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   815e0:	ea5f 0c01 	movs.w	ip, r1
   815e4:	bf02      	ittt	eq
   815e6:	4684      	moveq	ip, r0
   815e8:	4601      	moveq	r1, r0
   815ea:	2000      	moveq	r0, #0
   815ec:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   815f0:	bf08      	it	eq
   815f2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   815f6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   815fa:	fabc f28c 	clz	r2, ip
   815fe:	3a08      	subs	r2, #8
   81600:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   81604:	db10      	blt.n	81628 <__aeabi_l2f+0x5c>
   81606:	fa01 fc02 	lsl.w	ip, r1, r2
   8160a:	4463      	add	r3, ip
   8160c:	fa00 fc02 	lsl.w	ip, r0, r2
   81610:	f1c2 0220 	rsb	r2, r2, #32
   81614:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   81618:	fa20 f202 	lsr.w	r2, r0, r2
   8161c:	eb43 0002 	adc.w	r0, r3, r2
   81620:	bf08      	it	eq
   81622:	f020 0001 	biceq.w	r0, r0, #1
   81626:	4770      	bx	lr
   81628:	f102 0220 	add.w	r2, r2, #32
   8162c:	fa01 fc02 	lsl.w	ip, r1, r2
   81630:	f1c2 0220 	rsb	r2, r2, #32
   81634:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   81638:	fa21 f202 	lsr.w	r2, r1, r2
   8163c:	eb43 0002 	adc.w	r0, r3, r2
   81640:	bf08      	it	eq
   81642:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   81646:	4770      	bx	lr

00081648 <__aeabi_fmul>:
   81648:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8164c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   81650:	bf1e      	ittt	ne
   81652:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   81656:	ea92 0f0c 	teqne	r2, ip
   8165a:	ea93 0f0c 	teqne	r3, ip
   8165e:	d06f      	beq.n	81740 <__aeabi_fmul+0xf8>
   81660:	441a      	add	r2, r3
   81662:	ea80 0c01 	eor.w	ip, r0, r1
   81666:	0240      	lsls	r0, r0, #9
   81668:	bf18      	it	ne
   8166a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   8166e:	d01e      	beq.n	816ae <__aeabi_fmul+0x66>
   81670:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   81674:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   81678:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   8167c:	fba0 3101 	umull	r3, r1, r0, r1
   81680:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   81684:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   81688:	bf3e      	ittt	cc
   8168a:	0049      	lslcc	r1, r1, #1
   8168c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   81690:	005b      	lslcc	r3, r3, #1
   81692:	ea40 0001 	orr.w	r0, r0, r1
   81696:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   8169a:	2afd      	cmp	r2, #253	; 0xfd
   8169c:	d81d      	bhi.n	816da <__aeabi_fmul+0x92>
   8169e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   816a2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   816a6:	bf08      	it	eq
   816a8:	f020 0001 	biceq.w	r0, r0, #1
   816ac:	4770      	bx	lr
   816ae:	f090 0f00 	teq	r0, #0
   816b2:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   816b6:	bf08      	it	eq
   816b8:	0249      	lsleq	r1, r1, #9
   816ba:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   816be:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   816c2:	3a7f      	subs	r2, #127	; 0x7f
   816c4:	bfc2      	ittt	gt
   816c6:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   816ca:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   816ce:	4770      	bxgt	lr
   816d0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   816d4:	f04f 0300 	mov.w	r3, #0
   816d8:	3a01      	subs	r2, #1
   816da:	dc5d      	bgt.n	81798 <__aeabi_fmul+0x150>
   816dc:	f112 0f19 	cmn.w	r2, #25
   816e0:	bfdc      	itt	le
   816e2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   816e6:	4770      	bxle	lr
   816e8:	f1c2 0200 	rsb	r2, r2, #0
   816ec:	0041      	lsls	r1, r0, #1
   816ee:	fa21 f102 	lsr.w	r1, r1, r2
   816f2:	f1c2 0220 	rsb	r2, r2, #32
   816f6:	fa00 fc02 	lsl.w	ip, r0, r2
   816fa:	ea5f 0031 	movs.w	r0, r1, rrx
   816fe:	f140 0000 	adc.w	r0, r0, #0
   81702:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   81706:	bf08      	it	eq
   81708:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   8170c:	4770      	bx	lr
   8170e:	f092 0f00 	teq	r2, #0
   81712:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   81716:	bf02      	ittt	eq
   81718:	0040      	lsleq	r0, r0, #1
   8171a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   8171e:	3a01      	subeq	r2, #1
   81720:	d0f9      	beq.n	81716 <__aeabi_fmul+0xce>
   81722:	ea40 000c 	orr.w	r0, r0, ip
   81726:	f093 0f00 	teq	r3, #0
   8172a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   8172e:	bf02      	ittt	eq
   81730:	0049      	lsleq	r1, r1, #1
   81732:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   81736:	3b01      	subeq	r3, #1
   81738:	d0f9      	beq.n	8172e <__aeabi_fmul+0xe6>
   8173a:	ea41 010c 	orr.w	r1, r1, ip
   8173e:	e78f      	b.n	81660 <__aeabi_fmul+0x18>
   81740:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   81744:	ea92 0f0c 	teq	r2, ip
   81748:	bf18      	it	ne
   8174a:	ea93 0f0c 	teqne	r3, ip
   8174e:	d00a      	beq.n	81766 <__aeabi_fmul+0x11e>
   81750:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   81754:	bf18      	it	ne
   81756:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   8175a:	d1d8      	bne.n	8170e <__aeabi_fmul+0xc6>
   8175c:	ea80 0001 	eor.w	r0, r0, r1
   81760:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   81764:	4770      	bx	lr
   81766:	f090 0f00 	teq	r0, #0
   8176a:	bf17      	itett	ne
   8176c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   81770:	4608      	moveq	r0, r1
   81772:	f091 0f00 	teqne	r1, #0
   81776:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   8177a:	d014      	beq.n	817a6 <__aeabi_fmul+0x15e>
   8177c:	ea92 0f0c 	teq	r2, ip
   81780:	d101      	bne.n	81786 <__aeabi_fmul+0x13e>
   81782:	0242      	lsls	r2, r0, #9
   81784:	d10f      	bne.n	817a6 <__aeabi_fmul+0x15e>
   81786:	ea93 0f0c 	teq	r3, ip
   8178a:	d103      	bne.n	81794 <__aeabi_fmul+0x14c>
   8178c:	024b      	lsls	r3, r1, #9
   8178e:	bf18      	it	ne
   81790:	4608      	movne	r0, r1
   81792:	d108      	bne.n	817a6 <__aeabi_fmul+0x15e>
   81794:	ea80 0001 	eor.w	r0, r0, r1
   81798:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   8179c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   817a0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   817a4:	4770      	bx	lr
   817a6:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   817aa:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   817ae:	4770      	bx	lr

000817b0 <__aeabi_fdiv>:
   817b0:	f04f 0cff 	mov.w	ip, #255	; 0xff
   817b4:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   817b8:	bf1e      	ittt	ne
   817ba:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   817be:	ea92 0f0c 	teqne	r2, ip
   817c2:	ea93 0f0c 	teqne	r3, ip
   817c6:	d069      	beq.n	8189c <__aeabi_fdiv+0xec>
   817c8:	eba2 0203 	sub.w	r2, r2, r3
   817cc:	ea80 0c01 	eor.w	ip, r0, r1
   817d0:	0249      	lsls	r1, r1, #9
   817d2:	ea4f 2040 	mov.w	r0, r0, lsl #9
   817d6:	d037      	beq.n	81848 <__aeabi_fdiv+0x98>
   817d8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   817dc:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   817e0:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   817e4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   817e8:	428b      	cmp	r3, r1
   817ea:	bf38      	it	cc
   817ec:	005b      	lslcc	r3, r3, #1
   817ee:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   817f2:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   817f6:	428b      	cmp	r3, r1
   817f8:	bf24      	itt	cs
   817fa:	1a5b      	subcs	r3, r3, r1
   817fc:	ea40 000c 	orrcs.w	r0, r0, ip
   81800:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   81804:	bf24      	itt	cs
   81806:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   8180a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   8180e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   81812:	bf24      	itt	cs
   81814:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   81818:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   8181c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   81820:	bf24      	itt	cs
   81822:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   81826:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   8182a:	011b      	lsls	r3, r3, #4
   8182c:	bf18      	it	ne
   8182e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   81832:	d1e0      	bne.n	817f6 <__aeabi_fdiv+0x46>
   81834:	2afd      	cmp	r2, #253	; 0xfd
   81836:	f63f af50 	bhi.w	816da <__aeabi_fmul+0x92>
   8183a:	428b      	cmp	r3, r1
   8183c:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   81840:	bf08      	it	eq
   81842:	f020 0001 	biceq.w	r0, r0, #1
   81846:	4770      	bx	lr
   81848:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   8184c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   81850:	327f      	adds	r2, #127	; 0x7f
   81852:	bfc2      	ittt	gt
   81854:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   81858:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   8185c:	4770      	bxgt	lr
   8185e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   81862:	f04f 0300 	mov.w	r3, #0
   81866:	3a01      	subs	r2, #1
   81868:	e737      	b.n	816da <__aeabi_fmul+0x92>
   8186a:	f092 0f00 	teq	r2, #0
   8186e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   81872:	bf02      	ittt	eq
   81874:	0040      	lsleq	r0, r0, #1
   81876:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   8187a:	3a01      	subeq	r2, #1
   8187c:	d0f9      	beq.n	81872 <__aeabi_fdiv+0xc2>
   8187e:	ea40 000c 	orr.w	r0, r0, ip
   81882:	f093 0f00 	teq	r3, #0
   81886:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   8188a:	bf02      	ittt	eq
   8188c:	0049      	lsleq	r1, r1, #1
   8188e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   81892:	3b01      	subeq	r3, #1
   81894:	d0f9      	beq.n	8188a <__aeabi_fdiv+0xda>
   81896:	ea41 010c 	orr.w	r1, r1, ip
   8189a:	e795      	b.n	817c8 <__aeabi_fdiv+0x18>
   8189c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   818a0:	ea92 0f0c 	teq	r2, ip
   818a4:	d108      	bne.n	818b8 <__aeabi_fdiv+0x108>
   818a6:	0242      	lsls	r2, r0, #9
   818a8:	f47f af7d 	bne.w	817a6 <__aeabi_fmul+0x15e>
   818ac:	ea93 0f0c 	teq	r3, ip
   818b0:	f47f af70 	bne.w	81794 <__aeabi_fmul+0x14c>
   818b4:	4608      	mov	r0, r1
   818b6:	e776      	b.n	817a6 <__aeabi_fmul+0x15e>
   818b8:	ea93 0f0c 	teq	r3, ip
   818bc:	d104      	bne.n	818c8 <__aeabi_fdiv+0x118>
   818be:	024b      	lsls	r3, r1, #9
   818c0:	f43f af4c 	beq.w	8175c <__aeabi_fmul+0x114>
   818c4:	4608      	mov	r0, r1
   818c6:	e76e      	b.n	817a6 <__aeabi_fmul+0x15e>
   818c8:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   818cc:	bf18      	it	ne
   818ce:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   818d2:	d1ca      	bne.n	8186a <__aeabi_fdiv+0xba>
   818d4:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   818d8:	f47f af5c 	bne.w	81794 <__aeabi_fmul+0x14c>
   818dc:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   818e0:	f47f af3c 	bne.w	8175c <__aeabi_fmul+0x114>
   818e4:	e75f      	b.n	817a6 <__aeabi_fmul+0x15e>
   818e6:	bf00      	nop

000818e8 <__gesf2>:
   818e8:	f04f 3cff 	mov.w	ip, #4294967295
   818ec:	e006      	b.n	818fc <__cmpsf2+0x4>
   818ee:	bf00      	nop

000818f0 <__lesf2>:
   818f0:	f04f 0c01 	mov.w	ip, #1
   818f4:	e002      	b.n	818fc <__cmpsf2+0x4>
   818f6:	bf00      	nop

000818f8 <__cmpsf2>:
   818f8:	f04f 0c01 	mov.w	ip, #1
   818fc:	f84d cd04 	str.w	ip, [sp, #-4]!
   81900:	ea4f 0240 	mov.w	r2, r0, lsl #1
   81904:	ea4f 0341 	mov.w	r3, r1, lsl #1
   81908:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   8190c:	bf18      	it	ne
   8190e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   81912:	d011      	beq.n	81938 <__cmpsf2+0x40>
   81914:	b001      	add	sp, #4
   81916:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
   8191a:	bf18      	it	ne
   8191c:	ea90 0f01 	teqne	r0, r1
   81920:	bf58      	it	pl
   81922:	ebb2 0003 	subspl.w	r0, r2, r3
   81926:	bf88      	it	hi
   81928:	17c8      	asrhi	r0, r1, #31
   8192a:	bf38      	it	cc
   8192c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
   81930:	bf18      	it	ne
   81932:	f040 0001 	orrne.w	r0, r0, #1
   81936:	4770      	bx	lr
   81938:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   8193c:	d102      	bne.n	81944 <__cmpsf2+0x4c>
   8193e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
   81942:	d105      	bne.n	81950 <__cmpsf2+0x58>
   81944:	ea7f 6c23 	mvns.w	ip, r3, asr #24
   81948:	d1e4      	bne.n	81914 <__cmpsf2+0x1c>
   8194a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
   8194e:	d0e1      	beq.n	81914 <__cmpsf2+0x1c>
   81950:	f85d 0b04 	ldr.w	r0, [sp], #4
   81954:	4770      	bx	lr
   81956:	bf00      	nop

00081958 <__aeabi_cfrcmple>:
   81958:	4684      	mov	ip, r0
   8195a:	4608      	mov	r0, r1
   8195c:	4661      	mov	r1, ip
   8195e:	e7ff      	b.n	81960 <__aeabi_cfcmpeq>

00081960 <__aeabi_cfcmpeq>:
   81960:	b50f      	push	{r0, r1, r2, r3, lr}
   81962:	f7ff ffc9 	bl	818f8 <__cmpsf2>
   81966:	2800      	cmp	r0, #0
   81968:	bf48      	it	mi
   8196a:	f110 0f00 	cmnmi.w	r0, #0
   8196e:	bd0f      	pop	{r0, r1, r2, r3, pc}

00081970 <__aeabi_fcmpeq>:
   81970:	f84d ed08 	str.w	lr, [sp, #-8]!
   81974:	f7ff fff4 	bl	81960 <__aeabi_cfcmpeq>
   81978:	bf0c      	ite	eq
   8197a:	2001      	moveq	r0, #1
   8197c:	2000      	movne	r0, #0
   8197e:	f85d fb08 	ldr.w	pc, [sp], #8
   81982:	bf00      	nop

00081984 <__aeabi_fcmplt>:
   81984:	f84d ed08 	str.w	lr, [sp, #-8]!
   81988:	f7ff ffea 	bl	81960 <__aeabi_cfcmpeq>
   8198c:	bf34      	ite	cc
   8198e:	2001      	movcc	r0, #1
   81990:	2000      	movcs	r0, #0
   81992:	f85d fb08 	ldr.w	pc, [sp], #8
   81996:	bf00      	nop

00081998 <__aeabi_fcmple>:
   81998:	f84d ed08 	str.w	lr, [sp, #-8]!
   8199c:	f7ff ffe0 	bl	81960 <__aeabi_cfcmpeq>
   819a0:	bf94      	ite	ls
   819a2:	2001      	movls	r0, #1
   819a4:	2000      	movhi	r0, #0
   819a6:	f85d fb08 	ldr.w	pc, [sp], #8
   819aa:	bf00      	nop

000819ac <__aeabi_fcmpge>:
   819ac:	f84d ed08 	str.w	lr, [sp, #-8]!
   819b0:	f7ff ffd2 	bl	81958 <__aeabi_cfrcmple>
   819b4:	bf94      	ite	ls
   819b6:	2001      	movls	r0, #1
   819b8:	2000      	movhi	r0, #0
   819ba:	f85d fb08 	ldr.w	pc, [sp], #8
   819be:	bf00      	nop

000819c0 <__aeabi_fcmpgt>:
   819c0:	f84d ed08 	str.w	lr, [sp, #-8]!
   819c4:	f7ff ffc8 	bl	81958 <__aeabi_cfrcmple>
   819c8:	bf34      	ite	cc
   819ca:	2001      	movcc	r0, #1
   819cc:	2000      	movcs	r0, #0
   819ce:	f85d fb08 	ldr.w	pc, [sp], #8
   819d2:	bf00      	nop

000819d4 <__aeabi_f2uiz>:
   819d4:	0042      	lsls	r2, r0, #1
   819d6:	d20e      	bcs.n	819f6 <__aeabi_f2uiz+0x22>
   819d8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   819dc:	d30b      	bcc.n	819f6 <__aeabi_f2uiz+0x22>
   819de:	f04f 039e 	mov.w	r3, #158	; 0x9e
   819e2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   819e6:	d409      	bmi.n	819fc <__aeabi_f2uiz+0x28>
   819e8:	ea4f 2300 	mov.w	r3, r0, lsl #8
   819ec:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   819f0:	fa23 f002 	lsr.w	r0, r3, r2
   819f4:	4770      	bx	lr
   819f6:	f04f 0000 	mov.w	r0, #0
   819fa:	4770      	bx	lr
   819fc:	f112 0f61 	cmn.w	r2, #97	; 0x61
   81a00:	d101      	bne.n	81a06 <__aeabi_f2uiz+0x32>
   81a02:	0242      	lsls	r2, r0, #9
   81a04:	d102      	bne.n	81a0c <__aeabi_f2uiz+0x38>
   81a06:	f04f 30ff 	mov.w	r0, #4294967295
   81a0a:	4770      	bx	lr
   81a0c:	f04f 0000 	mov.w	r0, #0
   81a10:	4770      	bx	lr
   81a12:	bf00      	nop

00081a14 <__libc_init_array>:
   81a14:	b570      	push	{r4, r5, r6, lr}
   81a16:	4e0f      	ldr	r6, [pc, #60]	; (81a54 <__libc_init_array+0x40>)
   81a18:	4d0f      	ldr	r5, [pc, #60]	; (81a58 <__libc_init_array+0x44>)
   81a1a:	1b76      	subs	r6, r6, r5
   81a1c:	10b6      	asrs	r6, r6, #2
   81a1e:	bf18      	it	ne
   81a20:	2400      	movne	r4, #0
   81a22:	d005      	beq.n	81a30 <__libc_init_array+0x1c>
   81a24:	3401      	adds	r4, #1
   81a26:	f855 3b04 	ldr.w	r3, [r5], #4
   81a2a:	4798      	blx	r3
   81a2c:	42a6      	cmp	r6, r4
   81a2e:	d1f9      	bne.n	81a24 <__libc_init_array+0x10>
   81a30:	4e0a      	ldr	r6, [pc, #40]	; (81a5c <__libc_init_array+0x48>)
   81a32:	4d0b      	ldr	r5, [pc, #44]	; (81a60 <__libc_init_array+0x4c>)
   81a34:	f000 f912 	bl	81c5c <_init>
   81a38:	1b76      	subs	r6, r6, r5
   81a3a:	10b6      	asrs	r6, r6, #2
   81a3c:	bf18      	it	ne
   81a3e:	2400      	movne	r4, #0
   81a40:	d006      	beq.n	81a50 <__libc_init_array+0x3c>
   81a42:	3401      	adds	r4, #1
   81a44:	f855 3b04 	ldr.w	r3, [r5], #4
   81a48:	4798      	blx	r3
   81a4a:	42a6      	cmp	r6, r4
   81a4c:	d1f9      	bne.n	81a42 <__libc_init_array+0x2e>
   81a4e:	bd70      	pop	{r4, r5, r6, pc}
   81a50:	bd70      	pop	{r4, r5, r6, pc}
   81a52:	bf00      	nop
   81a54:	00081c68 	.word	0x00081c68
   81a58:	00081c68 	.word	0x00081c68
   81a5c:	00081c70 	.word	0x00081c70
   81a60:	00081c68 	.word	0x00081c68

00081a64 <register_fini>:
   81a64:	4b02      	ldr	r3, [pc, #8]	; (81a70 <register_fini+0xc>)
   81a66:	b113      	cbz	r3, 81a6e <register_fini+0xa>
   81a68:	4802      	ldr	r0, [pc, #8]	; (81a74 <register_fini+0x10>)
   81a6a:	f000 b805 	b.w	81a78 <atexit>
   81a6e:	4770      	bx	lr
   81a70:	00000000 	.word	0x00000000
   81a74:	00081a85 	.word	0x00081a85

00081a78 <atexit>:
   81a78:	2300      	movs	r3, #0
   81a7a:	4601      	mov	r1, r0
   81a7c:	461a      	mov	r2, r3
   81a7e:	4618      	mov	r0, r3
   81a80:	f000 b81e 	b.w	81ac0 <__register_exitproc>

00081a84 <__libc_fini_array>:
   81a84:	b538      	push	{r3, r4, r5, lr}
   81a86:	4c0a      	ldr	r4, [pc, #40]	; (81ab0 <__libc_fini_array+0x2c>)
   81a88:	4d0a      	ldr	r5, [pc, #40]	; (81ab4 <__libc_fini_array+0x30>)
   81a8a:	1b64      	subs	r4, r4, r5
   81a8c:	10a4      	asrs	r4, r4, #2
   81a8e:	d00a      	beq.n	81aa6 <__libc_fini_array+0x22>
   81a90:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   81a94:	3b01      	subs	r3, #1
   81a96:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   81a9a:	3c01      	subs	r4, #1
   81a9c:	f855 3904 	ldr.w	r3, [r5], #-4
   81aa0:	4798      	blx	r3
   81aa2:	2c00      	cmp	r4, #0
   81aa4:	d1f9      	bne.n	81a9a <__libc_fini_array+0x16>
   81aa6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   81aaa:	f000 b8e1 	b.w	81c70 <_fini>
   81aae:	bf00      	nop
   81ab0:	00081c80 	.word	0x00081c80
   81ab4:	00081c7c 	.word	0x00081c7c

00081ab8 <__retarget_lock_acquire_recursive>:
   81ab8:	4770      	bx	lr
   81aba:	bf00      	nop

00081abc <__retarget_lock_release_recursive>:
   81abc:	4770      	bx	lr
   81abe:	bf00      	nop

00081ac0 <__register_exitproc>:
   81ac0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   81ac4:	4d2c      	ldr	r5, [pc, #176]	; (81b78 <__register_exitproc+0xb8>)
   81ac6:	4606      	mov	r6, r0
   81ac8:	6828      	ldr	r0, [r5, #0]
   81aca:	4698      	mov	r8, r3
   81acc:	460f      	mov	r7, r1
   81ace:	4691      	mov	r9, r2
   81ad0:	f7ff fff2 	bl	81ab8 <__retarget_lock_acquire_recursive>
   81ad4:	4b29      	ldr	r3, [pc, #164]	; (81b7c <__register_exitproc+0xbc>)
   81ad6:	681c      	ldr	r4, [r3, #0]
   81ad8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   81adc:	2b00      	cmp	r3, #0
   81ade:	d03e      	beq.n	81b5e <__register_exitproc+0x9e>
   81ae0:	685a      	ldr	r2, [r3, #4]
   81ae2:	2a1f      	cmp	r2, #31
   81ae4:	dc1c      	bgt.n	81b20 <__register_exitproc+0x60>
   81ae6:	f102 0e01 	add.w	lr, r2, #1
   81aea:	b176      	cbz	r6, 81b0a <__register_exitproc+0x4a>
   81aec:	2101      	movs	r1, #1
   81aee:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   81af2:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   81af6:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   81afa:	4091      	lsls	r1, r2
   81afc:	4308      	orrs	r0, r1
   81afe:	2e02      	cmp	r6, #2
   81b00:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   81b04:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   81b08:	d023      	beq.n	81b52 <__register_exitproc+0x92>
   81b0a:	3202      	adds	r2, #2
   81b0c:	f8c3 e004 	str.w	lr, [r3, #4]
   81b10:	6828      	ldr	r0, [r5, #0]
   81b12:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   81b16:	f7ff ffd1 	bl	81abc <__retarget_lock_release_recursive>
   81b1a:	2000      	movs	r0, #0
   81b1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81b20:	4b17      	ldr	r3, [pc, #92]	; (81b80 <__register_exitproc+0xc0>)
   81b22:	b30b      	cbz	r3, 81b68 <__register_exitproc+0xa8>
   81b24:	f44f 70c8 	mov.w	r0, #400	; 0x190
   81b28:	f3af 8000 	nop.w
   81b2c:	4603      	mov	r3, r0
   81b2e:	b1d8      	cbz	r0, 81b68 <__register_exitproc+0xa8>
   81b30:	2000      	movs	r0, #0
   81b32:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   81b36:	f04f 0e01 	mov.w	lr, #1
   81b3a:	6058      	str	r0, [r3, #4]
   81b3c:	6019      	str	r1, [r3, #0]
   81b3e:	4602      	mov	r2, r0
   81b40:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81b44:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   81b48:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   81b4c:	2e00      	cmp	r6, #0
   81b4e:	d0dc      	beq.n	81b0a <__register_exitproc+0x4a>
   81b50:	e7cc      	b.n	81aec <__register_exitproc+0x2c>
   81b52:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   81b56:	4301      	orrs	r1, r0
   81b58:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   81b5c:	e7d5      	b.n	81b0a <__register_exitproc+0x4a>
   81b5e:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   81b62:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   81b66:	e7bb      	b.n	81ae0 <__register_exitproc+0x20>
   81b68:	6828      	ldr	r0, [r5, #0]
   81b6a:	f7ff ffa7 	bl	81abc <__retarget_lock_release_recursive>
   81b6e:	f04f 30ff 	mov.w	r0, #4294967295
   81b72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   81b76:	bf00      	nop
   81b78:	20000430 	.word	0x20000430
   81b7c:	00081c58 	.word	0x00081c58
   81b80:	00000000 	.word	0x00000000
   81b84:	304e4143 	.word	0x304e4143
   81b88:	73656d20 	.word	0x73656d20
   81b8c:	65676173 	.word	0x65676173
   81b90:	72726120 	.word	0x72726120
   81b94:	64657669 	.word	0x64657669
   81b98:	206e6920 	.word	0x206e6920
   81b9c:	2d6e6f6e 	.word	0x2d6e6f6e
   81ba0:	64657375 	.word	0x64657375
   81ba4:	69616d20 	.word	0x69616d20
   81ba8:	786f626c 	.word	0x786f626c
   81bac:	00000d0a 	.word	0x00000d0a
   81bb0:	203d2058 	.word	0x203d2058
   81bb4:	59206425 	.word	0x59206425
   81bb8:	25203d20 	.word	0x25203d20
   81bbc:	6a202c64 	.word	0x6a202c64
   81bc0:	7562796f 	.word	0x7562796f
   81bc4:	6e6f7474 	.word	0x6e6f7474
   81bc8:	25203d20 	.word	0x25203d20
   81bcc:	6a202c64 	.word	0x6a202c64
   81bd0:	6964796f 	.word	0x6964796f
   81bd4:	74636572 	.word	0x74636572
   81bd8:	206e6f69 	.word	0x206e6f69
   81bdc:	6425203d 	.word	0x6425203d
   81be0:	6952202c 	.word	0x6952202c
   81be4:	53746867 	.word	0x53746867
   81be8:	6564696c 	.word	0x6564696c
   81bec:	203d2072 	.word	0x203d2072
   81bf0:	0a206425 	.word	0x0a206425
   81bf4:	0000000d 	.word	0x0000000d
   81bf8:	6c756e28 	.word	0x6c756e28
   81bfc:	0000296c 	.word	0x0000296c
   81c00:	4f525245 	.word	0x4f525245
   81c04:	64203a52 	.word	0x64203a52
   81c08:	20797475 	.word	0x20797475
   81c0c:	6c637963 	.word	0x6c637963
   81c10:	6f742065 	.word	0x6f742065
   81c14:	6f6c206f 	.word	0x6f6c206f
   81c18:	00000077 	.word	0x00000077
   81c1c:	4f525245 	.word	0x4f525245
   81c20:	64203a52 	.word	0x64203a52
   81c24:	20797475 	.word	0x20797475
   81c28:	6c637963 	.word	0x6c637963
   81c2c:	6f742065 	.word	0x6f742065
   81c30:	6968206f 	.word	0x6968206f
   81c34:	00006867 	.word	0x00006867
   81c38:	3a525245 	.word	0x3a525245
   81c3c:	52415520 	.word	0x52415520
   81c40:	58522054 	.word	0x58522054
   81c44:	66756220 	.word	0x66756220
   81c48:	20726566 	.word	0x20726566
   81c4c:	66207369 	.word	0x66207369
   81c50:	0a6c6c75 	.word	0x0a6c6c75
   81c54:	0000000d 	.word	0x0000000d

00081c58 <_global_impure_ptr>:
   81c58:	20000008                                ... 

00081c5c <_init>:
   81c5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81c5e:	bf00      	nop
   81c60:	bcf8      	pop	{r3, r4, r5, r6, r7}
   81c62:	bc08      	pop	{r3}
   81c64:	469e      	mov	lr, r3
   81c66:	4770      	bx	lr

00081c68 <__init_array_start>:
   81c68:	00081a65 	.word	0x00081a65

00081c6c <__frame_dummy_init_array_entry>:
   81c6c:	00080119                                ....

00081c70 <_fini>:
   81c70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   81c72:	bf00      	nop
   81c74:	bcf8      	pop	{r3, r4, r5, r6, r7}
   81c76:	bc08      	pop	{r3}
   81c78:	469e      	mov	lr, r3
   81c7a:	4770      	bx	lr

00081c7c <__fini_array_start>:
   81c7c:	000800f5 	.word	0x000800f5
