
TestYolo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000156  00800100  00001e3c  00001ed0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001e3c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000095  00800256  00800256  00002026  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002026  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002084  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  000020c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000299f  00000000  00000000  00002300  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000114f  00000000  00000000  00004c9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000121f  00000000  00000000  00005dee  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000061c  00000000  00000000  00007010  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a5b  00000000  00000000  0000762c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018ee  00000000  00000000  00008087  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  00009975  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cb 01 	jmp	0x396	; 0x396 <__ctors_end>
       4:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
       8:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
       c:	0c 94 17 02 	jmp	0x42e	; 0x42e <__vector_3>
      10:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      14:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      18:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      1c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      20:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      24:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      28:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      2c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      30:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      34:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      38:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      3c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      40:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      44:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      48:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      4c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      50:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      54:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      58:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      5c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      60:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      64:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      68:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      6c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__trampolines_end>:
	...
      a6:	00 06       	cpc	r0, r16
      a8:	5f 5f       	subi	r21, 0xFF	; 255
      aa:	06 00       	.word	0x0006	; ????
      ac:	00 00       	nop
      ae:	00 07       	cpc	r16, r16
      b0:	07 00       	.word	0x0007	; ????
      b2:	07 07       	cpc	r16, r23
      b4:	00 00       	nop
      b6:	14 7f       	andi	r17, 0xF4	; 244
      b8:	7f 14       	cp	r7, r15
      ba:	7f 7f       	andi	r23, 0xFF	; 255
      bc:	14 00       	.word	0x0014	; ????
      be:	24 2e       	mov	r2, r20
      c0:	6b 6b       	ori	r22, 0xBB	; 187
      c2:	3a 12       	cpse	r3, r26
      c4:	00 00       	nop
      c6:	46 66       	ori	r20, 0x66	; 102
      c8:	30 18       	sub	r3, r0
      ca:	0c 66       	ori	r16, 0x6C	; 108
      cc:	62 00       	.word	0x0062	; ????
      ce:	30 7a       	andi	r19, 0xA0	; 160
      d0:	4f 5d       	subi	r20, 0xDF	; 223
      d2:	37 7a       	andi	r19, 0xA7	; 167
      d4:	48 00       	.word	0x0048	; ????
      d6:	04 07       	cpc	r16, r20
      d8:	03 00       	.word	0x0003	; ????
      da:	00 00       	nop
      dc:	00 00       	nop
      de:	00 1c       	adc	r0, r0
      e0:	3e 63       	ori	r19, 0x3E	; 62
      e2:	41 00       	.word	0x0041	; ????
      e4:	00 00       	nop
      e6:	00 41       	sbci	r16, 0x10	; 16
      e8:	63 3e       	cpi	r22, 0xE3	; 227
      ea:	1c 00       	.word	0x001c	; ????
      ec:	00 00       	nop
      ee:	08 2a       	or	r0, r24
      f0:	3e 1c       	adc	r3, r14
      f2:	1c 3e       	cpi	r17, 0xEC	; 236
      f4:	2a 08       	sbc	r2, r10
      f6:	08 08       	sbc	r0, r8
      f8:	3e 3e       	cpi	r19, 0xEE	; 238
      fa:	08 08       	sbc	r0, r8
      fc:	00 00       	nop
      fe:	00 a0       	ldd	r0, Z+32	; 0x20
     100:	e0 60       	ori	r30, 0x00	; 0
     102:	00 00       	nop
     104:	00 00       	nop
     106:	08 08       	sbc	r0, r8
     108:	08 08       	sbc	r0, r8
     10a:	08 08       	sbc	r0, r8
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	60 60       	ori	r22, 0x00	; 0
     112:	00 00       	nop
     114:	00 00       	nop
     116:	60 30       	cpi	r22, 0x00	; 0
     118:	18 0c       	add	r1, r8
     11a:	06 03       	mulsu	r16, r22
     11c:	01 00       	.word	0x0001	; ????
     11e:	3e 7f       	andi	r19, 0xFE	; 254
     120:	59 4d       	sbci	r21, 0xD9	; 217
     122:	7f 3e       	cpi	r23, 0xEF	; 239
     124:	00 00       	nop
     126:	42 42       	sbci	r20, 0x22	; 34
     128:	7f 7f       	andi	r23, 0xFF	; 255
     12a:	40 40       	sbci	r20, 0x00	; 0
     12c:	00 00       	nop
     12e:	62 73       	andi	r22, 0x32	; 50
     130:	59 49       	sbci	r21, 0x99	; 153
     132:	6f 66       	ori	r22, 0x6F	; 111
     134:	00 00       	nop
     136:	22 63       	ori	r18, 0x32	; 50
     138:	49 49       	sbci	r20, 0x99	; 153
     13a:	7f 36       	cpi	r23, 0x6F	; 111
     13c:	00 00       	nop
     13e:	18 1c       	adc	r1, r8
     140:	16 13       	cpse	r17, r22
     142:	7f 7f       	andi	r23, 0xFF	; 255
     144:	10 00       	.word	0x0010	; ????
     146:	27 67       	ori	r18, 0x77	; 119
     148:	45 45       	sbci	r20, 0x55	; 85
     14a:	7d 39       	cpi	r23, 0x9D	; 157
     14c:	00 00       	nop
     14e:	3c 7e       	andi	r19, 0xEC	; 236
     150:	4b 49       	sbci	r20, 0x9B	; 155
     152:	79 30       	cpi	r23, 0x09	; 9
     154:	00 00       	nop
     156:	03 63       	ori	r16, 0x33	; 51
     158:	71 19       	sub	r23, r1
     15a:	0f 07       	cpc	r16, r31
     15c:	00 00       	nop
     15e:	36 7f       	andi	r19, 0xF6	; 246
     160:	49 49       	sbci	r20, 0x99	; 153
     162:	7f 36       	cpi	r23, 0x6F	; 111
     164:	00 00       	nop
     166:	06 4f       	sbci	r16, 0xF6	; 246
     168:	49 69       	ori	r20, 0x99	; 153
     16a:	3f 1e       	adc	r3, r31
     16c:	00 00       	nop
     16e:	00 00       	nop
     170:	6c 6c       	ori	r22, 0xCC	; 204
     172:	00 00       	nop
     174:	00 00       	nop
     176:	00 a0       	ldd	r0, Z+32	; 0x20
     178:	ec 6c       	ori	r30, 0xCC	; 204
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	08 1c       	adc	r0, r8
     180:	36 63       	ori	r19, 0x36	; 54
     182:	41 00       	.word	0x0041	; ????
     184:	00 00       	nop
     186:	14 14       	cp	r1, r4
     188:	14 14       	cp	r1, r4
     18a:	14 14       	cp	r1, r4
     18c:	00 00       	nop
     18e:	00 41       	sbci	r16, 0x10	; 16
     190:	63 36       	cpi	r22, 0x63	; 99
     192:	1c 08       	sbc	r1, r12
     194:	00 00       	nop
     196:	02 03       	mulsu	r16, r18
     198:	51 59       	subi	r21, 0x91	; 145
     19a:	0f 06       	cpc	r0, r31
     19c:	00 00       	nop
     19e:	3e 7f       	andi	r19, 0xFE	; 254
     1a0:	41 5d       	subi	r20, 0xD1	; 209
     1a2:	5d 1f       	adc	r21, r29
     1a4:	1e 00       	.word	0x001e	; ????
     1a6:	7c 7e       	andi	r23, 0xEC	; 236
     1a8:	13 13       	cpse	r17, r19
     1aa:	7e 7c       	andi	r23, 0xCE	; 206
     1ac:	00 00       	nop
     1ae:	41 7f       	andi	r20, 0xF1	; 241
     1b0:	7f 49       	sbci	r23, 0x9F	; 159
     1b2:	49 7f       	andi	r20, 0xF9	; 249
     1b4:	36 00       	.word	0x0036	; ????
     1b6:	1c 3e       	cpi	r17, 0xEC	; 236
     1b8:	63 41       	sbci	r22, 0x13	; 19
     1ba:	41 63       	ori	r20, 0x31	; 49
     1bc:	22 00       	.word	0x0022	; ????
     1be:	41 7f       	andi	r20, 0xF1	; 241
     1c0:	7f 41       	sbci	r23, 0x1F	; 31
     1c2:	63 7f       	andi	r22, 0xF3	; 243
     1c4:	1c 00       	.word	0x001c	; ????
     1c6:	41 7f       	andi	r20, 0xF1	; 241
     1c8:	7f 49       	sbci	r23, 0x9F	; 159
     1ca:	5d 41       	sbci	r21, 0x1D	; 29
     1cc:	63 00       	.word	0x0063	; ????
     1ce:	41 7f       	andi	r20, 0xF1	; 241
     1d0:	7f 49       	sbci	r23, 0x9F	; 159
     1d2:	1d 01       	movw	r2, r26
     1d4:	03 00       	.word	0x0003	; ????
     1d6:	1c 3e       	cpi	r17, 0xEC	; 236
     1d8:	63 41       	sbci	r22, 0x13	; 19
     1da:	51 73       	andi	r21, 0x31	; 49
     1dc:	72 00       	.word	0x0072	; ????
     1de:	7f 7f       	andi	r23, 0xFF	; 255
     1e0:	08 08       	sbc	r0, r8
     1e2:	7f 7f       	andi	r23, 0xFF	; 255
     1e4:	00 00       	nop
     1e6:	00 41       	sbci	r16, 0x10	; 16
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	41 00       	.word	0x0041	; ????
     1ec:	00 00       	nop
     1ee:	30 70       	andi	r19, 0x00	; 0
     1f0:	40 41       	sbci	r20, 0x10	; 16
     1f2:	7f 3f       	cpi	r23, 0xFF	; 255
     1f4:	01 00       	.word	0x0001	; ????
     1f6:	41 7f       	andi	r20, 0xF1	; 241
     1f8:	7f 08       	sbc	r7, r15
     1fa:	1c 77       	andi	r17, 0x7C	; 124
     1fc:	63 00       	.word	0x0063	; ????
     1fe:	41 7f       	andi	r20, 0xF1	; 241
     200:	7f 41       	sbci	r23, 0x1F	; 31
     202:	40 60       	ori	r20, 0x00	; 0
     204:	70 00       	.word	0x0070	; ????
     206:	7f 7f       	andi	r23, 0xFF	; 255
     208:	06 0c       	add	r0, r6
     20a:	06 7f       	andi	r16, 0xF6	; 246
     20c:	7f 00       	.word	0x007f	; ????
     20e:	7f 7f       	andi	r23, 0xFF	; 255
     210:	06 0c       	add	r0, r6
     212:	18 7f       	andi	r17, 0xF8	; 248
     214:	7f 00       	.word	0x007f	; ????
     216:	1c 3e       	cpi	r17, 0xEC	; 236
     218:	63 41       	sbci	r22, 0x13	; 19
     21a:	63 3e       	cpi	r22, 0xE3	; 227
     21c:	1c 00       	.word	0x001c	; ????
     21e:	41 7f       	andi	r20, 0xF1	; 241
     220:	7f 49       	sbci	r23, 0x9F	; 159
     222:	09 0f       	add	r16, r25
     224:	06 00       	.word	0x0006	; ????
     226:	1e 3f       	cpi	r17, 0xFE	; 254
     228:	21 71       	andi	r18, 0x11	; 17
     22a:	7f 5e       	subi	r23, 0xEF	; 239
     22c:	00 00       	nop
     22e:	41 7f       	andi	r20, 0xF1	; 241
     230:	7f 19       	sub	r23, r15
     232:	39 6f       	ori	r19, 0xF9	; 249
     234:	46 00       	.word	0x0046	; ????
     236:	26 67       	ori	r18, 0x76	; 118
     238:	4d 59       	subi	r20, 0x9D	; 157
     23a:	7b 32       	cpi	r23, 0x2B	; 43
     23c:	00 00       	nop
     23e:	03 41       	sbci	r16, 0x13	; 19
     240:	7f 7f       	andi	r23, 0xFF	; 255
     242:	41 03       	mulsu	r20, r17
     244:	00 00       	nop
     246:	7f 7f       	andi	r23, 0xFF	; 255
     248:	40 40       	sbci	r20, 0x00	; 0
     24a:	7f 7f       	andi	r23, 0xFF	; 255
     24c:	00 00       	nop
     24e:	1f 3f       	cpi	r17, 0xFF	; 255
     250:	60 60       	ori	r22, 0x00	; 0
     252:	3f 1f       	adc	r19, r31
     254:	00 00       	nop
     256:	7f 7f       	andi	r23, 0xFF	; 255
     258:	30 18       	sub	r3, r0
     25a:	30 7f       	andi	r19, 0xF0	; 240
     25c:	7f 00       	.word	0x007f	; ????
     25e:	63 77       	andi	r22, 0x73	; 115
     260:	1c 08       	sbc	r1, r12
     262:	1c 77       	andi	r17, 0x7C	; 124
     264:	63 00       	.word	0x0063	; ????
     266:	07 4f       	sbci	r16, 0xF7	; 247
     268:	78 78       	andi	r23, 0x88	; 136
     26a:	4f 07       	cpc	r20, r31
     26c:	00 00       	nop
     26e:	67 73       	andi	r22, 0x37	; 55
     270:	59 4d       	sbci	r21, 0xD9	; 217
     272:	47 63       	ori	r20, 0x37	; 55
     274:	71 00       	.word	0x0071	; ????
     276:	00 7f       	andi	r16, 0xF0	; 240
     278:	7f 41       	sbci	r23, 0x1F	; 31
     27a:	41 00       	.word	0x0041	; ????
     27c:	00 00       	nop
     27e:	01 03       	mulsu	r16, r17
     280:	06 0c       	add	r0, r6
     282:	18 30       	cpi	r17, 0x08	; 8
     284:	60 00       	.word	0x0060	; ????
     286:	00 41       	sbci	r16, 0x10	; 16
     288:	41 7f       	andi	r20, 0xF1	; 241
     28a:	7f 00       	.word	0x007f	; ????
     28c:	00 00       	nop
     28e:	08 0c       	add	r0, r8
     290:	06 03       	mulsu	r16, r22
     292:	06 0c       	add	r0, r6
     294:	08 00       	.word	0x0008	; ????
     296:	80 80       	ld	r8, Z
     298:	80 80       	ld	r8, Z
     29a:	80 80       	ld	r8, Z
     29c:	80 80       	ld	r8, Z
     29e:	00 00       	nop
     2a0:	03 07       	cpc	r16, r19
     2a2:	04 00       	.word	0x0004	; ????
     2a4:	00 00       	nop
     2a6:	20 74       	andi	r18, 0x40	; 64
     2a8:	54 54       	subi	r21, 0x44	; 68
     2aa:	3c 78       	andi	r19, 0x8C	; 140
     2ac:	40 00       	.word	0x0040	; ????
     2ae:	41 3f       	cpi	r20, 0xF1	; 241
     2b0:	7f 44       	sbci	r23, 0x4F	; 79
     2b2:	44 7c       	andi	r20, 0xC4	; 196
     2b4:	38 00       	.word	0x0038	; ????
     2b6:	38 7c       	andi	r19, 0xC8	; 200
     2b8:	44 44       	sbci	r20, 0x44	; 68
     2ba:	6c 28       	or	r6, r12
     2bc:	00 00       	nop
     2be:	30 78       	andi	r19, 0x80	; 128
     2c0:	48 49       	sbci	r20, 0x98	; 152
     2c2:	3f 7f       	andi	r19, 0xFF	; 255
     2c4:	40 00       	.word	0x0040	; ????
     2c6:	38 7c       	andi	r19, 0xC8	; 200
     2c8:	54 54       	subi	r21, 0x44	; 68
     2ca:	5c 18       	sub	r5, r12
     2cc:	00 00       	nop
     2ce:	48 7e       	andi	r20, 0xE8	; 232
     2d0:	7f 49       	sbci	r23, 0x9F	; 159
     2d2:	03 02       	muls	r16, r19
     2d4:	00 00       	nop
     2d6:	98 bc       	out	0x28, r9	; 40
     2d8:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2da:	f8 7c       	andi	r31, 0xC8	; 200
     2dc:	04 00       	.word	0x0004	; ????
     2de:	41 7f       	andi	r20, 0xF1	; 241
     2e0:	7f 08       	sbc	r7, r15
     2e2:	04 7c       	andi	r16, 0xC4	; 196
     2e4:	78 00       	.word	0x0078	; ????
     2e6:	00 44       	sbci	r16, 0x40	; 64
     2e8:	7d 7d       	andi	r23, 0xDD	; 221
     2ea:	40 00       	.word	0x0040	; ????
     2ec:	00 00       	nop
     2ee:	40 c4       	rjmp	.+2176   	; 0xb70 <pos_read+0x48>
     2f0:	84 fd       	sbrc	r24, 4
     2f2:	7d 00       	.word	0x007d	; ????
     2f4:	00 00       	nop
     2f6:	41 7f       	andi	r20, 0xF1	; 241
     2f8:	7f 10       	cpse	r7, r15
     2fa:	38 6c       	ori	r19, 0xC8	; 200
     2fc:	44 00       	.word	0x0044	; ????
     2fe:	00 41       	sbci	r16, 0x10	; 16
     300:	7f 7f       	andi	r23, 0xFF	; 255
     302:	40 00       	.word	0x0040	; ????
     304:	00 00       	nop
     306:	7c 7c       	andi	r23, 0xCC	; 204
     308:	0c 18       	sub	r0, r12
     30a:	0c 7c       	andi	r16, 0xCC	; 204
     30c:	78 00       	.word	0x0078	; ????
     30e:	7c 7c       	andi	r23, 0xCC	; 204
     310:	04 04       	cpc	r0, r4
     312:	7c 78       	andi	r23, 0x8C	; 140
     314:	00 00       	nop
     316:	38 7c       	andi	r19, 0xC8	; 200
     318:	44 44       	sbci	r20, 0x44	; 68
     31a:	7c 38       	cpi	r23, 0x8C	; 140
     31c:	00 00       	nop
     31e:	84 fc       	sbrc	r8, 4
     320:	f8 a4       	ldd	r15, Y+40	; 0x28
     322:	24 3c       	cpi	r18, 0xC4	; 196
     324:	18 00       	.word	0x0018	; ????
     326:	18 3c       	cpi	r17, 0xC8	; 200
     328:	24 a4       	ldd	r2, Z+44	; 0x2c
     32a:	f8 fc       	.word	0xfcf8	; ????
     32c:	84 00       	.word	0x0084	; ????
     32e:	44 7c       	andi	r20, 0xC4	; 196
     330:	78 44       	sbci	r23, 0x48	; 72
     332:	1c 18       	sub	r1, r12
     334:	00 00       	nop
     336:	48 5c       	subi	r20, 0xC8	; 200
     338:	54 54       	subi	r21, 0x44	; 68
     33a:	74 24       	eor	r7, r4
     33c:	00 00       	nop
     33e:	00 04       	cpc	r0, r0
     340:	3e 7f       	andi	r19, 0xFE	; 254
     342:	44 24       	eor	r4, r4
     344:	00 00       	nop
     346:	3c 7c       	andi	r19, 0xCC	; 204
     348:	40 40       	sbci	r20, 0x00	; 0
     34a:	3c 7c       	andi	r19, 0xCC	; 204
     34c:	40 00       	.word	0x0040	; ????
     34e:	1c 3c       	cpi	r17, 0xCC	; 204
     350:	60 60       	ori	r22, 0x00	; 0
     352:	3c 1c       	adc	r3, r12
     354:	00 00       	nop
     356:	3c 7c       	andi	r19, 0xCC	; 204
     358:	60 30       	cpi	r22, 0x00	; 0
     35a:	60 7c       	andi	r22, 0xC0	; 192
     35c:	3c 00       	.word	0x003c	; ????
     35e:	44 6c       	ori	r20, 0xC4	; 196
     360:	38 10       	cpse	r3, r8
     362:	38 6c       	ori	r19, 0xC8	; 200
     364:	44 00       	.word	0x0044	; ????
     366:	9c bc       	out	0x2c, r9	; 44
     368:	a0 a0       	ldd	r10, Z+32	; 0x20
     36a:	fc 7c       	andi	r31, 0xCC	; 204
     36c:	00 00       	nop
     36e:	4c 64       	ori	r20, 0x4C	; 76
     370:	74 5c       	subi	r23, 0xC4	; 196
     372:	4c 64       	ori	r20, 0x4C	; 76
     374:	00 00       	nop
     376:	08 08       	sbc	r0, r8
     378:	3e 77       	andi	r19, 0x7E	; 126
     37a:	41 41       	sbci	r20, 0x11	; 17
     37c:	00 00       	nop
     37e:	00 00       	nop
     380:	00 77       	andi	r16, 0x70	; 112
     382:	77 00       	.word	0x0077	; ????
     384:	00 00       	nop
     386:	41 41       	sbci	r20, 0x11	; 17
     388:	77 3e       	cpi	r23, 0xE7	; 231
     38a:	08 08       	sbc	r0, r8
     38c:	00 00       	nop
     38e:	02 03       	mulsu	r16, r18
     390:	01 03       	mulsu	r16, r17
     392:	02 03       	mulsu	r16, r18
     394:	01 00       	.word	0x0001	; ????

00000396 <__ctors_end>:
     396:	11 24       	eor	r1, r1
     398:	1f be       	out	0x3f, r1	; 63
     39a:	cf ef       	ldi	r28, 0xFF	; 255
     39c:	d4 e0       	ldi	r29, 0x04	; 4
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	cd bf       	out	0x3d, r28	; 61

000003a2 <__do_copy_data>:
     3a2:	12 e0       	ldi	r17, 0x02	; 2
     3a4:	a0 e0       	ldi	r26, 0x00	; 0
     3a6:	b1 e0       	ldi	r27, 0x01	; 1
     3a8:	ec e3       	ldi	r30, 0x3C	; 60
     3aa:	fe e1       	ldi	r31, 0x1E	; 30
     3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <__do_copy_data+0x10>
     3ae:	05 90       	lpm	r0, Z+
     3b0:	0d 92       	st	X+, r0
     3b2:	a6 35       	cpi	r26, 0x56	; 86
     3b4:	b1 07       	cpc	r27, r17
     3b6:	d9 f7       	brne	.-10     	; 0x3ae <__do_copy_data+0xc>

000003b8 <__do_clear_bss>:
     3b8:	22 e0       	ldi	r18, 0x02	; 2
     3ba:	a6 e5       	ldi	r26, 0x56	; 86
     3bc:	b2 e0       	ldi	r27, 0x02	; 2
     3be:	01 c0       	rjmp	.+2      	; 0x3c2 <.do_clear_bss_start>

000003c0 <.do_clear_bss_loop>:
     3c0:	1d 92       	st	X+, r1

000003c2 <.do_clear_bss_start>:
     3c2:	ab 3e       	cpi	r26, 0xEB	; 235
     3c4:	b2 07       	cpc	r27, r18
     3c6:	e1 f7       	brne	.-8      	; 0x3c0 <.do_clear_bss_loop>
     3c8:	0e 94 5d 07 	call	0xeba	; 0xeba <main>
     3cc:	0c 94 1c 0f 	jmp	0x1e38	; 0x1e38 <_exit>

000003d0 <__bad_interrupt>:
     3d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003d4 <ADC_read>:
    uint8_t retreived_value = ext_ram1[adrs];
    if (retreived_value != 0b01010101) {
        printf("ADC error, ext_ram1[%4d] = %02X  \n\r", adrs, retreived_value);
    }
    else{
        printf("ADC success, ext_ram1[%4d] = %02X  \n\r", adrs, retreived_value);
     3d4:	80 68       	ori	r24, 0x80	; 128
     3d6:	e1 e0       	ldi	r30, 0x01	; 1
     3d8:	f4 e1       	ldi	r31, 0x14	; 20
     3da:	80 83       	st	Z, r24
     3dc:	86 ef       	ldi	r24, 0xF6	; 246
     3de:	8a 95       	dec	r24
     3e0:	f1 f7       	brne	.-4      	; 0x3de <ADC_read+0xa>
     3e2:	80 81       	ld	r24, Z
     3e4:	08 95       	ret

000003e6 <ADC_calibrate>:
     3e6:	e1 e0       	ldi	r30, 0x01	; 1
     3e8:	f4 e1       	ldi	r31, 0x14	; 20
     3ea:	20 e8       	ldi	r18, 0x80	; 128
     3ec:	20 83       	st	Z, r18
     3ee:	26 ef       	ldi	r18, 0xF6	; 246
     3f0:	2a 95       	dec	r18
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <ADC_calibrate+0xa>
     3f4:	20 81       	ld	r18, Z
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	dc 01       	movw	r26, r24
     3fa:	2d 93       	st	X+, r18
     3fc:	3c 93       	st	X, r19
     3fe:	21 e8       	ldi	r18, 0x81	; 129
     400:	20 83       	st	Z, r18
     402:	b6 ef       	ldi	r27, 0xF6	; 246
     404:	ba 95       	dec	r27
     406:	f1 f7       	brne	.-4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     408:	20 81       	ld	r18, Z
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	fc 01       	movw	r30, r24
     40e:	33 83       	std	Z+3, r19	; 0x03
     410:	22 83       	std	Z+2, r18	; 0x02
     412:	08 95       	ret

00000414 <timer_init>:
}


void timer_init(void) {

    DDRB|=(1<<PB0);  /*set OC0 pin as output*/
     414:	b8 9a       	sbi	0x17, 0	; 23

    TCCR0 |= (1<<WGM01) | (0<<WGM00);
     416:	83 b7       	in	r24, 0x33	; 51
     418:	88 60       	ori	r24, 0x08	; 8
     41a:	83 bf       	out	0x33, r24	; 51
    TCCR0 |= (1<<COM00);
     41c:	83 b7       	in	r24, 0x33	; 51
     41e:	80 61       	ori	r24, 0x10	; 16
     420:	83 bf       	out	0x33, r24	; 51
    TCCR0 |= (1<<CS00);
     422:	83 b7       	in	r24, 0x33	; 51
     424:	81 60       	ori	r24, 0x01	; 1
     426:	83 bf       	out	0x33, r24	; 51

    OCR0 = 0b00000001;
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	81 bf       	out	0x31, r24	; 49
     42c:	08 95       	ret

0000042e <__vector_3>:

    // Enable receive interrupts (RXB 0 and 1).
    mcp_write(MCP_CANINTE, MCP_RX_INT); //Enable buffer 1 and 0 interrupt.
}

ISR(INT2_vect){
     42e:	1f 92       	push	r1
     430:	0f 92       	push	r0
     432:	0f b6       	in	r0, 0x3f	; 63
     434:	0f 92       	push	r0
     436:	11 24       	eor	r1, r1
     438:	8f 93       	push	r24
    flag = 1;
     43a:	81 e0       	ldi	r24, 0x01	; 1
     43c:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <__data_end>
}
     440:	8f 91       	pop	r24
     442:	0f 90       	pop	r0
     444:	0f be       	out	0x3f, r0	; 63
     446:	0f 90       	pop	r0
     448:	1f 90       	pop	r1
     44a:	18 95       	reti

0000044c <oled_sel_row>:
    oled_line_down(page);

    for(uint8_t j = 0; j < 128; j++){
        write_data(0b00000000);   // sets bitmask of zero to a line/page
    }
}
     44c:	80 93 db 02 	sts	0x02DB, r24	; 0x8002db <oled_position>
     450:	87 70       	andi	r24, 0x07	; 7
     452:	80 55       	subi	r24, 0x50	; 80
     454:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     458:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     45c:	80 83       	st	Z, r24
     45e:	08 95       	ret

00000460 <oled_sel_col>:
     460:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <oled_position+0x1>
     464:	98 2f       	mov	r25, r24
     466:	9f 70       	andi	r25, 0x0F	; 15
     468:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     46c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     470:	90 83       	st	Z, r25
     472:	82 95       	swap	r24
     474:	8f 70       	andi	r24, 0x0F	; 15
     476:	80 5f       	subi	r24, 0xF0	; 240
     478:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     47c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     480:	80 83       	st	Z, r24
     482:	08 95       	ret

00000484 <oled_line_down>:
     484:	80 55       	subi	r24, 0x50	; 80
     486:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     48a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     48e:	80 83       	st	Z, r24
     490:	08 95       	ret

00000492 <oled_pos_set>:
     492:	cf 93       	push	r28
     494:	c6 2f       	mov	r28, r22
     496:	0e 94 26 02 	call	0x44c	; 0x44c <oled_sel_row>
     49a:	8c 2f       	mov	r24, r28
     49c:	0e 94 30 02 	call	0x460	; 0x460 <oled_sel_col>
     4a0:	cf 91       	pop	r28
     4a2:	08 95       	ret

000004a4 <oled_home>:
     4a4:	60 e0       	ldi	r22, 0x00	; 0
     4a6:	80 e0       	ldi	r24, 0x00	; 0
     4a8:	0e 94 49 02 	call	0x492	; 0x492 <oled_pos_set>
     4ac:	08 95       	ret

000004ae <oled_clear>:
     4ae:	1f 93       	push	r17
     4b0:	cf 93       	push	r28
     4b2:	df 93       	push	r29
     4b4:	10 e0       	ldi	r17, 0x00	; 0
     4b6:	c6 ea       	ldi	r28, 0xA6	; 166
     4b8:	d0 e0       	ldi	r29, 0x00	; 0
     4ba:	81 2f       	mov	r24, r17
     4bc:	0e 94 42 02 	call	0x484	; 0x484 <oled_line_down>
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0d c0       	rjmp	.+26     	; 0x4de <oled_clear+0x30>
     4c4:	84 91       	lpm	r24, Z
     4c6:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <oled_write_data>
     4ca:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <oled_write_data+0x1>
     4ce:	8c 93       	st	X, r24
     4d0:	31 96       	adiw	r30, 0x01	; 1
     4d2:	ec 17       	cp	r30, r28
     4d4:	fd 07       	cpc	r31, r29
     4d6:	b1 f7       	brne	.-20     	; 0x4c4 <oled_clear+0x16>
     4d8:	9f 5f       	subi	r25, 0xFF	; 255
     4da:	90 38       	cpi	r25, 0x80	; 128
     4dc:	19 f0       	breq	.+6      	; 0x4e4 <oled_clear+0x36>
     4de:	ee e9       	ldi	r30, 0x9E	; 158
     4e0:	f0 e0       	ldi	r31, 0x00	; 0
     4e2:	f0 cf       	rjmp	.-32     	; 0x4c4 <oled_clear+0x16>
     4e4:	1f 5f       	subi	r17, 0xFF	; 255
     4e6:	18 30       	cpi	r17, 0x08	; 8
     4e8:	41 f7       	brne	.-48     	; 0x4ba <oled_clear+0xc>
     4ea:	0e 94 52 02 	call	0x4a4	; 0x4a4 <oled_home>
     4ee:	df 91       	pop	r29
     4f0:	cf 91       	pop	r28
     4f2:	1f 91       	pop	r17
     4f4:	08 95       	ret

000004f6 <OLED_init>:
     4f6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     4fa:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     4fe:	8e ea       	ldi	r24, 0xAE	; 174
     500:	80 83       	st	Z, r24
     502:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     506:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     50a:	81 ea       	ldi	r24, 0xA1	; 161
     50c:	80 83       	st	Z, r24
     50e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     512:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     516:	8a ed       	ldi	r24, 0xDA	; 218
     518:	80 83       	st	Z, r24
     51a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     51e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     522:	82 e1       	ldi	r24, 0x12	; 18
     524:	80 83       	st	Z, r24
     526:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     52a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     52e:	88 ec       	ldi	r24, 0xC8	; 200
     530:	80 83       	st	Z, r24
     532:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     536:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     53a:	88 ea       	ldi	r24, 0xA8	; 168
     53c:	80 83       	st	Z, r24
     53e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     542:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     546:	8f e3       	ldi	r24, 0x3F	; 63
     548:	80 83       	st	Z, r24
     54a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     54e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     552:	85 ed       	ldi	r24, 0xD5	; 213
     554:	80 83       	st	Z, r24
     556:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     55a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     55e:	80 e8       	ldi	r24, 0x80	; 128
     560:	80 83       	st	Z, r24
     562:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     566:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     56a:	81 e8       	ldi	r24, 0x81	; 129
     56c:	80 83       	st	Z, r24
     56e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     572:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     576:	80 e5       	ldi	r24, 0x50	; 80
     578:	80 83       	st	Z, r24
     57a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     57e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     582:	89 ed       	ldi	r24, 0xD9	; 217
     584:	80 83       	st	Z, r24
     586:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     58a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     58e:	81 e2       	ldi	r24, 0x21	; 33
     590:	80 83       	st	Z, r24
     592:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     596:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     59a:	80 e2       	ldi	r24, 0x20	; 32
     59c:	80 83       	st	Z, r24
     59e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     5a2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     5a6:	82 e0       	ldi	r24, 0x02	; 2
     5a8:	80 83       	st	Z, r24
     5aa:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     5ae:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     5b2:	8b ed       	ldi	r24, 0xDB	; 219
     5b4:	80 83       	st	Z, r24
     5b6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     5ba:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     5be:	80 e3       	ldi	r24, 0x30	; 48
     5c0:	80 83       	st	Z, r24
     5c2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     5c6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     5ca:	8d ea       	ldi	r24, 0xAD	; 173
     5cc:	80 83       	st	Z, r24
     5ce:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     5d2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     5d6:	10 82       	st	Z, r1
     5d8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     5dc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     5e0:	84 ea       	ldi	r24, 0xA4	; 164
     5e2:	80 83       	st	Z, r24
     5e4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     5e8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     5ec:	86 ea       	ldi	r24, 0xA6	; 166
     5ee:	80 83       	st	Z, r24
     5f0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     5f4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     5f8:	8f ea       	ldi	r24, 0xAF	; 175
     5fa:	80 83       	st	Z, r24
     5fc:	0e 94 57 02 	call	0x4ae	; 0x4ae <oled_clear>
     600:	0e 94 52 02 	call	0x4a4	; 0x4a4 <oled_home>
     604:	08 95       	ret

00000606 <oled_write_character>:

void oled_write_character(uint8_t c){
     606:	28 2f       	mov	r18, r24
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	f9 01       	movw	r30, r18
     60c:	ee 0f       	add	r30, r30
     60e:	ff 1f       	adc	r31, r31
     610:	ee 0f       	add	r30, r30
     612:	ff 1f       	adc	r31, r31
     614:	ee 0f       	add	r30, r30
     616:	ff 1f       	adc	r31, r31
     618:	e2 56       	subi	r30, 0x62	; 98
     61a:	f0 40       	sbci	r31, 0x00	; 0
     61c:	22 0f       	add	r18, r18
     61e:	33 1f       	adc	r19, r19
     620:	22 0f       	add	r18, r18
     622:	33 1f       	adc	r19, r19
     624:	22 0f       	add	r18, r18
     626:	33 1f       	adc	r19, r19
     628:	2a 55       	subi	r18, 0x5A	; 90
     62a:	30 40       	sbci	r19, 0x00	; 0
     for(uint8_t i = 0; i < 8; i++){
         write_data(pgm_read_byte( &font8[c-32][i] ) );
     62c:	94 91       	lpm	r25, Z
    oled_clear();
    oled_home();
}

void write_data(uint8_t data){
    oled_write_data[0] = data;      // @SRAM location
     62e:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <oled_write_data>
     632:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <oled_write_data+0x1>
     636:	9c 93       	st	X, r25
     638:	31 96       	adiw	r30, 0x01	; 1
        write_data(0b00000000);   // sets bitmask of zero to a line/page
    }
}

void oled_write_character(uint8_t c){
     for(uint8_t i = 0; i < 8; i++){
     63a:	e2 17       	cp	r30, r18
     63c:	f3 07       	cpc	r31, r19
     63e:	b1 f7       	brne	.-20     	; 0x62c <oled_write_character+0x26>
         write_data(pgm_read_byte( &font8[c-32][i] ) );
     }
}
     640:	08 95       	ret

00000642 <oled_print>:

void oled_print(char* string){
     642:	0f 93       	push	r16
     644:	1f 93       	push	r17
     646:	cf 93       	push	r28
     648:	df 93       	push	r29
    int length = strlen(&string[0]);
     64a:	fc 01       	movw	r30, r24
     64c:	01 90       	ld	r0, Z+
     64e:	00 20       	and	r0, r0
     650:	e9 f7       	brne	.-6      	; 0x64c <oled_print+0xa>
     652:	31 97       	sbiw	r30, 0x01	; 1
     654:	e8 1b       	sub	r30, r24
     656:	f9 0b       	sbc	r31, r25

    for(int i = 0; i < length; i++ ){
     658:	1e 16       	cp	r1, r30
     65a:	1f 06       	cpc	r1, r31
     65c:	54 f4       	brge	.+20     	; 0x672 <oled_print+0x30>
     65e:	ec 01       	movw	r28, r24
     660:	8c 01       	movw	r16, r24
     662:	0e 0f       	add	r16, r30
     664:	1f 1f       	adc	r17, r31

        oled_write_character(string[i]);
     666:	89 91       	ld	r24, Y+
     668:	0e 94 03 03 	call	0x606	; 0x606 <oled_write_character>
}

void oled_print(char* string){
    int length = strlen(&string[0]);

    for(int i = 0; i < length; i++ ){
     66c:	c0 17       	cp	r28, r16
     66e:	d1 07       	cpc	r29, r17
     670:	d1 f7       	brne	.-12     	; 0x666 <oled_print+0x24>

        oled_write_character(string[i]);
    }
}
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	1f 91       	pop	r17
     678:	0f 91       	pop	r16
     67a:	08 95       	ret

0000067c <oled_print_arrow>:


void oled_print_arrow(uint8_t row, uint8_t col){
    oled_pos_set(row, col);
     67c:	0e 94 49 02 	call	0x492	; 0x492 <oled_pos_set>
    oled_clear();
    oled_home();
}

void write_data(uint8_t data){
    oled_write_data[0] = data;      // @SRAM location
     680:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     684:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     688:	88 e1       	ldi	r24, 0x18	; 24
     68a:	80 83       	st	Z, r24
     68c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     690:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     694:	80 83       	st	Z, r24
     696:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     69a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     69e:	9e e7       	ldi	r25, 0x7E	; 126
     6a0:	90 83       	st	Z, r25
     6a2:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     6a6:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     6aa:	9c e3       	ldi	r25, 0x3C	; 60
     6ac:	90 83       	st	Z, r25
     6ae:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     6b2:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     6b6:	80 83       	st	Z, r24
     6b8:	08 95       	ret

000006ba <play_game>:
    if(child == 0){
        child = current_node->elements_on_screen;
    }

    return child;
}
     6ba:	8a e1       	ldi	r24, 0x1A	; 26
     6bc:	91 e0       	ldi	r25, 0x01	; 1
     6be:	9f 93       	push	r25
     6c0:	8f 93       	push	r24
     6c2:	0e 94 ca 0a 	call	0x1594	; 0x1594 <printf>
     6c6:	0f 90       	pop	r0
     6c8:	0f 90       	pop	r0
     6ca:	08 95       	ret

000006cc <build_node>:
     6cc:	cf 92       	push	r12
     6ce:	df 92       	push	r13
     6d0:	ef 92       	push	r14
     6d2:	ff 92       	push	r15
     6d4:	0f 93       	push	r16
     6d6:	1f 93       	push	r17
     6d8:	cf 93       	push	r28
     6da:	df 93       	push	r29
     6dc:	ec 01       	movw	r28, r24
     6de:	69 01       	movw	r12, r18
     6e0:	79 83       	std	Y+1, r23	; 0x01
     6e2:	68 83       	st	Y, r22
     6e4:	ba 01       	movw	r22, r20
     6e6:	46 96       	adiw	r24, 0x16	; 22
     6e8:	0e 94 78 0a 	call	0x14f0	; 0x14f0 <strcpy>
     6ec:	dd 8a       	std	Y+21, r13	; 0x15
     6ee:	cc 8a       	std	Y+20, r12	; 0x14
     6f0:	fb 8a       	std	Y+19, r15	; 0x13
     6f2:	ea 8a       	std	Y+18, r14	; 0x12
     6f4:	a0 2f       	mov	r26, r16
     6f6:	b1 2f       	mov	r27, r17
     6f8:	fe 01       	movw	r30, r28
     6fa:	32 96       	adiw	r30, 0x02	; 2
     6fc:	ce 01       	movw	r24, r28
     6fe:	42 96       	adiw	r24, 0x12	; 18
     700:	2d 91       	ld	r18, X+
     702:	3d 91       	ld	r19, X+
     704:	21 93       	st	Z+, r18
     706:	31 93       	st	Z+, r19
     708:	e8 17       	cp	r30, r24
     70a:	f9 07       	cpc	r31, r25
     70c:	c9 f7       	brne	.-14     	; 0x700 <build_node+0x34>
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	1f 91       	pop	r17
     714:	0f 91       	pop	r16
     716:	ff 90       	pop	r15
     718:	ef 90       	pop	r14
     71a:	df 90       	pop	r13
     71c:	cf 90       	pop	r12
     71e:	08 95       	ret

00000720 <go_up>:
     720:	dc 01       	movw	r26, r24
     722:	ed 91       	ld	r30, X+
     724:	fc 91       	ld	r31, X
     726:	20 81       	ld	r18, Z
     728:	31 81       	ldd	r19, Z+1	; 0x01
     72a:	21 15       	cp	r18, r1
     72c:	31 05       	cpc	r19, r1
     72e:	59 f0       	breq	.+22     	; 0x746 <go_up+0x26>
     730:	fc 01       	movw	r30, r24
     732:	31 83       	std	Z+1, r19	; 0x01
     734:	20 83       	st	Z, r18
     736:	8e e2       	ldi	r24, 0x2E	; 46
     738:	91 e0       	ldi	r25, 0x01	; 1
     73a:	9f 93       	push	r25
     73c:	8f 93       	push	r24
     73e:	0e 94 ca 0a 	call	0x1594	; 0x1594 <printf>
     742:	0f 90       	pop	r0
     744:	0f 90       	pop	r0
     746:	08 95       	ret

00000748 <go_down>:
     748:	fc 01       	movw	r30, r24
     74a:	a0 81       	ld	r26, Z
     74c:	b1 81       	ldd	r27, Z+1	; 0x01
     74e:	fb 01       	movw	r30, r22
     750:	ee 0f       	add	r30, r30
     752:	ff 1f       	adc	r31, r31
     754:	ea 0f       	add	r30, r26
     756:	fb 1f       	adc	r31, r27
     758:	20 81       	ld	r18, Z
     75a:	31 81       	ldd	r19, Z+1	; 0x01
     75c:	21 15       	cp	r18, r1
     75e:	31 05       	cpc	r19, r1
     760:	41 f0       	breq	.+16     	; 0x772 <go_down+0x2a>
     762:	fc 01       	movw	r30, r24
     764:	31 83       	std	Z+1, r19	; 0x01
     766:	20 83       	st	Z, r18
     768:	83 e3       	ldi	r24, 0x33	; 51
     76a:	91 e0       	ldi	r25, 0x01	; 1
     76c:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
     770:	08 95       	ret
     772:	54 96       	adiw	r26, 0x14	; 20
     774:	ed 91       	ld	r30, X+
     776:	fc 91       	ld	r31, X
     778:	55 97       	sbiw	r26, 0x15	; 21
     77a:	30 97       	sbiw	r30, 0x00	; 0
     77c:	31 f0       	breq	.+12     	; 0x78a <go_down+0x42>
     77e:	09 95       	icall
     780:	8f e3       	ldi	r24, 0x3F	; 63
     782:	91 e0       	ldi	r25, 0x01	; 1
     784:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
     788:	08 95       	ret
     78a:	85 e5       	ldi	r24, 0x55	; 85
     78c:	91 e0       	ldi	r25, 0x01	; 1
     78e:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
     792:	08 95       	ret

00000794 <wait_for_action>:
     794:	cf 93       	push	r28
     796:	81 e6       	ldi	r24, 0x61	; 97
     798:	91 e0       	ldi	r25, 0x01	; 1
     79a:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
     79e:	0e 94 83 06 	call	0xd06	; 0xd06 <joystick_direction>
     7a2:	84 30       	cpi	r24, 0x04	; 4
     7a4:	29 f4       	brne	.+10     	; 0x7b0 <wait_for_action+0x1c>
     7a6:	82 e0       	ldi	r24, 0x02	; 2
     7a8:	0e 94 49 07 	call	0xe92	; 0xe92 <usb_button_pushed>
     7ac:	88 23       	and	r24, r24
     7ae:	b9 f3       	breq	.-18     	; 0x79e <wait_for_action+0xa>
     7b0:	0e 94 83 06 	call	0xd06	; 0xd06 <joystick_direction>
     7b4:	c8 2f       	mov	r28, r24
     7b6:	82 30       	cpi	r24, 0x02	; 2
     7b8:	29 f4       	brne	.+10     	; 0x7c4 <wait_for_action+0x30>
     7ba:	87 e7       	ldi	r24, 0x77	; 119
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
     7c2:	16 c0       	rjmp	.+44     	; 0x7f0 <wait_for_action+0x5c>
     7c4:	0e 94 83 06 	call	0xd06	; 0xd06 <joystick_direction>
     7c8:	c8 2f       	mov	r28, r24
     7ca:	83 30       	cpi	r24, 0x03	; 3
     7cc:	89 f0       	breq	.+34     	; 0x7f0 <wait_for_action+0x5c>
     7ce:	0e 94 83 06 	call	0xd06	; 0xd06 <joystick_direction>
     7d2:	c8 2f       	mov	r28, r24
     7d4:	81 30       	cpi	r24, 0x01	; 1
     7d6:	61 f0       	breq	.+24     	; 0x7f0 <wait_for_action+0x5c>
     7d8:	0e 94 83 06 	call	0xd06	; 0xd06 <joystick_direction>
     7dc:	c8 2f       	mov	r28, r24
     7de:	88 23       	and	r24, r24
     7e0:	39 f0       	breq	.+14     	; 0x7f0 <wait_for_action+0x5c>
     7e2:	82 e0       	ldi	r24, 0x02	; 2
     7e4:	0e 94 49 07 	call	0xe92	; 0xe92 <usb_button_pushed>
     7e8:	81 11       	cpse	r24, r1
     7ea:	01 c0       	rjmp	.+2      	; 0x7ee <wait_for_action+0x5a>
     7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <wait_for_action+0x5e>
     7ee:	c5 e0       	ldi	r28, 0x05	; 5
     7f0:	8c 2f       	mov	r24, r28
     7f2:	cf 91       	pop	r28
     7f4:	08 95       	ret

000007f6 <wait_for_neutral_joystick_position>:
     7f6:	0e 94 83 06 	call	0xd06	; 0xd06 <joystick_direction>
     7fa:	84 30       	cpi	r24, 0x04	; 4
     7fc:	e1 f7       	brne	.-8      	; 0x7f6 <wait_for_neutral_joystick_position>
     7fe:	08 95       	ret

00000800 <update_element_down>:

int update_element_down(Node *current_node, int child){

    child++;
     800:	6f 5f       	subi	r22, 0xFF	; 255
     802:	7f 4f       	sbci	r23, 0xFF	; 255

    if(child == current_node->elements_on_screen + 1){
     804:	fc 01       	movw	r30, r24
     806:	82 89       	ldd	r24, Z+18	; 0x12
     808:	93 89       	ldd	r25, Z+19	; 0x13
     80a:	01 96       	adiw	r24, 0x01	; 1
     80c:	68 17       	cp	r22, r24
     80e:	79 07       	cpc	r23, r25
     810:	11 f4       	brne	.+4      	; 0x816 <update_element_down+0x16>
        child = 1;
     812:	61 e0       	ldi	r22, 0x01	; 1
     814:	70 e0       	ldi	r23, 0x00	; 0
    }

    return child;
    
}
     816:	cb 01       	movw	r24, r22
     818:	08 95       	ret

0000081a <print_selecting_arrow>:

}


void print_selecting_arrow(int child){
    oled_print_arrow(child - 1, 5);
     81a:	65 e0       	ldi	r22, 0x05	; 5
     81c:	81 50       	subi	r24, 0x01	; 1
     81e:	0e 94 3e 03 	call	0x67c	; 0x67c <oled_print_arrow>
     822:	08 95       	ret

00000824 <print_main_menu_objects>:
        wait_for_neutral_joystick_position();
    }
}


void print_main_menu_objects(int child){
     824:	0f 93       	push	r16
     826:	1f 93       	push	r17
     828:	cf 93       	push	r28
     82a:	df 93       	push	r29
     82c:	cd b7       	in	r28, 0x3d	; 61
     82e:	de b7       	in	r29, 0x3e	; 62
     830:	2b 97       	sbiw	r28, 0x0b	; 11
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	f8 94       	cli
     836:	de bf       	out	0x3e, r29	; 62
     838:	0f be       	out	0x3f, r0	; 63
     83a:	cd bf       	out	0x3d, r28	; 61
     83c:	8c 01       	movw	r16, r24
    char line1[] = "play";
     83e:	85 e0       	ldi	r24, 0x05	; 5
     840:	e0 e8       	ldi	r30, 0x80	; 128
     842:	f1 e0       	ldi	r31, 0x01	; 1
     844:	de 01       	movw	r26, r28
     846:	11 96       	adiw	r26, 0x01	; 1
     848:	01 90       	ld	r0, Z+
     84a:	0d 92       	st	X+, r0
     84c:	8a 95       	dec	r24
     84e:	e1 f7       	brne	.-8      	; 0x848 <print_main_menu_objects+0x24>
    char line2[] = "Score";
     850:	86 e0       	ldi	r24, 0x06	; 6
     852:	e5 e8       	ldi	r30, 0x85	; 133
     854:	f1 e0       	ldi	r31, 0x01	; 1
     856:	de 01       	movw	r26, r28
     858:	16 96       	adiw	r26, 0x06	; 6
     85a:	01 90       	ld	r0, Z+
     85c:	0d 92       	st	X+, r0
     85e:	8a 95       	dec	r24
     860:	e1 f7       	brne	.-8      	; 0x85a <print_main_menu_objects+0x36>

    oled_pos_set(0, 12);
     862:	6c e0       	ldi	r22, 0x0C	; 12
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	0e 94 49 02 	call	0x492	; 0x492 <oled_pos_set>
    oled_print(&line1);
     86a:	ce 01       	movw	r24, r28
     86c:	01 96       	adiw	r24, 0x01	; 1
     86e:	0e 94 21 03 	call	0x642	; 0x642 <oled_print>

    oled_pos_set(1, 12);
     872:	6c e0       	ldi	r22, 0x0C	; 12
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	0e 94 49 02 	call	0x492	; 0x492 <oled_pos_set>
    oled_print(&line2);
     87a:	ce 01       	movw	r24, r28
     87c:	06 96       	adiw	r24, 0x06	; 6
     87e:	0e 94 21 03 	call	0x642	; 0x642 <oled_print>

    print_selecting_arrow(child);       //Draw the arrow that selects the preferable option.
     882:	c8 01       	movw	r24, r16
     884:	0e 94 0d 04 	call	0x81a	; 0x81a <print_selecting_arrow>
    
}
     888:	2b 96       	adiw	r28, 0x0b	; 11
     88a:	0f b6       	in	r0, 0x3f	; 63
     88c:	f8 94       	cli
     88e:	de bf       	out	0x3e, r29	; 62
     890:	0f be       	out	0x3f, r0	; 63
     892:	cd bf       	out	0x3d, r28	; 61
     894:	df 91       	pop	r29
     896:	cf 91       	pop	r28
     898:	1f 91       	pop	r17
     89a:	0f 91       	pop	r16
     89c:	08 95       	ret

0000089e <print_new_game_menu_objects>:

void print_new_game_menu_objects(int child){
     89e:	0f 93       	push	r16
     8a0:	1f 93       	push	r17
     8a2:	cf 93       	push	r28
     8a4:	df 93       	push	r29
     8a6:	cd b7       	in	r28, 0x3d	; 61
     8a8:	de b7       	in	r29, 0x3e	; 62
     8aa:	2b 97       	sbiw	r28, 0x0b	; 11
     8ac:	0f b6       	in	r0, 0x3f	; 63
     8ae:	f8 94       	cli
     8b0:	de bf       	out	0x3e, r29	; 62
     8b2:	0f be       	out	0x3f, r0	; 63
     8b4:	cd bf       	out	0x3d, r28	; 61
     8b6:	8c 01       	movw	r16, r24

    char line1[] = "Start game";
     8b8:	8b e0       	ldi	r24, 0x0B	; 11
     8ba:	eb e8       	ldi	r30, 0x8B	; 139
     8bc:	f1 e0       	ldi	r31, 0x01	; 1
     8be:	de 01       	movw	r26, r28
     8c0:	11 96       	adiw	r26, 0x01	; 1
     8c2:	01 90       	ld	r0, Z+
     8c4:	0d 92       	st	X+, r0
     8c6:	8a 95       	dec	r24
     8c8:	e1 f7       	brne	.-8      	; 0x8c2 <print_new_game_menu_objects+0x24>

    oled_pos_set(0, 12);
     8ca:	6c e0       	ldi	r22, 0x0C	; 12
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	0e 94 49 02 	call	0x492	; 0x492 <oled_pos_set>
    oled_print(&line1);
     8d2:	ce 01       	movw	r24, r28
     8d4:	01 96       	adiw	r24, 0x01	; 1
     8d6:	0e 94 21 03 	call	0x642	; 0x642 <oled_print>

    print_selecting_arrow(child);
     8da:	c8 01       	movw	r24, r16
     8dc:	0e 94 0d 04 	call	0x81a	; 0x81a <print_selecting_arrow>
}
     8e0:	2b 96       	adiw	r28, 0x0b	; 11
     8e2:	0f b6       	in	r0, 0x3f	; 63
     8e4:	f8 94       	cli
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	0f be       	out	0x3f, r0	; 63
     8ea:	cd bf       	out	0x3d, r28	; 61
     8ec:	df 91       	pop	r29
     8ee:	cf 91       	pop	r28
     8f0:	1f 91       	pop	r17
     8f2:	0f 91       	pop	r16
     8f4:	08 95       	ret

000008f6 <print_score_menu_objects>:

void print_score_menu_objects(int child){
     8f6:	0f 93       	push	r16
     8f8:	1f 93       	push	r17
     8fa:	cf 93       	push	r28
     8fc:	df 93       	push	r29
     8fe:	cd b7       	in	r28, 0x3d	; 61
     900:	de b7       	in	r29, 0x3e	; 62
     902:	2a 97       	sbiw	r28, 0x0a	; 10
     904:	0f b6       	in	r0, 0x3f	; 63
     906:	f8 94       	cli
     908:	de bf       	out	0x3e, r29	; 62
     90a:	0f be       	out	0x3f, r0	; 63
     90c:	cd bf       	out	0x3d, r28	; 61
     90e:	8c 01       	movw	r16, r24

    char line1[] = "Top score";
     910:	8a e0       	ldi	r24, 0x0A	; 10
     912:	e6 e9       	ldi	r30, 0x96	; 150
     914:	f1 e0       	ldi	r31, 0x01	; 1
     916:	de 01       	movw	r26, r28
     918:	11 96       	adiw	r26, 0x01	; 1
     91a:	01 90       	ld	r0, Z+
     91c:	0d 92       	st	X+, r0
     91e:	8a 95       	dec	r24
     920:	e1 f7       	brne	.-8      	; 0x91a <print_score_menu_objects+0x24>

    oled_pos_set(0, 12);
     922:	6c e0       	ldi	r22, 0x0C	; 12
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	0e 94 49 02 	call	0x492	; 0x492 <oled_pos_set>
    oled_print(&line1);
     92a:	ce 01       	movw	r24, r28
     92c:	01 96       	adiw	r24, 0x01	; 1
     92e:	0e 94 21 03 	call	0x642	; 0x642 <oled_print>

    print_selecting_arrow(child);
     932:	c8 01       	movw	r24, r16
     934:	0e 94 0d 04 	call	0x81a	; 0x81a <print_selecting_arrow>

}
     938:	2a 96       	adiw	r28, 0x0a	; 10
     93a:	0f b6       	in	r0, 0x3f	; 63
     93c:	f8 94       	cli
     93e:	de bf       	out	0x3e, r29	; 62
     940:	0f be       	out	0x3f, r0	; 63
     942:	cd bf       	out	0x3d, r28	; 61
     944:	df 91       	pop	r29
     946:	cf 91       	pop	r28
     948:	1f 91       	pop	r17
     94a:	0f 91       	pop	r16
     94c:	08 95       	ret

0000094e <update_screen>:
}
void wait_for_neutral_joystick_position(){
    while(joystick_direction() != NEUTRAL);
}

void update_screen(Node *current_node, int child){
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	eb 01       	movw	r28, r22

    if(((*current_node).name[1]) == 'a'){
     954:	fc 01       	movw	r30, r24
     956:	87 89       	ldd	r24, Z+23	; 0x17
     958:	81 36       	cpi	r24, 0x61	; 97
     95a:	41 f4       	brne	.+16     	; 0x96c <update_screen+0x1e>
        printf("Update  MAIN_MENU screen\t\n");
     95c:	80 ea       	ldi	r24, 0xA0	; 160
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
        print_main_menu_objects(child);
     964:	ce 01       	movw	r24, r28
     966:	0e 94 12 04 	call	0x824	; 0x824 <print_main_menu_objects>
     96a:	0f c0       	rjmp	.+30     	; 0x98a <update_screen+0x3c>
        //Skal oppdatere skjermen som passer til main-menu. I tillegg skal pilen howre over riktg barn.
    }
    else if(((*current_node).name[1]) == 'l'){
     96c:	8c 36       	cpi	r24, 0x6C	; 108
     96e:	41 f4       	brne	.+16     	; 0x980 <update_screen+0x32>
        printf("Update PLAY menu\t\n");
     970:	8a eb       	ldi	r24, 0xBA	; 186
     972:	91 e0       	ldi	r25, 0x01	; 1
     974:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
        print_new_game_menu_objects(child);
     978:	ce 01       	movw	r24, r28
     97a:	0e 94 4f 04 	call	0x89e	; 0x89e <print_new_game_menu_objects>
     97e:	05 c0       	rjmp	.+10     	; 0x98a <update_screen+0x3c>
    }
    else if(((*current_node).name[1]) == 'h'){
     980:	88 36       	cpi	r24, 0x68	; 104
     982:	19 f4       	brne	.+6      	; 0x98a <update_screen+0x3c>
        print_score_menu_objects(child);
     984:	cb 01       	movw	r24, r22
     986:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <print_score_menu_objects>
    }

}
     98a:	df 91       	pop	r29
     98c:	cf 91       	pop	r28
     98e:	08 95       	ret

00000990 <menu>:
    return child;
    
}
//Node Main_menu, Score, Play, Settings, Difficulty, Debugging, *current_node;

void menu(){
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	cd b7       	in	r28, 0x3d	; 61
     996:	de b7       	in	r29, 0x3e	; 62
     998:	e0 97       	sbiw	r28, 0x30	; 48
     99a:	0f b6       	in	r0, 0x3f	; 63
     99c:	f8 94       	cli
     99e:	de bf       	out	0x3e, r29	; 62
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	cd bf       	out	0x3d, r28	; 61

    static Node Main_menu, Score, Play, Settings, Difficulty, Debugging, *current_node;

    current_node = &Main_menu; //Startnoden
     9a4:	8b ea       	ldi	r24, 0xAB	; 171
     9a6:	92 e0       	ldi	r25, 0x02	; 2
     9a8:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <current_node.2399+0x1>
     9ac:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <current_node.2399>
    DIRECTION action; //Handling som er gjort på Joysticken
    int child = 1; //Barnet som man "howrer" over på skjermen. Default er øverste barnet.

    //Bygger nodestrukturen
    Node* children1[8] = {&Play, &Score,0 ,0 ,0 ,0 ,0 ,0};
     9b0:	80 e1       	ldi	r24, 0x10	; 16
     9b2:	ea e0       	ldi	r30, 0x0A	; 10
     9b4:	f1 e0       	ldi	r31, 0x01	; 1
     9b6:	de 01       	movw	r26, r28
     9b8:	11 96       	adiw	r26, 0x01	; 1
     9ba:	01 90       	ld	r0, Z+
     9bc:	0d 92       	st	X+, r0
     9be:	8a 95       	dec	r24
     9c0:	e1 f7       	brne	.-8      	; 0x9ba <menu+0x2a>
    Node* children2[8] = {0, 0, 0, 0, 0, 0, 0, 0};
     9c2:	80 e1       	ldi	r24, 0x10	; 16
     9c4:	5e 01       	movw	r10, r28
     9c6:	91 e1       	ldi	r25, 0x11	; 17
     9c8:	a9 0e       	add	r10, r25
     9ca:	b1 1c       	adc	r11, r1
     9cc:	f5 01       	movw	r30, r10
     9ce:	98 2f       	mov	r25, r24
     9d0:	11 92       	st	Z+, r1
     9d2:	9a 95       	dec	r25
     9d4:	e9 f7       	brne	.-6      	; 0x9d0 <menu+0x40>
    Node* children3[8] = {0, 0, 0, 0, 0, 0, 0, 0};
     9d6:	6e 01       	movw	r12, r28
     9d8:	e1 e2       	ldi	r30, 0x21	; 33
     9da:	ce 0e       	add	r12, r30
     9dc:	d1 1c       	adc	r13, r1
     9de:	f6 01       	movw	r30, r12
     9e0:	11 92       	st	Z+, r1
     9e2:	8a 95       	dec	r24
     9e4:	e9 f7       	brne	.-6      	; 0x9e0 <menu+0x50>



    build_node(&Main_menu, NULL, "Main menu", NULL, &children1,2);
     9e6:	68 94       	set
     9e8:	ee 24       	eor	r14, r14
     9ea:	e1 f8       	bld	r14, 1
     9ec:	f1 2c       	mov	r15, r1
     9ee:	8e 01       	movw	r16, r28
     9f0:	0f 5f       	subi	r16, 0xFF	; 255
     9f2:	1f 4f       	sbci	r17, 0xFF	; 255
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	4c ec       	ldi	r20, 0xCC	; 204
     9fa:	51 e0       	ldi	r21, 0x01	; 1
     9fc:	60 e0       	ldi	r22, 0x00	; 0
     9fe:	70 e0       	ldi	r23, 0x00	; 0
     a00:	8b ea       	ldi	r24, 0xAB	; 171
     a02:	92 e0       	ldi	r25, 0x02	; 2
     a04:	0e 94 66 03 	call	0x6cc	; 0x6cc <build_node>
    build_node(&Play, &Main_menu, "Play game", play_game, &children2,1);
     a08:	ee 24       	eor	r14, r14
     a0a:	e3 94       	inc	r14
     a0c:	f1 2c       	mov	r15, r1
     a0e:	85 01       	movw	r16, r10
     a10:	2d e5       	ldi	r18, 0x5D	; 93
     a12:	33 e0       	ldi	r19, 0x03	; 3
     a14:	46 ed       	ldi	r20, 0xD6	; 214
     a16:	51 e0       	ldi	r21, 0x01	; 1
     a18:	6b ea       	ldi	r22, 0xAB	; 171
     a1a:	72 e0       	ldi	r23, 0x02	; 2
     a1c:	81 e8       	ldi	r24, 0x81	; 129
     a1e:	92 e0       	ldi	r25, 0x02	; 2
     a20:	0e 94 66 03 	call	0x6cc	; 0x6cc <build_node>
    build_node(&Score, &Main_menu, "Show score", NULL, &children3,8);
     a24:	68 94       	set
     a26:	ee 24       	eor	r14, r14
     a28:	e3 f8       	bld	r14, 3
     a2a:	f1 2c       	mov	r15, r1
     a2c:	86 01       	movw	r16, r12
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	30 e0       	ldi	r19, 0x00	; 0
     a32:	40 ee       	ldi	r20, 0xE0	; 224
     a34:	51 e0       	ldi	r21, 0x01	; 1
     a36:	6b ea       	ldi	r22, 0xAB	; 171
     a38:	72 e0       	ldi	r23, 0x02	; 2
     a3a:	87 e5       	ldi	r24, 0x57	; 87
     a3c:	92 e0       	ldi	r25, 0x02	; 2
     a3e:	0e 94 66 03 	call	0x6cc	; 0x6cc <build_node>

    update_screen(current_node, child);
     a42:	61 e0       	ldi	r22, 0x01	; 1
     a44:	70 e0       	ldi	r23, 0x00	; 0
     a46:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <current_node.2399>
     a4a:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <current_node.2399+0x1>
     a4e:	0e 94 a7 04 	call	0x94e	; 0x94e <update_screen>

    static Node Main_menu, Score, Play, Settings, Difficulty, Debugging, *current_node;

    current_node = &Main_menu; //Startnoden
    DIRECTION action; //Handling som er gjort på Joysticken
    int child = 1; //Barnet som man "howrer" over på skjermen. Default er øverste barnet.
     a52:	ee 24       	eor	r14, r14
     a54:	e3 94       	inc	r14
     a56:	f1 2c       	mov	r15, r1
          default:
              break;
        }

        printf("After switch\t\n");
        printf("Nodenavn %c \t\n",((*current_node).name[0]));
     a58:	0f 2e       	mov	r0, r31
     a5a:	fa e3       	ldi	r31, 0x3A	; 58
     a5c:	cf 2e       	mov	r12, r31
     a5e:	f2 e0       	ldi	r31, 0x02	; 2
     a60:	df 2e       	mov	r13, r31
     a62:	f0 2d       	mov	r31, r0
    build_node(&Score, &Main_menu, "Show score", NULL, &children3,8);

    update_screen(current_node, child);

    while(1){
        printf("Før Wait for action\t\n");
     a64:	8b ee       	ldi	r24, 0xEB	; 235
     a66:	91 e0       	ldi	r25, 0x01	; 1
     a68:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
        action = wait_for_action();  //Wait for user to move the joystick
     a6c:	0e 94 ca 03 	call	0x794	; 0x794 <wait_for_action>
     a70:	18 2f       	mov	r17, r24
        printf("Før oled clear\t\n");
     a72:	81 e0       	ldi	r24, 0x01	; 1
     a74:	92 e0       	ldi	r25, 0x02	; 2
     a76:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
        oled_clear();  //Clears the screen.
     a7a:	0e 94 57 02 	call	0x4ae	; 0x4ae <oled_clear>

        printf("Før switch\t\n");
     a7e:	82 e1       	ldi	r24, 0x12	; 18
     a80:	92 e0       	ldi	r25, 0x02	; 2
     a82:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
        switch(action)
     a86:	11 30       	cpi	r17, 0x01	; 1
     a88:	31 f1       	breq	.+76     	; 0xad6 <menu+0x146>
     a8a:	c8 f0       	brcs	.+50     	; 0xabe <menu+0x12e>
     a8c:	12 30       	cpi	r17, 0x02	; 2
     a8e:	19 f0       	breq	.+6      	; 0xa96 <menu+0x106>
     a90:	13 30       	cpi	r17, 0x03	; 3
     a92:	61 f0       	breq	.+24     	; 0xaac <menu+0x11c>
     a94:	2c c0       	rjmp	.+88     	; 0xaee <menu+0x15e>

}

int update_element_up(Node *current_node, int child){

    child--;
     a96:	f1 e0       	ldi	r31, 0x01	; 1
     a98:	ef 1a       	sub	r14, r31
     a9a:	f1 08       	sbc	r15, r1

    if(child == 0){
     a9c:	41 f5       	brne	.+80     	; 0xaee <menu+0x15e>
        child = current_node->elements_on_screen;
     a9e:	e0 91 d5 02 	lds	r30, 0x02D5	; 0x8002d5 <current_node.2399>
     aa2:	f0 91 d6 02 	lds	r31, 0x02D6	; 0x8002d6 <current_node.2399+0x1>
     aa6:	e2 88       	ldd	r14, Z+18	; 0x12
     aa8:	f3 88       	ldd	r15, Z+19	; 0x13
     aaa:	21 c0       	rjmp	.+66     	; 0xaee <menu+0x15e>
          case UP:
                //update_screen(current_node, child);
                child = update_element_up(current_node, child);
              break;
          case DOWN:
                child = update_element_down(current_node, child);
     aac:	b7 01       	movw	r22, r14
     aae:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <current_node.2399>
     ab2:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <current_node.2399+0x1>
     ab6:	0e 94 00 04 	call	0x800	; 0x800 <update_element_down>
     aba:	7c 01       	movw	r14, r24
              break;
     abc:	18 c0       	rjmp	.+48     	; 0xaee <menu+0x15e>
          case LEFT:
                printf("Left\t\n");
     abe:	8f e1       	ldi	r24, 0x1F	; 31
     ac0:	92 e0       	ldi	r25, 0x02	; 2
     ac2:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
                go_up(&current_node);
     ac6:	85 ed       	ldi	r24, 0xD5	; 213
     ac8:	92 e0       	ldi	r25, 0x02	; 2
     aca:	0e 94 90 03 	call	0x720	; 0x720 <go_up>
                child = 1;
     ace:	ee 24       	eor	r14, r14
     ad0:	e3 94       	inc	r14
     ad2:	f1 2c       	mov	r15, r1
              break;
     ad4:	0c c0       	rjmp	.+24     	; 0xaee <menu+0x15e>
          case RIGHT:
                printf("RIGHT\t\n");
     ad6:	85 e2       	ldi	r24, 0x25	; 37
     ad8:	92 e0       	ldi	r25, 0x02	; 2
     ada:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
                go_down(&current_node, child);
     ade:	b7 01       	movw	r22, r14
     ae0:	85 ed       	ldi	r24, 0xD5	; 213
     ae2:	92 e0       	ldi	r25, 0x02	; 2
     ae4:	0e 94 a4 03 	call	0x748	; 0x748 <go_down>
                child = 1;
     ae8:	ee 24       	eor	r14, r14
     aea:	e3 94       	inc	r14
     aec:	f1 2c       	mov	r15, r1
              break;
          default:
              break;
        }

        printf("After switch\t\n");
     aee:	8c e2       	ldi	r24, 0x2C	; 44
     af0:	92 e0       	ldi	r25, 0x02	; 2
     af2:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <puts>
        printf("Nodenavn %c \t\n",((*current_node).name[0]));
     af6:	e0 91 d5 02 	lds	r30, 0x02D5	; 0x8002d5 <current_node.2399>
     afa:	f0 91 d6 02 	lds	r31, 0x02D6	; 0x8002d6 <current_node.2399+0x1>
     afe:	86 89       	ldd	r24, Z+22	; 0x16
     b00:	1f 92       	push	r1
     b02:	8f 93       	push	r24
     b04:	df 92       	push	r13
     b06:	cf 92       	push	r12
     b08:	0e 94 ca 0a 	call	0x1594	; 0x1594 <printf>
        update_screen(current_node, child);
     b0c:	b7 01       	movw	r22, r14
     b0e:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <current_node.2399>
     b12:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <current_node.2399+0x1>
     b16:	0e 94 a7 04 	call	0x94e	; 0x94e <update_screen>
        wait_for_neutral_joystick_position();
     b1a:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <wait_for_neutral_joystick_position>
    }
     b1e:	0f 90       	pop	r0
     b20:	0f 90       	pop	r0
     b22:	0f 90       	pop	r0
     b24:	0f 90       	pop	r0
     b26:	9e cf       	rjmp	.-196    	; 0xa64 <menu+0xd4>

00000b28 <pos_read>:
#include <avr/io.h>
#include <stdio.h>
#include "pos_read.h"


void pos_read(position* pos){
     b28:	8f 92       	push	r8
     b2a:	9f 92       	push	r9
     b2c:	af 92       	push	r10
     b2e:	bf 92       	push	r11
     b30:	cf 92       	push	r12
     b32:	df 92       	push	r13
     b34:	ef 92       	push	r14
     b36:	ff 92       	push	r15
     b38:	0f 93       	push	r16
     b3a:	1f 93       	push	r17
     b3c:	cf 93       	push	r28
     b3e:	df 93       	push	r29
     b40:	7c 01       	movw	r14, r24

    int ADC_Y = ADC_read(0);
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     b48:	c8 2f       	mov	r28, r24
     b4a:	d0 e0       	ldi	r29, 0x00	; 0
    int ADC_X = ADC_read(1);
     b4c:	81 e0       	ldi	r24, 0x01	; 1
     b4e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     b52:	68 2f       	mov	r22, r24
     b54:	70 e0       	ldi	r23, 0x00	; 0

    // X read

    if((ADC_X >= (P_cal.center_X - 10)) && (ADC_X <= (P_cal.center_X + 10))){ //Deadspace for joystick
     b56:	00 91 d7 02 	lds	r16, 0x02D7	; 0x8002d7 <P_cal>
     b5a:	10 91 d8 02 	lds	r17, 0x02D8	; 0x8002d8 <P_cal+0x1>
     b5e:	c8 01       	movw	r24, r16
     b60:	0a 97       	sbiw	r24, 0x0a	; 10
     b62:	68 17       	cp	r22, r24
     b64:	79 07       	cpc	r23, r25
     b66:	0c f4       	brge	.+2      	; 0xb6a <pos_read+0x42>
     b68:	b4 c0       	rjmp	.+360    	; 0xcd2 <pos_read+0x1aa>
     b6a:	44 96       	adiw	r24, 0x14	; 20
     b6c:	86 17       	cp	r24, r22
     b6e:	97 07       	cpc	r25, r23
     b70:	0c f0       	brlt	.+2      	; 0xb74 <pos_read+0x4c>
     b72:	4c c0       	rjmp	.+152    	; 0xc0c <pos_read+0xe4>
        ADC_X = 0;
    }
    else if(ADC_X > (P_cal.center_X + 10)){
        ADC_X = (ADC_X - P_cal.center_X) * 100.0 / (255.0 - P_cal.center_X);  //
     b74:	60 1b       	sub	r22, r16
     b76:	71 0b       	sbc	r23, r17
     b78:	07 2e       	mov	r0, r23
     b7a:	00 0c       	add	r0, r0
     b7c:	88 0b       	sbc	r24, r24
     b7e:	99 0b       	sbc	r25, r25
     b80:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     b84:	20 e0       	ldi	r18, 0x00	; 0
     b86:	30 e0       	ldi	r19, 0x00	; 0
     b88:	48 ec       	ldi	r20, 0xC8	; 200
     b8a:	52 e4       	ldi	r21, 0x42	; 66
     b8c:	0e 94 07 0a 	call	0x140e	; 0x140e <__mulsf3>
     b90:	4b 01       	movw	r8, r22
     b92:	5c 01       	movw	r10, r24
     b94:	b8 01       	movw	r22, r16
     b96:	11 0f       	add	r17, r17
     b98:	88 0b       	sbc	r24, r24
     b9a:	99 0b       	sbc	r25, r25
     b9c:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     ba0:	9b 01       	movw	r18, r22
     ba2:	ac 01       	movw	r20, r24
     ba4:	60 e0       	ldi	r22, 0x00	; 0
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	8f e7       	ldi	r24, 0x7F	; 127
     baa:	93 e4       	ldi	r25, 0x43	; 67
     bac:	0e 94 95 07 	call	0xf2a	; 0xf2a <__subsf3>
     bb0:	9b 01       	movw	r18, r22
     bb2:	ac 01       	movw	r20, r24
     bb4:	c5 01       	movw	r24, r10
     bb6:	b4 01       	movw	r22, r8
     bb8:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__divsf3>
     bbc:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__fixsfsi>
     bc0:	6b 01       	movw	r12, r22
     bc2:	26 c0       	rjmp	.+76     	; 0xc10 <pos_read+0xe8>
    }

    else if (ADC_X < (P_cal.center_X - 10)){
        ADC_X = (ADC_X / ((float)P_cal.center_X)) * 100 - 100;   // // Scaling when value is larger then center value
     bc4:	07 2e       	mov	r0, r23
     bc6:	00 0c       	add	r0, r0
     bc8:	88 0b       	sbc	r24, r24
     bca:	99 0b       	sbc	r25, r25
     bcc:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     bd0:	4b 01       	movw	r8, r22
     bd2:	5c 01       	movw	r10, r24
     bd4:	b8 01       	movw	r22, r16
     bd6:	11 0f       	add	r17, r17
     bd8:	88 0b       	sbc	r24, r24
     bda:	99 0b       	sbc	r25, r25
     bdc:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     be0:	9b 01       	movw	r18, r22
     be2:	ac 01       	movw	r20, r24
     be4:	c5 01       	movw	r24, r10
     be6:	b4 01       	movw	r22, r8
     be8:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__divsf3>
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	48 ec       	ldi	r20, 0xC8	; 200
     bf2:	52 e4       	ldi	r21, 0x42	; 66
     bf4:	0e 94 07 0a 	call	0x140e	; 0x140e <__mulsf3>
     bf8:	20 e0       	ldi	r18, 0x00	; 0
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	48 ec       	ldi	r20, 0xC8	; 200
     bfe:	52 e4       	ldi	r21, 0x42	; 66
     c00:	0e 94 95 07 	call	0xf2a	; 0xf2a <__subsf3>
     c04:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__fixsfsi>
     c08:	6b 01       	movw	r12, r22
     c0a:	02 c0       	rjmp	.+4      	; 0xc10 <pos_read+0xe8>
    int ADC_X = ADC_read(1);

    // X read

    if((ADC_X >= (P_cal.center_X - 10)) && (ADC_X <= (P_cal.center_X + 10))){ //Deadspace for joystick
        ADC_X = 0;
     c0c:	c1 2c       	mov	r12, r1
     c0e:	d1 2c       	mov	r13, r1
        ADC_X = (ADC_X / ((float)P_cal.center_X)) * 100 - 100;   // // Scaling when value is larger then center value
    }

    // Y read

    if(ADC_Y >= (P_cal.center_Y - 10) && ADC_Y <= (P_cal.center_Y + 10)){  //Deadspace for joystick
     c10:	00 91 d9 02 	lds	r16, 0x02D9	; 0x8002d9 <P_cal+0x2>
     c14:	10 91 da 02 	lds	r17, 0x02DA	; 0x8002da <P_cal+0x3>
     c18:	c8 01       	movw	r24, r16
     c1a:	0a 97       	sbiw	r24, 0x0a	; 10
     c1c:	c8 17       	cp	r28, r24
     c1e:	d9 07       	cpc	r29, r25
     c20:	0c f4       	brge	.+2      	; 0xc24 <pos_read+0xfc>
     c22:	5e c0       	rjmp	.+188    	; 0xce0 <pos_read+0x1b8>
     c24:	44 96       	adiw	r24, 0x14	; 20
     c26:	8c 17       	cp	r24, r28
     c28:	9d 07       	cpc	r25, r29
     c2a:	0c f0       	brlt	.+2      	; 0xc2e <pos_read+0x106>
     c2c:	4a c0       	rjmp	.+148    	; 0xcc2 <pos_read+0x19a>
        ADC_Y = 0;
    }
    else if(ADC_Y > (P_cal.center_Y + 10)){
        ADC_Y = (ADC_Y - (P_cal.center_Y)) * 100.0 / (255.0 - P_cal.center_Y);  // Scaling when value is larger then center value
     c2e:	c0 1b       	sub	r28, r16
     c30:	d1 0b       	sbc	r29, r17
     c32:	be 01       	movw	r22, r28
     c34:	dd 0f       	add	r29, r29
     c36:	88 0b       	sbc	r24, r24
     c38:	99 0b       	sbc	r25, r25
     c3a:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     c3e:	20 e0       	ldi	r18, 0x00	; 0
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	48 ec       	ldi	r20, 0xC8	; 200
     c44:	52 e4       	ldi	r21, 0x42	; 66
     c46:	0e 94 07 0a 	call	0x140e	; 0x140e <__mulsf3>
     c4a:	4b 01       	movw	r8, r22
     c4c:	5c 01       	movw	r10, r24
     c4e:	b8 01       	movw	r22, r16
     c50:	11 0f       	add	r17, r17
     c52:	88 0b       	sbc	r24, r24
     c54:	99 0b       	sbc	r25, r25
     c56:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     c5a:	9b 01       	movw	r18, r22
     c5c:	ac 01       	movw	r20, r24
     c5e:	60 e0       	ldi	r22, 0x00	; 0
     c60:	70 e0       	ldi	r23, 0x00	; 0
     c62:	8f e7       	ldi	r24, 0x7F	; 127
     c64:	93 e4       	ldi	r25, 0x43	; 67
     c66:	0e 94 95 07 	call	0xf2a	; 0xf2a <__subsf3>
     c6a:	9b 01       	movw	r18, r22
     c6c:	ac 01       	movw	r20, r24
     c6e:	c5 01       	movw	r24, r10
     c70:	b4 01       	movw	r22, r8
     c72:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__divsf3>
     c76:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__fixsfsi>
     c7a:	25 c0       	rjmp	.+74     	; 0xcc6 <pos_read+0x19e>
    }

    else if (ADC_Y < (P_cal.center_Y - 10)){
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
     c7c:	be 01       	movw	r22, r28
     c7e:	dd 0f       	add	r29, r29
     c80:	88 0b       	sbc	r24, r24
     c82:	99 0b       	sbc	r25, r25
     c84:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     c88:	4b 01       	movw	r8, r22
     c8a:	5c 01       	movw	r10, r24
     c8c:	b8 01       	movw	r22, r16
     c8e:	11 0f       	add	r17, r17
     c90:	88 0b       	sbc	r24, r24
     c92:	99 0b       	sbc	r25, r25
     c94:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     c98:	9b 01       	movw	r18, r22
     c9a:	ac 01       	movw	r20, r24
     c9c:	c5 01       	movw	r24, r10
     c9e:	b4 01       	movw	r22, r8
     ca0:	0e 94 79 08 	call	0x10f2	; 0x10f2 <__divsf3>
     ca4:	20 e0       	ldi	r18, 0x00	; 0
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	48 ec       	ldi	r20, 0xC8	; 200
     caa:	52 e4       	ldi	r21, 0x42	; 66
     cac:	0e 94 07 0a 	call	0x140e	; 0x140e <__mulsf3>
     cb0:	20 e0       	ldi	r18, 0x00	; 0
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	48 ec       	ldi	r20, 0xC8	; 200
     cb6:	52 e4       	ldi	r21, 0x42	; 66
     cb8:	0e 94 95 07 	call	0xf2a	; 0xf2a <__subsf3>
     cbc:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__fixsfsi>
     cc0:	02 c0       	rjmp	.+4      	; 0xcc6 <pos_read+0x19e>
    }

    // Y read

    if(ADC_Y >= (P_cal.center_Y - 10) && ADC_Y <= (P_cal.center_Y + 10)){  //Deadspace for joystick
        ADC_Y = 0;
     cc2:	60 e0       	ldi	r22, 0x00	; 0
     cc4:	70 e0       	ldi	r23, 0x00	; 0

    else if (ADC_Y < (P_cal.center_Y - 10)){
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
    }

    pos -> posX = ADC_X;
     cc6:	f7 01       	movw	r30, r14
     cc8:	d1 82       	std	Z+1, r13	; 0x01
     cca:	c0 82       	st	Z, r12
    pos -> posY = ADC_Y;
     ccc:	73 83       	std	Z+3, r23	; 0x03
     cce:	62 83       	std	Z+2, r22	; 0x02
}
     cd0:	0d c0       	rjmp	.+26     	; 0xcec <pos_read+0x1c4>
    // X read

    if((ADC_X >= (P_cal.center_X - 10)) && (ADC_X <= (P_cal.center_X + 10))){ //Deadspace for joystick
        ADC_X = 0;
    }
    else if(ADC_X > (P_cal.center_X + 10)){
     cd2:	c8 01       	movw	r24, r16
     cd4:	0a 96       	adiw	r24, 0x0a	; 10
     cd6:	86 17       	cp	r24, r22
     cd8:	97 07       	cpc	r25, r23
     cda:	0c f4       	brge	.+2      	; 0xcde <pos_read+0x1b6>
     cdc:	4b cf       	rjmp	.-362    	; 0xb74 <pos_read+0x4c>
     cde:	72 cf       	rjmp	.-284    	; 0xbc4 <pos_read+0x9c>
    // Y read

    if(ADC_Y >= (P_cal.center_Y - 10) && ADC_Y <= (P_cal.center_Y + 10)){  //Deadspace for joystick
        ADC_Y = 0;
    }
    else if(ADC_Y > (P_cal.center_Y + 10)){
     ce0:	c8 01       	movw	r24, r16
     ce2:	0a 96       	adiw	r24, 0x0a	; 10
     ce4:	8c 17       	cp	r24, r28
     ce6:	9d 07       	cpc	r25, r29
     ce8:	4c f6       	brge	.-110    	; 0xc7c <pos_read+0x154>
     cea:	a1 cf       	rjmp	.-190    	; 0xc2e <pos_read+0x106>
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
    }

    pos -> posX = ADC_X;
    pos -> posY = ADC_Y;
}
     cec:	df 91       	pop	r29
     cee:	cf 91       	pop	r28
     cf0:	1f 91       	pop	r17
     cf2:	0f 91       	pop	r16
     cf4:	ff 90       	pop	r15
     cf6:	ef 90       	pop	r14
     cf8:	df 90       	pop	r13
     cfa:	cf 90       	pop	r12
     cfc:	bf 90       	pop	r11
     cfe:	af 90       	pop	r10
     d00:	9f 90       	pop	r9
     d02:	8f 90       	pop	r8
     d04:	08 95       	ret

00000d06 <joystick_direction>:

DIRECTION joystick_direction(void){
     d06:	8f 92       	push	r8
     d08:	9f 92       	push	r9
     d0a:	af 92       	push	r10
     d0c:	bf 92       	push	r11
     d0e:	cf 92       	push	r12
     d10:	df 92       	push	r13
     d12:	ef 92       	push	r14
     d14:	ff 92       	push	r15
     d16:	cf 93       	push	r28
     d18:	df 93       	push	r29

    pos_read(&P_pos);
     d1a:	8d ed       	ldi	r24, 0xDD	; 221
     d1c:	92 e0       	ldi	r25, 0x02	; 2
     d1e:	0e 94 94 05 	call	0xb28	; 0xb28 <pos_read>

    int angle = atan2(P_pos.posY, P_pos.posX);
     d22:	ed ed       	ldi	r30, 0xDD	; 221
     d24:	f2 e0       	ldi	r31, 0x02	; 2
     d26:	e0 80       	ld	r14, Z
     d28:	f1 80       	ldd	r15, Z+1	; 0x01
     d2a:	c2 81       	ldd	r28, Z+2	; 0x02
     d2c:	d3 81       	ldd	r29, Z+3	; 0x03
     d2e:	b7 01       	movw	r22, r14
     d30:	0f 2c       	mov	r0, r15
     d32:	00 0c       	add	r0, r0
     d34:	88 0b       	sbc	r24, r24
     d36:	99 0b       	sbc	r25, r25
     d38:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     d3c:	4b 01       	movw	r8, r22
     d3e:	5c 01       	movw	r10, r24
     d40:	be 01       	movw	r22, r28
     d42:	0d 2e       	mov	r0, r29
     d44:	00 0c       	add	r0, r0
     d46:	88 0b       	sbc	r24, r24
     d48:	99 0b       	sbc	r25, r25
     d4a:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     d4e:	a5 01       	movw	r20, r10
     d50:	94 01       	movw	r18, r8
     d52:	0e 94 15 08 	call	0x102a	; 0x102a <atan2>

    if(!P_pos.posY & !P_pos.posX){
     d56:	21 e0       	ldi	r18, 0x01	; 1
     d58:	cd 2b       	or	r28, r29
     d5a:	09 f0       	breq	.+2      	; 0xd5e <joystick_direction+0x58>
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	22 23       	and	r18, r18
     d60:	31 f0       	breq	.+12     	; 0xd6e <joystick_direction+0x68>
     d62:	21 e0       	ldi	r18, 0x01	; 1
     d64:	ef 28       	or	r14, r15
     d66:	09 f0       	breq	.+2      	; 0xd6a <joystick_direction+0x64>
     d68:	20 e0       	ldi	r18, 0x00	; 0
     d6a:	21 11       	cpse	r18, r1
     d6c:	79 c0       	rjmp	.+242    	; 0xe60 <joystick_direction+0x15a>
        return NEUTRAL;
    }

    else if(angle >= -PI / 4.0 & angle <= PI/4.0){
     d6e:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__fixsfsi>
     d72:	07 2e       	mov	r0, r23
     d74:	00 0c       	add	r0, r0
     d76:	88 0b       	sbc	r24, r24
     d78:	99 0b       	sbc	r25, r25
     d7a:	0e 94 23 09 	call	0x1246	; 0x1246 <__floatsisf>
     d7e:	6b 01       	movw	r12, r22
     d80:	7c 01       	movw	r14, r24
     d82:	c1 e0       	ldi	r28, 0x01	; 1
     d84:	2b ed       	ldi	r18, 0xDB	; 219
     d86:	3f e0       	ldi	r19, 0x0F	; 15
     d88:	49 e4       	ldi	r20, 0x49	; 73
     d8a:	5f eb       	ldi	r21, 0xBF	; 191
     d8c:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <__gesf2>
     d90:	88 23       	and	r24, r24
     d92:	0c f4       	brge	.+2      	; 0xd96 <joystick_direction+0x90>
     d94:	c0 e0       	ldi	r28, 0x00	; 0
     d96:	cc 23       	and	r28, r28
     d98:	71 f0       	breq	.+28     	; 0xdb6 <joystick_direction+0xb0>
     d9a:	c1 e0       	ldi	r28, 0x01	; 1
     d9c:	2b ed       	ldi	r18, 0xDB	; 219
     d9e:	3f e0       	ldi	r19, 0x0F	; 15
     da0:	49 e4       	ldi	r20, 0x49	; 73
     da2:	5f e3       	ldi	r21, 0x3F	; 63
     da4:	c7 01       	movw	r24, r14
     da6:	b6 01       	movw	r22, r12
     da8:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__cmpsf2>
     dac:	18 16       	cp	r1, r24
     dae:	0c f4       	brge	.+2      	; 0xdb2 <joystick_direction+0xac>
     db0:	c0 e0       	ldi	r28, 0x00	; 0
     db2:	c1 11       	cpse	r28, r1
     db4:	57 c0       	rjmp	.+174    	; 0xe64 <joystick_direction+0x15e>
        return RIGHT;
    }

    else if(angle >= -3 * PI/4.0 & angle <= -PI / 4.0){
     db6:	c1 e0       	ldi	r28, 0x01	; 1
     db8:	24 ee       	ldi	r18, 0xE4	; 228
     dba:	3b ec       	ldi	r19, 0xCB	; 203
     dbc:	46 e1       	ldi	r20, 0x16	; 22
     dbe:	50 ec       	ldi	r21, 0xC0	; 192
     dc0:	c7 01       	movw	r24, r14
     dc2:	b6 01       	movw	r22, r12
     dc4:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <__gesf2>
     dc8:	88 23       	and	r24, r24
     dca:	0c f4       	brge	.+2      	; 0xdce <joystick_direction+0xc8>
     dcc:	c0 e0       	ldi	r28, 0x00	; 0
     dce:	cc 23       	and	r28, r28
     dd0:	71 f0       	breq	.+28     	; 0xdee <joystick_direction+0xe8>
     dd2:	c1 e0       	ldi	r28, 0x01	; 1
     dd4:	2b ed       	ldi	r18, 0xDB	; 219
     dd6:	3f e0       	ldi	r19, 0x0F	; 15
     dd8:	49 e4       	ldi	r20, 0x49	; 73
     dda:	5f eb       	ldi	r21, 0xBF	; 191
     ddc:	c7 01       	movw	r24, r14
     dde:	b6 01       	movw	r22, r12
     de0:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__cmpsf2>
     de4:	18 16       	cp	r1, r24
     de6:	0c f4       	brge	.+2      	; 0xdea <joystick_direction+0xe4>
     de8:	c0 e0       	ldi	r28, 0x00	; 0
     dea:	c1 11       	cpse	r28, r1
     dec:	3d c0       	rjmp	.+122    	; 0xe68 <joystick_direction+0x162>
        return DOWN;
    }

    else if(angle >= 3 * PI/4 | angle <= -3* PI / 4.0){
     dee:	c1 e0       	ldi	r28, 0x01	; 1
     df0:	24 ee       	ldi	r18, 0xE4	; 228
     df2:	3b ec       	ldi	r19, 0xCB	; 203
     df4:	46 e1       	ldi	r20, 0x16	; 22
     df6:	50 e4       	ldi	r21, 0x40	; 64
     df8:	c7 01       	movw	r24, r14
     dfa:	b6 01       	movw	r22, r12
     dfc:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <__gesf2>
     e00:	88 23       	and	r24, r24
     e02:	0c f4       	brge	.+2      	; 0xe06 <joystick_direction+0x100>
     e04:	c0 e0       	ldi	r28, 0x00	; 0
     e06:	c1 11       	cpse	r28, r1
     e08:	31 c0       	rjmp	.+98     	; 0xe6c <joystick_direction+0x166>
     e0a:	c1 e0       	ldi	r28, 0x01	; 1
     e0c:	24 ee       	ldi	r18, 0xE4	; 228
     e0e:	3b ec       	ldi	r19, 0xCB	; 203
     e10:	46 e1       	ldi	r20, 0x16	; 22
     e12:	50 ec       	ldi	r21, 0xC0	; 192
     e14:	c7 01       	movw	r24, r14
     e16:	b6 01       	movw	r22, r12
     e18:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__cmpsf2>
     e1c:	18 16       	cp	r1, r24
     e1e:	0c f4       	brge	.+2      	; 0xe22 <joystick_direction+0x11c>
     e20:	c0 e0       	ldi	r28, 0x00	; 0
     e22:	c1 11       	cpse	r28, r1
     e24:	23 c0       	rjmp	.+70     	; 0xe6c <joystick_direction+0x166>
        return LEFT;
    }

    else if(angle >= PI / 4 & angle <= 3*PI / 4.0){
     e26:	c1 e0       	ldi	r28, 0x01	; 1
     e28:	2b ed       	ldi	r18, 0xDB	; 219
     e2a:	3f e0       	ldi	r19, 0x0F	; 15
     e2c:	49 e4       	ldi	r20, 0x49	; 73
     e2e:	5f e3       	ldi	r21, 0x3F	; 63
     e30:	c7 01       	movw	r24, r14
     e32:	b6 01       	movw	r22, r12
     e34:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <__gesf2>
     e38:	88 23       	and	r24, r24
     e3a:	0c f4       	brge	.+2      	; 0xe3e <joystick_direction+0x138>
     e3c:	c0 e0       	ldi	r28, 0x00	; 0
     e3e:	cc 23       	and	r28, r28
     e40:	71 f0       	breq	.+28     	; 0xe5e <joystick_direction+0x158>
     e42:	c1 e0       	ldi	r28, 0x01	; 1
     e44:	24 ee       	ldi	r18, 0xE4	; 228
     e46:	3b ec       	ldi	r19, 0xCB	; 203
     e48:	46 e1       	ldi	r20, 0x16	; 22
     e4a:	50 e4       	ldi	r21, 0x40	; 64
     e4c:	c7 01       	movw	r24, r14
     e4e:	b6 01       	movw	r22, r12
     e50:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__cmpsf2>
     e54:	18 16       	cp	r1, r24
     e56:	0c f4       	brge	.+2      	; 0xe5a <joystick_direction+0x154>
     e58:	c0 e0       	ldi	r28, 0x00	; 0
     e5a:	c1 11       	cpse	r28, r1
     e5c:	09 c0       	rjmp	.+18     	; 0xe70 <joystick_direction+0x16a>
        return UP;
    }
}
     e5e:	09 c0       	rjmp	.+18     	; 0xe72 <joystick_direction+0x16c>
    pos_read(&P_pos);

    int angle = atan2(P_pos.posY, P_pos.posX);

    if(!P_pos.posY & !P_pos.posX){
        return NEUTRAL;
     e60:	84 e0       	ldi	r24, 0x04	; 4
     e62:	07 c0       	rjmp	.+14     	; 0xe72 <joystick_direction+0x16c>
    }

    else if(angle >= -PI / 4.0 & angle <= PI/4.0){
        return RIGHT;
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	05 c0       	rjmp	.+10     	; 0xe72 <joystick_direction+0x16c>
    }

    else if(angle >= -3 * PI/4.0 & angle <= -PI / 4.0){
        return DOWN;
     e68:	83 e0       	ldi	r24, 0x03	; 3
     e6a:	03 c0       	rjmp	.+6      	; 0xe72 <joystick_direction+0x16c>
    }

    else if(angle >= 3 * PI/4 | angle <= -3* PI / 4.0){
        return LEFT;
     e6c:	80 e0       	ldi	r24, 0x00	; 0
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <joystick_direction+0x16c>
    }

    else if(angle >= PI / 4 & angle <= 3*PI / 4.0){
        return UP;
     e70:	82 e0       	ldi	r24, 0x02	; 2
    }
}
     e72:	df 91       	pop	r29
     e74:	cf 91       	pop	r28
     e76:	ff 90       	pop	r15
     e78:	ef 90       	pop	r14
     e7a:	df 90       	pop	r13
     e7c:	cf 90       	pop	r12
     e7e:	bf 90       	pop	r11
     e80:	af 90       	pop	r10
     e82:	9f 90       	pop	r9
     e84:	8f 90       	pop	r8
     e86:	08 95       	ret

00000e88 <pos_readSettings>:

void pos_readSettings(void){
DDRB &= ~(1 << PB1);
     e88:	b9 98       	cbi	0x17, 1	; 23
DDRD &= ~(1 << PD4);
     e8a:	8c 98       	cbi	0x11, 4	; 17
DDRD &= ~(1 << PD5);
     e8c:	8d 98       	cbi	0x11, 5	; 17

PORTB |= (1 << PB1); // internal pull up enable
     e8e:	c1 9a       	sbi	0x18, 1	; 24
     e90:	08 95       	ret

00000e92 <usb_button_pushed>:

uint8_t usb_button_pushed(USB_BUTTON BUTTON){

    uint8_t pressed;

    if(BUTTON == LEFT_BUTTON){
     e92:	81 30       	cpi	r24, 0x01	; 1
     e94:	19 f4       	brne	.+6      	; 0xe9c <usb_button_pushed+0xa>

//        DDRD &= ~(1 << PD4);

        pressed = (PIND & (1 << PD4) );
     e96:	80 b3       	in	r24, 0x10	; 16
     e98:	80 71       	andi	r24, 0x10	; 16
     e9a:	08 95       	ret

    }

    if(BUTTON == RIGHT_BUTTON){
     e9c:	81 11       	cpse	r24, r1
     e9e:	03 c0       	rjmp	.+6      	; 0xea6 <usb_button_pushed+0x14>

//        DDRD &= ~(1 << PD5);

        pressed =  (PIND & (1 << PD5) );
     ea0:	80 b3       	in	r24, 0x10	; 16
     ea2:	80 72       	andi	r24, 0x20	; 32
     ea4:	08 95       	ret
    }

    if(BUTTON == JOYSTICK_BUTTON){
     ea6:	82 30       	cpi	r24, 0x02	; 2
     ea8:	31 f4       	brne	.+12     	; 0xeb6 <usb_button_pushed+0x24>

        pressed =  (PINB & (1 << PB1) );
     eaa:	86 b3       	in	r24, 0x16	; 22
        return !pressed;
     eac:	86 95       	lsr	r24
     eae:	81 70       	andi	r24, 0x01	; 1
     eb0:	91 e0       	ldi	r25, 0x01	; 1
     eb2:	89 27       	eor	r24, r25
     eb4:	08 95       	ret
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     }


    return pressed;
}
     eb8:	08 95       	ret

00000eba <main>:

int main(void)
{
    //printf("Main kjører");

    SRAM_init();
     eba:	0e 94 7e 07 	call	0xefc	; 0xefc <SRAM_init>
    timer_init();
     ebe:	0e 94 0a 02 	call	0x414	; 0x414 <timer_init>
    USART_init();
     ec2:	0e 94 85 07 	call	0xf0a	; 0xf0a <USART_init>
    fdevopen(USART_send, USART_receive);
     ec6:	6d e8       	ldi	r22, 0x8D	; 141
     ec8:	77 e0       	ldi	r23, 0x07	; 7
     eca:	81 e9       	ldi	r24, 0x91	; 145
     ecc:	97 e0       	ldi	r25, 0x07	; 7
     ece:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <fdevopen>
    ADC_calibrate(&P_cal);
     ed2:	87 ed       	ldi	r24, 0xD7	; 215
     ed4:	92 e0       	ldi	r25, 0x02	; 2
     ed6:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <ADC_calibrate>
    OLED_init();
     eda:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <OLED_init>
    pos_readSettings();
     ede:	0e 94 44 07 	call	0xe88	; 0xe88 <pos_readSettings>
    oled_clear();
     ee2:	0e 94 57 02 	call	0x4ae	; 0x4ae <oled_clear>
    // oled_print(&c);

    //printf("Main kjører");
    

    menu();
     ee6:	0e 94 c8 04 	call	0x990	; 0x990 <menu>
    //CAN_init(MODE_LOOPBACK);

    while (1) {

        printf("Main kjører");
     eea:	c9 e4       	ldi	r28, 0x49	; 73
     eec:	d2 e0       	ldi	r29, 0x02	; 2
     eee:	df 93       	push	r29
     ef0:	cf 93       	push	r28
     ef2:	0e 94 ca 0a 	call	0x1594	; 0x1594 <printf>
     ef6:	0f 90       	pop	r0
     ef8:	0f 90       	pop	r0
     efa:	f9 cf       	rjmp	.-14     	; 0xeee <main+0x34>

00000efc <SRAM_init>:
 */

#include "SRAM_driver.h"

void SRAM_init(void){
    MCUCR |= (1 << SRE);     //external SRAM enable (mcu control register)
     efc:	85 b7       	in	r24, 0x35	; 53
     efe:	80 68       	ori	r24, 0x80	; 128
     f00:	85 bf       	out	0x35, r24	; 53
    SFIOR |= (1 << XMM2);    //excludes memory occupied by JTAG
     f02:	80 b7       	in	r24, 0x30	; 48
     f04:	80 62       	ori	r24, 0x20	; 32
     f06:	80 bf       	out	0x30, r24	; 48
     f08:	08 95       	ret

00000f0a <USART_init>:
 */
#include "UART_driver.h"


void USART_init(void){
    UBRR0L = (uint8_t)(BAUD_PRESCALER);
     f0a:	8f e1       	ldi	r24, 0x1F	; 31
     f0c:	89 b9       	out	0x09, r24	; 9
    UBRR0H = (uint8_t)((uint8_t) BAUD_PRESCALER>>8);
     f0e:	10 bc       	out	0x20, r1	; 32
    UCSR0B = (1 << RXEN0)|(1 << TXEN0);
     f10:	88 e1       	ldi	r24, 0x18	; 24
     f12:	8a b9       	out	0x0a, r24	; 10
    UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ00);
     f14:	8e e8       	ldi	r24, 0x8E	; 142
     f16:	80 bd       	out	0x20, r24	; 32
     f18:	08 95       	ret

00000f1a <USART_receive>:
}

unsigned char USART_receive(void){
    while(!(UCSR0A & (1 << RXC0)));
     f1a:	5f 9b       	sbis	0x0b, 7	; 11
     f1c:	fe cf       	rjmp	.-4      	; 0xf1a <USART_receive>
    return UDR0;
     f1e:	8c b1       	in	r24, 0x0c	; 12
}
     f20:	08 95       	ret

00000f22 <USART_send>:

void USART_send( unsigned char data){
    while(!(UCSR0A & (1 << UDRE0)));
     f22:	5d 9b       	sbis	0x0b, 5	; 11
     f24:	fe cf       	rjmp	.-4      	; 0xf22 <USART_send>
    UDR0 = data;
     f26:	8c b9       	out	0x0c, r24	; 12
     f28:	08 95       	ret

00000f2a <__subsf3>:
     f2a:	50 58       	subi	r21, 0x80	; 128

00000f2c <__addsf3>:
     f2c:	bb 27       	eor	r27, r27
     f2e:	aa 27       	eor	r26, r26
     f30:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__addsf3x>
     f34:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__fp_round>
     f38:	0e 94 b2 09 	call	0x1364	; 0x1364 <__fp_pscA>
     f3c:	38 f0       	brcs	.+14     	; 0xf4c <__addsf3+0x20>
     f3e:	0e 94 b9 09 	call	0x1372	; 0x1372 <__fp_pscB>
     f42:	20 f0       	brcs	.+8      	; 0xf4c <__addsf3+0x20>
     f44:	39 f4       	brne	.+14     	; 0xf54 <__addsf3+0x28>
     f46:	9f 3f       	cpi	r25, 0xFF	; 255
     f48:	19 f4       	brne	.+6      	; 0xf50 <__addsf3+0x24>
     f4a:	26 f4       	brtc	.+8      	; 0xf54 <__addsf3+0x28>
     f4c:	0c 94 88 09 	jmp	0x1310	; 0x1310 <__fp_nan>
     f50:	0e f4       	brtc	.+2      	; 0xf54 <__addsf3+0x28>
     f52:	e0 95       	com	r30
     f54:	e7 fb       	bst	r30, 7
     f56:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__fp_inf>

00000f5a <__addsf3x>:
     f5a:	e9 2f       	mov	r30, r25
     f5c:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__fp_split3>
     f60:	58 f3       	brcs	.-42     	; 0xf38 <__addsf3+0xc>
     f62:	ba 17       	cp	r27, r26
     f64:	62 07       	cpc	r22, r18
     f66:	73 07       	cpc	r23, r19
     f68:	84 07       	cpc	r24, r20
     f6a:	95 07       	cpc	r25, r21
     f6c:	20 f0       	brcs	.+8      	; 0xf76 <__addsf3x+0x1c>
     f6e:	79 f4       	brne	.+30     	; 0xf8e <__addsf3x+0x34>
     f70:	a6 f5       	brtc	.+104    	; 0xfda <__addsf3x+0x80>
     f72:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_zero>
     f76:	0e f4       	brtc	.+2      	; 0xf7a <__addsf3x+0x20>
     f78:	e0 95       	com	r30
     f7a:	0b 2e       	mov	r0, r27
     f7c:	ba 2f       	mov	r27, r26
     f7e:	a0 2d       	mov	r26, r0
     f80:	0b 01       	movw	r0, r22
     f82:	b9 01       	movw	r22, r18
     f84:	90 01       	movw	r18, r0
     f86:	0c 01       	movw	r0, r24
     f88:	ca 01       	movw	r24, r20
     f8a:	a0 01       	movw	r20, r0
     f8c:	11 24       	eor	r1, r1
     f8e:	ff 27       	eor	r31, r31
     f90:	59 1b       	sub	r21, r25
     f92:	99 f0       	breq	.+38     	; 0xfba <__addsf3x+0x60>
     f94:	59 3f       	cpi	r21, 0xF9	; 249
     f96:	50 f4       	brcc	.+20     	; 0xfac <__addsf3x+0x52>
     f98:	50 3e       	cpi	r21, 0xE0	; 224
     f9a:	68 f1       	brcs	.+90     	; 0xff6 <__addsf3x+0x9c>
     f9c:	1a 16       	cp	r1, r26
     f9e:	f0 40       	sbci	r31, 0x00	; 0
     fa0:	a2 2f       	mov	r26, r18
     fa2:	23 2f       	mov	r18, r19
     fa4:	34 2f       	mov	r19, r20
     fa6:	44 27       	eor	r20, r20
     fa8:	58 5f       	subi	r21, 0xF8	; 248
     faa:	f3 cf       	rjmp	.-26     	; 0xf92 <__addsf3x+0x38>
     fac:	46 95       	lsr	r20
     fae:	37 95       	ror	r19
     fb0:	27 95       	ror	r18
     fb2:	a7 95       	ror	r26
     fb4:	f0 40       	sbci	r31, 0x00	; 0
     fb6:	53 95       	inc	r21
     fb8:	c9 f7       	brne	.-14     	; 0xfac <__addsf3x+0x52>
     fba:	7e f4       	brtc	.+30     	; 0xfda <__addsf3x+0x80>
     fbc:	1f 16       	cp	r1, r31
     fbe:	ba 0b       	sbc	r27, r26
     fc0:	62 0b       	sbc	r22, r18
     fc2:	73 0b       	sbc	r23, r19
     fc4:	84 0b       	sbc	r24, r20
     fc6:	ba f0       	brmi	.+46     	; 0xff6 <__addsf3x+0x9c>
     fc8:	91 50       	subi	r25, 0x01	; 1
     fca:	a1 f0       	breq	.+40     	; 0xff4 <__addsf3x+0x9a>
     fcc:	ff 0f       	add	r31, r31
     fce:	bb 1f       	adc	r27, r27
     fd0:	66 1f       	adc	r22, r22
     fd2:	77 1f       	adc	r23, r23
     fd4:	88 1f       	adc	r24, r24
     fd6:	c2 f7       	brpl	.-16     	; 0xfc8 <__addsf3x+0x6e>
     fd8:	0e c0       	rjmp	.+28     	; 0xff6 <__addsf3x+0x9c>
     fda:	ba 0f       	add	r27, r26
     fdc:	62 1f       	adc	r22, r18
     fde:	73 1f       	adc	r23, r19
     fe0:	84 1f       	adc	r24, r20
     fe2:	48 f4       	brcc	.+18     	; 0xff6 <__addsf3x+0x9c>
     fe4:	87 95       	ror	r24
     fe6:	77 95       	ror	r23
     fe8:	67 95       	ror	r22
     fea:	b7 95       	ror	r27
     fec:	f7 95       	ror	r31
     fee:	9e 3f       	cpi	r25, 0xFE	; 254
     ff0:	08 f0       	brcs	.+2      	; 0xff4 <__addsf3x+0x9a>
     ff2:	b0 cf       	rjmp	.-160    	; 0xf54 <__addsf3+0x28>
     ff4:	93 95       	inc	r25
     ff6:	88 0f       	add	r24, r24
     ff8:	08 f0       	brcs	.+2      	; 0xffc <__addsf3x+0xa2>
     ffa:	99 27       	eor	r25, r25
     ffc:	ee 0f       	add	r30, r30
     ffe:	97 95       	ror	r25
    1000:	87 95       	ror	r24
    1002:	08 95       	ret
    1004:	0e 94 b2 09 	call	0x1364	; 0x1364 <__fp_pscA>
    1008:	60 f0       	brcs	.+24     	; 0x1022 <__addsf3x+0xc8>
    100a:	80 e8       	ldi	r24, 0x80	; 128
    100c:	91 e0       	ldi	r25, 0x01	; 1
    100e:	09 f4       	brne	.+2      	; 0x1012 <__addsf3x+0xb8>
    1010:	9e ef       	ldi	r25, 0xFE	; 254
    1012:	0e 94 b9 09 	call	0x1372	; 0x1372 <__fp_pscB>
    1016:	28 f0       	brcs	.+10     	; 0x1022 <__addsf3x+0xc8>
    1018:	40 e8       	ldi	r20, 0x80	; 128
    101a:	51 e0       	ldi	r21, 0x01	; 1
    101c:	71 f4       	brne	.+28     	; 0x103a <atan2+0x10>
    101e:	5e ef       	ldi	r21, 0xFE	; 254
    1020:	0c c0       	rjmp	.+24     	; 0x103a <atan2+0x10>
    1022:	0c 94 88 09 	jmp	0x1310	; 0x1310 <__fp_nan>
    1026:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_zero>

0000102a <atan2>:
    102a:	e9 2f       	mov	r30, r25
    102c:	e0 78       	andi	r30, 0x80	; 128
    102e:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__fp_split3>
    1032:	40 f3       	brcs	.-48     	; 0x1004 <__addsf3x+0xaa>
    1034:	09 2e       	mov	r0, r25
    1036:	05 2a       	or	r0, r21
    1038:	b1 f3       	breq	.-20     	; 0x1026 <__addsf3x+0xcc>
    103a:	26 17       	cp	r18, r22
    103c:	37 07       	cpc	r19, r23
    103e:	48 07       	cpc	r20, r24
    1040:	59 07       	cpc	r21, r25
    1042:	38 f0       	brcs	.+14     	; 0x1052 <atan2+0x28>
    1044:	0e 2e       	mov	r0, r30
    1046:	07 f8       	bld	r0, 7
    1048:	e0 25       	eor	r30, r0
    104a:	69 f0       	breq	.+26     	; 0x1066 <atan2+0x3c>
    104c:	e0 25       	eor	r30, r0
    104e:	e0 64       	ori	r30, 0x40	; 64
    1050:	0a c0       	rjmp	.+20     	; 0x1066 <atan2+0x3c>
    1052:	ef 63       	ori	r30, 0x3F	; 63
    1054:	07 f8       	bld	r0, 7
    1056:	00 94       	com	r0
    1058:	07 fa       	bst	r0, 7
    105a:	db 01       	movw	r26, r22
    105c:	b9 01       	movw	r22, r18
    105e:	9d 01       	movw	r18, r26
    1060:	dc 01       	movw	r26, r24
    1062:	ca 01       	movw	r24, r20
    1064:	ad 01       	movw	r20, r26
    1066:	ef 93       	push	r30
    1068:	0e 94 90 08 	call	0x1120	; 0x1120 <__divsf3_pse>
    106c:	0e 94 c0 09 	call	0x1380	; 0x1380 <__fp_round>
    1070:	0e 94 45 08 	call	0x108a	; 0x108a <atan>
    1074:	5f 91       	pop	r21
    1076:	55 23       	and	r21, r21
    1078:	39 f0       	breq	.+14     	; 0x1088 <atan2+0x5e>
    107a:	2b ed       	ldi	r18, 0xDB	; 219
    107c:	3f e0       	ldi	r19, 0x0F	; 15
    107e:	49 e4       	ldi	r20, 0x49	; 73
    1080:	50 fd       	sbrc	r21, 0
    1082:	49 ec       	ldi	r20, 0xC9	; 201
    1084:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__addsf3>
    1088:	08 95       	ret

0000108a <atan>:
    108a:	df 93       	push	r29
    108c:	dd 27       	eor	r29, r29
    108e:	b9 2f       	mov	r27, r25
    1090:	bf 77       	andi	r27, 0x7F	; 127
    1092:	40 e8       	ldi	r20, 0x80	; 128
    1094:	5f e3       	ldi	r21, 0x3F	; 63
    1096:	16 16       	cp	r1, r22
    1098:	17 06       	cpc	r1, r23
    109a:	48 07       	cpc	r20, r24
    109c:	5b 07       	cpc	r21, r27
    109e:	18 f4       	brcc	.+6      	; 0x10a6 <atan+0x1c>
    10a0:	d9 2f       	mov	r29, r25
    10a2:	0e 94 ff 09 	call	0x13fe	; 0x13fe <inverse>
    10a6:	9f 93       	push	r25
    10a8:	8f 93       	push	r24
    10aa:	7f 93       	push	r23
    10ac:	6f 93       	push	r22
    10ae:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <square>
    10b2:	e0 e7       	ldi	r30, 0x70	; 112
    10b4:	f0 e0       	ldi	r31, 0x00	; 0
    10b6:	0e 94 8b 09 	call	0x1316	; 0x1316 <__fp_powser>
    10ba:	0e 94 c0 09 	call	0x1380	; 0x1380 <__fp_round>
    10be:	2f 91       	pop	r18
    10c0:	3f 91       	pop	r19
    10c2:	4f 91       	pop	r20
    10c4:	5f 91       	pop	r21
    10c6:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__mulsf3x>
    10ca:	dd 23       	and	r29, r29
    10cc:	51 f0       	breq	.+20     	; 0x10e2 <atan+0x58>
    10ce:	90 58       	subi	r25, 0x80	; 128
    10d0:	a2 ea       	ldi	r26, 0xA2	; 162
    10d2:	2a ed       	ldi	r18, 0xDA	; 218
    10d4:	3f e0       	ldi	r19, 0x0F	; 15
    10d6:	49 ec       	ldi	r20, 0xC9	; 201
    10d8:	5f e3       	ldi	r21, 0x3F	; 63
    10da:	d0 78       	andi	r29, 0x80	; 128
    10dc:	5d 27       	eor	r21, r29
    10de:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__addsf3x>
    10e2:	df 91       	pop	r29
    10e4:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__fp_round>

000010e8 <__cmpsf2>:
    10e8:	0e 94 5e 09 	call	0x12bc	; 0x12bc <__fp_cmp>
    10ec:	08 f4       	brcc	.+2      	; 0x10f0 <__cmpsf2+0x8>
    10ee:	81 e0       	ldi	r24, 0x01	; 1
    10f0:	08 95       	ret

000010f2 <__divsf3>:
    10f2:	0e 94 8d 08 	call	0x111a	; 0x111a <__divsf3x>
    10f6:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__fp_round>
    10fa:	0e 94 b9 09 	call	0x1372	; 0x1372 <__fp_pscB>
    10fe:	58 f0       	brcs	.+22     	; 0x1116 <__divsf3+0x24>
    1100:	0e 94 b2 09 	call	0x1364	; 0x1364 <__fp_pscA>
    1104:	40 f0       	brcs	.+16     	; 0x1116 <__divsf3+0x24>
    1106:	29 f4       	brne	.+10     	; 0x1112 <__divsf3+0x20>
    1108:	5f 3f       	cpi	r21, 0xFF	; 255
    110a:	29 f0       	breq	.+10     	; 0x1116 <__divsf3+0x24>
    110c:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__fp_inf>
    1110:	51 11       	cpse	r21, r1
    1112:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__fp_szero>
    1116:	0c 94 88 09 	jmp	0x1310	; 0x1310 <__fp_nan>

0000111a <__divsf3x>:
    111a:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__fp_split3>
    111e:	68 f3       	brcs	.-38     	; 0x10fa <__divsf3+0x8>

00001120 <__divsf3_pse>:
    1120:	99 23       	and	r25, r25
    1122:	b1 f3       	breq	.-20     	; 0x1110 <__divsf3+0x1e>
    1124:	55 23       	and	r21, r21
    1126:	91 f3       	breq	.-28     	; 0x110c <__divsf3+0x1a>
    1128:	95 1b       	sub	r25, r21
    112a:	55 0b       	sbc	r21, r21
    112c:	bb 27       	eor	r27, r27
    112e:	aa 27       	eor	r26, r26
    1130:	62 17       	cp	r22, r18
    1132:	73 07       	cpc	r23, r19
    1134:	84 07       	cpc	r24, r20
    1136:	38 f0       	brcs	.+14     	; 0x1146 <__divsf3_pse+0x26>
    1138:	9f 5f       	subi	r25, 0xFF	; 255
    113a:	5f 4f       	sbci	r21, 0xFF	; 255
    113c:	22 0f       	add	r18, r18
    113e:	33 1f       	adc	r19, r19
    1140:	44 1f       	adc	r20, r20
    1142:	aa 1f       	adc	r26, r26
    1144:	a9 f3       	breq	.-22     	; 0x1130 <__divsf3_pse+0x10>
    1146:	35 d0       	rcall	.+106    	; 0x11b2 <__divsf3_pse+0x92>
    1148:	0e 2e       	mov	r0, r30
    114a:	3a f0       	brmi	.+14     	; 0x115a <__divsf3_pse+0x3a>
    114c:	e0 e8       	ldi	r30, 0x80	; 128
    114e:	32 d0       	rcall	.+100    	; 0x11b4 <__divsf3_pse+0x94>
    1150:	91 50       	subi	r25, 0x01	; 1
    1152:	50 40       	sbci	r21, 0x00	; 0
    1154:	e6 95       	lsr	r30
    1156:	00 1c       	adc	r0, r0
    1158:	ca f7       	brpl	.-14     	; 0x114c <__divsf3_pse+0x2c>
    115a:	2b d0       	rcall	.+86     	; 0x11b2 <__divsf3_pse+0x92>
    115c:	fe 2f       	mov	r31, r30
    115e:	29 d0       	rcall	.+82     	; 0x11b2 <__divsf3_pse+0x92>
    1160:	66 0f       	add	r22, r22
    1162:	77 1f       	adc	r23, r23
    1164:	88 1f       	adc	r24, r24
    1166:	bb 1f       	adc	r27, r27
    1168:	26 17       	cp	r18, r22
    116a:	37 07       	cpc	r19, r23
    116c:	48 07       	cpc	r20, r24
    116e:	ab 07       	cpc	r26, r27
    1170:	b0 e8       	ldi	r27, 0x80	; 128
    1172:	09 f0       	breq	.+2      	; 0x1176 <__divsf3_pse+0x56>
    1174:	bb 0b       	sbc	r27, r27
    1176:	80 2d       	mov	r24, r0
    1178:	bf 01       	movw	r22, r30
    117a:	ff 27       	eor	r31, r31
    117c:	93 58       	subi	r25, 0x83	; 131
    117e:	5f 4f       	sbci	r21, 0xFF	; 255
    1180:	3a f0       	brmi	.+14     	; 0x1190 <__divsf3_pse+0x70>
    1182:	9e 3f       	cpi	r25, 0xFE	; 254
    1184:	51 05       	cpc	r21, r1
    1186:	78 f0       	brcs	.+30     	; 0x11a6 <__divsf3_pse+0x86>
    1188:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__fp_inf>
    118c:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__fp_szero>
    1190:	5f 3f       	cpi	r21, 0xFF	; 255
    1192:	e4 f3       	brlt	.-8      	; 0x118c <__divsf3_pse+0x6c>
    1194:	98 3e       	cpi	r25, 0xE8	; 232
    1196:	d4 f3       	brlt	.-12     	; 0x118c <__divsf3_pse+0x6c>
    1198:	86 95       	lsr	r24
    119a:	77 95       	ror	r23
    119c:	67 95       	ror	r22
    119e:	b7 95       	ror	r27
    11a0:	f7 95       	ror	r31
    11a2:	9f 5f       	subi	r25, 0xFF	; 255
    11a4:	c9 f7       	brne	.-14     	; 0x1198 <__divsf3_pse+0x78>
    11a6:	88 0f       	add	r24, r24
    11a8:	91 1d       	adc	r25, r1
    11aa:	96 95       	lsr	r25
    11ac:	87 95       	ror	r24
    11ae:	97 f9       	bld	r25, 7
    11b0:	08 95       	ret
    11b2:	e1 e0       	ldi	r30, 0x01	; 1
    11b4:	66 0f       	add	r22, r22
    11b6:	77 1f       	adc	r23, r23
    11b8:	88 1f       	adc	r24, r24
    11ba:	bb 1f       	adc	r27, r27
    11bc:	62 17       	cp	r22, r18
    11be:	73 07       	cpc	r23, r19
    11c0:	84 07       	cpc	r24, r20
    11c2:	ba 07       	cpc	r27, r26
    11c4:	20 f0       	brcs	.+8      	; 0x11ce <__divsf3_pse+0xae>
    11c6:	62 1b       	sub	r22, r18
    11c8:	73 0b       	sbc	r23, r19
    11ca:	84 0b       	sbc	r24, r20
    11cc:	ba 0b       	sbc	r27, r26
    11ce:	ee 1f       	adc	r30, r30
    11d0:	88 f7       	brcc	.-30     	; 0x11b4 <__divsf3_pse+0x94>
    11d2:	e0 95       	com	r30
    11d4:	08 95       	ret

000011d6 <__fixsfsi>:
    11d6:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <__fixunssfsi>
    11da:	68 94       	set
    11dc:	b1 11       	cpse	r27, r1
    11de:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__fp_szero>
    11e2:	08 95       	ret

000011e4 <__fixunssfsi>:
    11e4:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__fp_splitA>
    11e8:	88 f0       	brcs	.+34     	; 0x120c <__fixunssfsi+0x28>
    11ea:	9f 57       	subi	r25, 0x7F	; 127
    11ec:	98 f0       	brcs	.+38     	; 0x1214 <__fixunssfsi+0x30>
    11ee:	b9 2f       	mov	r27, r25
    11f0:	99 27       	eor	r25, r25
    11f2:	b7 51       	subi	r27, 0x17	; 23
    11f4:	b0 f0       	brcs	.+44     	; 0x1222 <__fixunssfsi+0x3e>
    11f6:	e1 f0       	breq	.+56     	; 0x1230 <__fixunssfsi+0x4c>
    11f8:	66 0f       	add	r22, r22
    11fa:	77 1f       	adc	r23, r23
    11fc:	88 1f       	adc	r24, r24
    11fe:	99 1f       	adc	r25, r25
    1200:	1a f0       	brmi	.+6      	; 0x1208 <__fixunssfsi+0x24>
    1202:	ba 95       	dec	r27
    1204:	c9 f7       	brne	.-14     	; 0x11f8 <__fixunssfsi+0x14>
    1206:	14 c0       	rjmp	.+40     	; 0x1230 <__fixunssfsi+0x4c>
    1208:	b1 30       	cpi	r27, 0x01	; 1
    120a:	91 f0       	breq	.+36     	; 0x1230 <__fixunssfsi+0x4c>
    120c:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <__fp_zero>
    1210:	b1 e0       	ldi	r27, 0x01	; 1
    1212:	08 95       	ret
    1214:	0c 94 f3 09 	jmp	0x13e6	; 0x13e6 <__fp_zero>
    1218:	67 2f       	mov	r22, r23
    121a:	78 2f       	mov	r23, r24
    121c:	88 27       	eor	r24, r24
    121e:	b8 5f       	subi	r27, 0xF8	; 248
    1220:	39 f0       	breq	.+14     	; 0x1230 <__fixunssfsi+0x4c>
    1222:	b9 3f       	cpi	r27, 0xF9	; 249
    1224:	cc f3       	brlt	.-14     	; 0x1218 <__fixunssfsi+0x34>
    1226:	86 95       	lsr	r24
    1228:	77 95       	ror	r23
    122a:	67 95       	ror	r22
    122c:	b3 95       	inc	r27
    122e:	d9 f7       	brne	.-10     	; 0x1226 <__fixunssfsi+0x42>
    1230:	3e f4       	brtc	.+14     	; 0x1240 <__fixunssfsi+0x5c>
    1232:	90 95       	com	r25
    1234:	80 95       	com	r24
    1236:	70 95       	com	r23
    1238:	61 95       	neg	r22
    123a:	7f 4f       	sbci	r23, 0xFF	; 255
    123c:	8f 4f       	sbci	r24, 0xFF	; 255
    123e:	9f 4f       	sbci	r25, 0xFF	; 255
    1240:	08 95       	ret

00001242 <__floatunsisf>:
    1242:	e8 94       	clt
    1244:	09 c0       	rjmp	.+18     	; 0x1258 <__floatsisf+0x12>

00001246 <__floatsisf>:
    1246:	97 fb       	bst	r25, 7
    1248:	3e f4       	brtc	.+14     	; 0x1258 <__floatsisf+0x12>
    124a:	90 95       	com	r25
    124c:	80 95       	com	r24
    124e:	70 95       	com	r23
    1250:	61 95       	neg	r22
    1252:	7f 4f       	sbci	r23, 0xFF	; 255
    1254:	8f 4f       	sbci	r24, 0xFF	; 255
    1256:	9f 4f       	sbci	r25, 0xFF	; 255
    1258:	99 23       	and	r25, r25
    125a:	a9 f0       	breq	.+42     	; 0x1286 <__floatsisf+0x40>
    125c:	f9 2f       	mov	r31, r25
    125e:	96 e9       	ldi	r25, 0x96	; 150
    1260:	bb 27       	eor	r27, r27
    1262:	93 95       	inc	r25
    1264:	f6 95       	lsr	r31
    1266:	87 95       	ror	r24
    1268:	77 95       	ror	r23
    126a:	67 95       	ror	r22
    126c:	b7 95       	ror	r27
    126e:	f1 11       	cpse	r31, r1
    1270:	f8 cf       	rjmp	.-16     	; 0x1262 <__floatsisf+0x1c>
    1272:	fa f4       	brpl	.+62     	; 0x12b2 <__floatsisf+0x6c>
    1274:	bb 0f       	add	r27, r27
    1276:	11 f4       	brne	.+4      	; 0x127c <__floatsisf+0x36>
    1278:	60 ff       	sbrs	r22, 0
    127a:	1b c0       	rjmp	.+54     	; 0x12b2 <__floatsisf+0x6c>
    127c:	6f 5f       	subi	r22, 0xFF	; 255
    127e:	7f 4f       	sbci	r23, 0xFF	; 255
    1280:	8f 4f       	sbci	r24, 0xFF	; 255
    1282:	9f 4f       	sbci	r25, 0xFF	; 255
    1284:	16 c0       	rjmp	.+44     	; 0x12b2 <__floatsisf+0x6c>
    1286:	88 23       	and	r24, r24
    1288:	11 f0       	breq	.+4      	; 0x128e <__floatsisf+0x48>
    128a:	96 e9       	ldi	r25, 0x96	; 150
    128c:	11 c0       	rjmp	.+34     	; 0x12b0 <__floatsisf+0x6a>
    128e:	77 23       	and	r23, r23
    1290:	21 f0       	breq	.+8      	; 0x129a <__floatsisf+0x54>
    1292:	9e e8       	ldi	r25, 0x8E	; 142
    1294:	87 2f       	mov	r24, r23
    1296:	76 2f       	mov	r23, r22
    1298:	05 c0       	rjmp	.+10     	; 0x12a4 <__floatsisf+0x5e>
    129a:	66 23       	and	r22, r22
    129c:	71 f0       	breq	.+28     	; 0x12ba <__floatsisf+0x74>
    129e:	96 e8       	ldi	r25, 0x86	; 134
    12a0:	86 2f       	mov	r24, r22
    12a2:	70 e0       	ldi	r23, 0x00	; 0
    12a4:	60 e0       	ldi	r22, 0x00	; 0
    12a6:	2a f0       	brmi	.+10     	; 0x12b2 <__floatsisf+0x6c>
    12a8:	9a 95       	dec	r25
    12aa:	66 0f       	add	r22, r22
    12ac:	77 1f       	adc	r23, r23
    12ae:	88 1f       	adc	r24, r24
    12b0:	da f7       	brpl	.-10     	; 0x12a8 <__floatsisf+0x62>
    12b2:	88 0f       	add	r24, r24
    12b4:	96 95       	lsr	r25
    12b6:	87 95       	ror	r24
    12b8:	97 f9       	bld	r25, 7
    12ba:	08 95       	ret

000012bc <__fp_cmp>:
    12bc:	99 0f       	add	r25, r25
    12be:	00 08       	sbc	r0, r0
    12c0:	55 0f       	add	r21, r21
    12c2:	aa 0b       	sbc	r26, r26
    12c4:	e0 e8       	ldi	r30, 0x80	; 128
    12c6:	fe ef       	ldi	r31, 0xFE	; 254
    12c8:	16 16       	cp	r1, r22
    12ca:	17 06       	cpc	r1, r23
    12cc:	e8 07       	cpc	r30, r24
    12ce:	f9 07       	cpc	r31, r25
    12d0:	c0 f0       	brcs	.+48     	; 0x1302 <__fp_cmp+0x46>
    12d2:	12 16       	cp	r1, r18
    12d4:	13 06       	cpc	r1, r19
    12d6:	e4 07       	cpc	r30, r20
    12d8:	f5 07       	cpc	r31, r21
    12da:	98 f0       	brcs	.+38     	; 0x1302 <__fp_cmp+0x46>
    12dc:	62 1b       	sub	r22, r18
    12de:	73 0b       	sbc	r23, r19
    12e0:	84 0b       	sbc	r24, r20
    12e2:	95 0b       	sbc	r25, r21
    12e4:	39 f4       	brne	.+14     	; 0x12f4 <__fp_cmp+0x38>
    12e6:	0a 26       	eor	r0, r26
    12e8:	61 f0       	breq	.+24     	; 0x1302 <__fp_cmp+0x46>
    12ea:	23 2b       	or	r18, r19
    12ec:	24 2b       	or	r18, r20
    12ee:	25 2b       	or	r18, r21
    12f0:	21 f4       	brne	.+8      	; 0x12fa <__fp_cmp+0x3e>
    12f2:	08 95       	ret
    12f4:	0a 26       	eor	r0, r26
    12f6:	09 f4       	brne	.+2      	; 0x12fa <__fp_cmp+0x3e>
    12f8:	a1 40       	sbci	r26, 0x01	; 1
    12fa:	a6 95       	lsr	r26
    12fc:	8f ef       	ldi	r24, 0xFF	; 255
    12fe:	81 1d       	adc	r24, r1
    1300:	81 1d       	adc	r24, r1
    1302:	08 95       	ret

00001304 <__fp_inf>:
    1304:	97 f9       	bld	r25, 7
    1306:	9f 67       	ori	r25, 0x7F	; 127
    1308:	80 e8       	ldi	r24, 0x80	; 128
    130a:	70 e0       	ldi	r23, 0x00	; 0
    130c:	60 e0       	ldi	r22, 0x00	; 0
    130e:	08 95       	ret

00001310 <__fp_nan>:
    1310:	9f ef       	ldi	r25, 0xFF	; 255
    1312:	80 ec       	ldi	r24, 0xC0	; 192
    1314:	08 95       	ret

00001316 <__fp_powser>:
    1316:	df 93       	push	r29
    1318:	cf 93       	push	r28
    131a:	1f 93       	push	r17
    131c:	0f 93       	push	r16
    131e:	ff 92       	push	r15
    1320:	ef 92       	push	r14
    1322:	df 92       	push	r13
    1324:	7b 01       	movw	r14, r22
    1326:	8c 01       	movw	r16, r24
    1328:	68 94       	set
    132a:	06 c0       	rjmp	.+12     	; 0x1338 <__fp_powser+0x22>
    132c:	da 2e       	mov	r13, r26
    132e:	ef 01       	movw	r28, r30
    1330:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__mulsf3x>
    1334:	fe 01       	movw	r30, r28
    1336:	e8 94       	clt
    1338:	a5 91       	lpm	r26, Z+
    133a:	25 91       	lpm	r18, Z+
    133c:	35 91       	lpm	r19, Z+
    133e:	45 91       	lpm	r20, Z+
    1340:	55 91       	lpm	r21, Z+
    1342:	a6 f3       	brts	.-24     	; 0x132c <__fp_powser+0x16>
    1344:	ef 01       	movw	r28, r30
    1346:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__addsf3x>
    134a:	fe 01       	movw	r30, r28
    134c:	97 01       	movw	r18, r14
    134e:	a8 01       	movw	r20, r16
    1350:	da 94       	dec	r13
    1352:	69 f7       	brne	.-38     	; 0x132e <__fp_powser+0x18>
    1354:	df 90       	pop	r13
    1356:	ef 90       	pop	r14
    1358:	ff 90       	pop	r15
    135a:	0f 91       	pop	r16
    135c:	1f 91       	pop	r17
    135e:	cf 91       	pop	r28
    1360:	df 91       	pop	r29
    1362:	08 95       	ret

00001364 <__fp_pscA>:
    1364:	00 24       	eor	r0, r0
    1366:	0a 94       	dec	r0
    1368:	16 16       	cp	r1, r22
    136a:	17 06       	cpc	r1, r23
    136c:	18 06       	cpc	r1, r24
    136e:	09 06       	cpc	r0, r25
    1370:	08 95       	ret

00001372 <__fp_pscB>:
    1372:	00 24       	eor	r0, r0
    1374:	0a 94       	dec	r0
    1376:	12 16       	cp	r1, r18
    1378:	13 06       	cpc	r1, r19
    137a:	14 06       	cpc	r1, r20
    137c:	05 06       	cpc	r0, r21
    137e:	08 95       	ret

00001380 <__fp_round>:
    1380:	09 2e       	mov	r0, r25
    1382:	03 94       	inc	r0
    1384:	00 0c       	add	r0, r0
    1386:	11 f4       	brne	.+4      	; 0x138c <__fp_round+0xc>
    1388:	88 23       	and	r24, r24
    138a:	52 f0       	brmi	.+20     	; 0x13a0 <__fp_round+0x20>
    138c:	bb 0f       	add	r27, r27
    138e:	40 f4       	brcc	.+16     	; 0x13a0 <__fp_round+0x20>
    1390:	bf 2b       	or	r27, r31
    1392:	11 f4       	brne	.+4      	; 0x1398 <__fp_round+0x18>
    1394:	60 ff       	sbrs	r22, 0
    1396:	04 c0       	rjmp	.+8      	; 0x13a0 <__fp_round+0x20>
    1398:	6f 5f       	subi	r22, 0xFF	; 255
    139a:	7f 4f       	sbci	r23, 0xFF	; 255
    139c:	8f 4f       	sbci	r24, 0xFF	; 255
    139e:	9f 4f       	sbci	r25, 0xFF	; 255
    13a0:	08 95       	ret

000013a2 <__fp_split3>:
    13a2:	57 fd       	sbrc	r21, 7
    13a4:	90 58       	subi	r25, 0x80	; 128
    13a6:	44 0f       	add	r20, r20
    13a8:	55 1f       	adc	r21, r21
    13aa:	59 f0       	breq	.+22     	; 0x13c2 <__fp_splitA+0x10>
    13ac:	5f 3f       	cpi	r21, 0xFF	; 255
    13ae:	71 f0       	breq	.+28     	; 0x13cc <__fp_splitA+0x1a>
    13b0:	47 95       	ror	r20

000013b2 <__fp_splitA>:
    13b2:	88 0f       	add	r24, r24
    13b4:	97 fb       	bst	r25, 7
    13b6:	99 1f       	adc	r25, r25
    13b8:	61 f0       	breq	.+24     	; 0x13d2 <__fp_splitA+0x20>
    13ba:	9f 3f       	cpi	r25, 0xFF	; 255
    13bc:	79 f0       	breq	.+30     	; 0x13dc <__fp_splitA+0x2a>
    13be:	87 95       	ror	r24
    13c0:	08 95       	ret
    13c2:	12 16       	cp	r1, r18
    13c4:	13 06       	cpc	r1, r19
    13c6:	14 06       	cpc	r1, r20
    13c8:	55 1f       	adc	r21, r21
    13ca:	f2 cf       	rjmp	.-28     	; 0x13b0 <__fp_split3+0xe>
    13cc:	46 95       	lsr	r20
    13ce:	f1 df       	rcall	.-30     	; 0x13b2 <__fp_splitA>
    13d0:	08 c0       	rjmp	.+16     	; 0x13e2 <__fp_splitA+0x30>
    13d2:	16 16       	cp	r1, r22
    13d4:	17 06       	cpc	r1, r23
    13d6:	18 06       	cpc	r1, r24
    13d8:	99 1f       	adc	r25, r25
    13da:	f1 cf       	rjmp	.-30     	; 0x13be <__fp_splitA+0xc>
    13dc:	86 95       	lsr	r24
    13de:	71 05       	cpc	r23, r1
    13e0:	61 05       	cpc	r22, r1
    13e2:	08 94       	sec
    13e4:	08 95       	ret

000013e6 <__fp_zero>:
    13e6:	e8 94       	clt

000013e8 <__fp_szero>:
    13e8:	bb 27       	eor	r27, r27
    13ea:	66 27       	eor	r22, r22
    13ec:	77 27       	eor	r23, r23
    13ee:	cb 01       	movw	r24, r22
    13f0:	97 f9       	bld	r25, 7
    13f2:	08 95       	ret

000013f4 <__gesf2>:
    13f4:	0e 94 5e 09 	call	0x12bc	; 0x12bc <__fp_cmp>
    13f8:	08 f4       	brcc	.+2      	; 0x13fc <__gesf2+0x8>
    13fa:	8f ef       	ldi	r24, 0xFF	; 255
    13fc:	08 95       	ret

000013fe <inverse>:
    13fe:	9b 01       	movw	r18, r22
    1400:	ac 01       	movw	r20, r24
    1402:	60 e0       	ldi	r22, 0x00	; 0
    1404:	70 e0       	ldi	r23, 0x00	; 0
    1406:	80 e8       	ldi	r24, 0x80	; 128
    1408:	9f e3       	ldi	r25, 0x3F	; 63
    140a:	0c 94 79 08 	jmp	0x10f2	; 0x10f2 <__divsf3>

0000140e <__mulsf3>:
    140e:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__mulsf3x>
    1412:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__fp_round>
    1416:	0e 94 b2 09 	call	0x1364	; 0x1364 <__fp_pscA>
    141a:	38 f0       	brcs	.+14     	; 0x142a <__mulsf3+0x1c>
    141c:	0e 94 b9 09 	call	0x1372	; 0x1372 <__fp_pscB>
    1420:	20 f0       	brcs	.+8      	; 0x142a <__mulsf3+0x1c>
    1422:	95 23       	and	r25, r21
    1424:	11 f0       	breq	.+4      	; 0x142a <__mulsf3+0x1c>
    1426:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__fp_inf>
    142a:	0c 94 88 09 	jmp	0x1310	; 0x1310 <__fp_nan>
    142e:	11 24       	eor	r1, r1
    1430:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__fp_szero>

00001434 <__mulsf3x>:
    1434:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__fp_split3>
    1438:	70 f3       	brcs	.-36     	; 0x1416 <__mulsf3+0x8>

0000143a <__mulsf3_pse>:
    143a:	95 9f       	mul	r25, r21
    143c:	c1 f3       	breq	.-16     	; 0x142e <__mulsf3+0x20>
    143e:	95 0f       	add	r25, r21
    1440:	50 e0       	ldi	r21, 0x00	; 0
    1442:	55 1f       	adc	r21, r21
    1444:	62 9f       	mul	r22, r18
    1446:	f0 01       	movw	r30, r0
    1448:	72 9f       	mul	r23, r18
    144a:	bb 27       	eor	r27, r27
    144c:	f0 0d       	add	r31, r0
    144e:	b1 1d       	adc	r27, r1
    1450:	63 9f       	mul	r22, r19
    1452:	aa 27       	eor	r26, r26
    1454:	f0 0d       	add	r31, r0
    1456:	b1 1d       	adc	r27, r1
    1458:	aa 1f       	adc	r26, r26
    145a:	64 9f       	mul	r22, r20
    145c:	66 27       	eor	r22, r22
    145e:	b0 0d       	add	r27, r0
    1460:	a1 1d       	adc	r26, r1
    1462:	66 1f       	adc	r22, r22
    1464:	82 9f       	mul	r24, r18
    1466:	22 27       	eor	r18, r18
    1468:	b0 0d       	add	r27, r0
    146a:	a1 1d       	adc	r26, r1
    146c:	62 1f       	adc	r22, r18
    146e:	73 9f       	mul	r23, r19
    1470:	b0 0d       	add	r27, r0
    1472:	a1 1d       	adc	r26, r1
    1474:	62 1f       	adc	r22, r18
    1476:	83 9f       	mul	r24, r19
    1478:	a0 0d       	add	r26, r0
    147a:	61 1d       	adc	r22, r1
    147c:	22 1f       	adc	r18, r18
    147e:	74 9f       	mul	r23, r20
    1480:	33 27       	eor	r19, r19
    1482:	a0 0d       	add	r26, r0
    1484:	61 1d       	adc	r22, r1
    1486:	23 1f       	adc	r18, r19
    1488:	84 9f       	mul	r24, r20
    148a:	60 0d       	add	r22, r0
    148c:	21 1d       	adc	r18, r1
    148e:	82 2f       	mov	r24, r18
    1490:	76 2f       	mov	r23, r22
    1492:	6a 2f       	mov	r22, r26
    1494:	11 24       	eor	r1, r1
    1496:	9f 57       	subi	r25, 0x7F	; 127
    1498:	50 40       	sbci	r21, 0x00	; 0
    149a:	9a f0       	brmi	.+38     	; 0x14c2 <__mulsf3_pse+0x88>
    149c:	f1 f0       	breq	.+60     	; 0x14da <__mulsf3_pse+0xa0>
    149e:	88 23       	and	r24, r24
    14a0:	4a f0       	brmi	.+18     	; 0x14b4 <__mulsf3_pse+0x7a>
    14a2:	ee 0f       	add	r30, r30
    14a4:	ff 1f       	adc	r31, r31
    14a6:	bb 1f       	adc	r27, r27
    14a8:	66 1f       	adc	r22, r22
    14aa:	77 1f       	adc	r23, r23
    14ac:	88 1f       	adc	r24, r24
    14ae:	91 50       	subi	r25, 0x01	; 1
    14b0:	50 40       	sbci	r21, 0x00	; 0
    14b2:	a9 f7       	brne	.-22     	; 0x149e <__mulsf3_pse+0x64>
    14b4:	9e 3f       	cpi	r25, 0xFE	; 254
    14b6:	51 05       	cpc	r21, r1
    14b8:	80 f0       	brcs	.+32     	; 0x14da <__mulsf3_pse+0xa0>
    14ba:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__fp_inf>
    14be:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__fp_szero>
    14c2:	5f 3f       	cpi	r21, 0xFF	; 255
    14c4:	e4 f3       	brlt	.-8      	; 0x14be <__mulsf3_pse+0x84>
    14c6:	98 3e       	cpi	r25, 0xE8	; 232
    14c8:	d4 f3       	brlt	.-12     	; 0x14be <__mulsf3_pse+0x84>
    14ca:	86 95       	lsr	r24
    14cc:	77 95       	ror	r23
    14ce:	67 95       	ror	r22
    14d0:	b7 95       	ror	r27
    14d2:	f7 95       	ror	r31
    14d4:	e7 95       	ror	r30
    14d6:	9f 5f       	subi	r25, 0xFF	; 255
    14d8:	c1 f7       	brne	.-16     	; 0x14ca <__mulsf3_pse+0x90>
    14da:	fe 2b       	or	r31, r30
    14dc:	88 0f       	add	r24, r24
    14de:	91 1d       	adc	r25, r1
    14e0:	96 95       	lsr	r25
    14e2:	87 95       	ror	r24
    14e4:	97 f9       	bld	r25, 7
    14e6:	08 95       	ret

000014e8 <square>:
    14e8:	9b 01       	movw	r18, r22
    14ea:	ac 01       	movw	r20, r24
    14ec:	0c 94 07 0a 	jmp	0x140e	; 0x140e <__mulsf3>

000014f0 <strcpy>:
    14f0:	fb 01       	movw	r30, r22
    14f2:	dc 01       	movw	r26, r24
    14f4:	01 90       	ld	r0, Z+
    14f6:	0d 92       	st	X+, r0
    14f8:	00 20       	and	r0, r0
    14fa:	e1 f7       	brne	.-8      	; 0x14f4 <strcpy+0x4>
    14fc:	08 95       	ret

000014fe <fdevopen>:
    14fe:	0f 93       	push	r16
    1500:	1f 93       	push	r17
    1502:	cf 93       	push	r28
    1504:	df 93       	push	r29
    1506:	00 97       	sbiw	r24, 0x00	; 0
    1508:	31 f4       	brne	.+12     	; 0x1516 <fdevopen+0x18>
    150a:	61 15       	cp	r22, r1
    150c:	71 05       	cpc	r23, r1
    150e:	19 f4       	brne	.+6      	; 0x1516 <fdevopen+0x18>
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	3a c0       	rjmp	.+116    	; 0x158a <fdevopen+0x8c>
    1516:	8b 01       	movw	r16, r22
    1518:	ec 01       	movw	r28, r24
    151a:	6e e0       	ldi	r22, 0x0E	; 14
    151c:	70 e0       	ldi	r23, 0x00	; 0
    151e:	81 e0       	ldi	r24, 0x01	; 1
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <calloc>
    1526:	fc 01       	movw	r30, r24
    1528:	89 2b       	or	r24, r25
    152a:	91 f3       	breq	.-28     	; 0x1510 <fdevopen+0x12>
    152c:	80 e8       	ldi	r24, 0x80	; 128
    152e:	83 83       	std	Z+3, r24	; 0x03
    1530:	01 15       	cp	r16, r1
    1532:	11 05       	cpc	r17, r1
    1534:	71 f0       	breq	.+28     	; 0x1552 <fdevopen+0x54>
    1536:	13 87       	std	Z+11, r17	; 0x0b
    1538:	02 87       	std	Z+10, r16	; 0x0a
    153a:	81 e8       	ldi	r24, 0x81	; 129
    153c:	83 83       	std	Z+3, r24	; 0x03
    153e:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <__iob>
    1542:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <__iob+0x1>
    1546:	89 2b       	or	r24, r25
    1548:	21 f4       	brne	.+8      	; 0x1552 <fdevopen+0x54>
    154a:	f0 93 e2 02 	sts	0x02E2, r31	; 0x8002e2 <__iob+0x1>
    154e:	e0 93 e1 02 	sts	0x02E1, r30	; 0x8002e1 <__iob>
    1552:	20 97       	sbiw	r28, 0x00	; 0
    1554:	c9 f0       	breq	.+50     	; 0x1588 <fdevopen+0x8a>
    1556:	d1 87       	std	Z+9, r29	; 0x09
    1558:	c0 87       	std	Z+8, r28	; 0x08
    155a:	83 81       	ldd	r24, Z+3	; 0x03
    155c:	82 60       	ori	r24, 0x02	; 2
    155e:	83 83       	std	Z+3, r24	; 0x03
    1560:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <__iob+0x2>
    1564:	90 91 e4 02 	lds	r25, 0x02E4	; 0x8002e4 <__iob+0x3>
    1568:	89 2b       	or	r24, r25
    156a:	71 f4       	brne	.+28     	; 0x1588 <fdevopen+0x8a>
    156c:	f0 93 e4 02 	sts	0x02E4, r31	; 0x8002e4 <__iob+0x3>
    1570:	e0 93 e3 02 	sts	0x02E3, r30	; 0x8002e3 <__iob+0x2>
    1574:	80 91 e5 02 	lds	r24, 0x02E5	; 0x8002e5 <__iob+0x4>
    1578:	90 91 e6 02 	lds	r25, 0x02E6	; 0x8002e6 <__iob+0x5>
    157c:	89 2b       	or	r24, r25
    157e:	21 f4       	brne	.+8      	; 0x1588 <fdevopen+0x8a>
    1580:	f0 93 e6 02 	sts	0x02E6, r31	; 0x8002e6 <__iob+0x5>
    1584:	e0 93 e5 02 	sts	0x02E5, r30	; 0x8002e5 <__iob+0x4>
    1588:	cf 01       	movw	r24, r30
    158a:	df 91       	pop	r29
    158c:	cf 91       	pop	r28
    158e:	1f 91       	pop	r17
    1590:	0f 91       	pop	r16
    1592:	08 95       	ret

00001594 <printf>:
    1594:	a0 e0       	ldi	r26, 0x00	; 0
    1596:	b0 e0       	ldi	r27, 0x00	; 0
    1598:	e0 ed       	ldi	r30, 0xD0	; 208
    159a:	fa e0       	ldi	r31, 0x0A	; 10
    159c:	0c 94 f5 0e 	jmp	0x1dea	; 0x1dea <__prologue_saves__+0x20>
    15a0:	ae 01       	movw	r20, r28
    15a2:	4b 5f       	subi	r20, 0xFB	; 251
    15a4:	5f 4f       	sbci	r21, 0xFF	; 255
    15a6:	fa 01       	movw	r30, r20
    15a8:	61 91       	ld	r22, Z+
    15aa:	71 91       	ld	r23, Z+
    15ac:	af 01       	movw	r20, r30
    15ae:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <__iob+0x2>
    15b2:	90 91 e4 02 	lds	r25, 0x02E4	; 0x8002e4 <__iob+0x3>
    15b6:	0e 94 10 0b 	call	0x1620	; 0x1620 <vfprintf>
    15ba:	e2 e0       	ldi	r30, 0x02	; 2
    15bc:	0c 94 11 0f 	jmp	0x1e22	; 0x1e22 <__epilogue_restores__+0x20>

000015c0 <puts>:
    15c0:	0f 93       	push	r16
    15c2:	1f 93       	push	r17
    15c4:	cf 93       	push	r28
    15c6:	df 93       	push	r29
    15c8:	e0 91 e3 02 	lds	r30, 0x02E3	; 0x8002e3 <__iob+0x2>
    15cc:	f0 91 e4 02 	lds	r31, 0x02E4	; 0x8002e4 <__iob+0x3>
    15d0:	23 81       	ldd	r18, Z+3	; 0x03
    15d2:	21 ff       	sbrs	r18, 1
    15d4:	1b c0       	rjmp	.+54     	; 0x160c <puts+0x4c>
    15d6:	8c 01       	movw	r16, r24
    15d8:	d0 e0       	ldi	r29, 0x00	; 0
    15da:	c0 e0       	ldi	r28, 0x00	; 0
    15dc:	f8 01       	movw	r30, r16
    15de:	81 91       	ld	r24, Z+
    15e0:	8f 01       	movw	r16, r30
    15e2:	60 91 e3 02 	lds	r22, 0x02E3	; 0x8002e3 <__iob+0x2>
    15e6:	70 91 e4 02 	lds	r23, 0x02E4	; 0x8002e4 <__iob+0x3>
    15ea:	db 01       	movw	r26, r22
    15ec:	18 96       	adiw	r26, 0x08	; 8
    15ee:	ed 91       	ld	r30, X+
    15f0:	fc 91       	ld	r31, X
    15f2:	19 97       	sbiw	r26, 0x09	; 9
    15f4:	88 23       	and	r24, r24
    15f6:	31 f0       	breq	.+12     	; 0x1604 <puts+0x44>
    15f8:	09 95       	icall
    15fa:	89 2b       	or	r24, r25
    15fc:	79 f3       	breq	.-34     	; 0x15dc <puts+0x1c>
    15fe:	df ef       	ldi	r29, 0xFF	; 255
    1600:	cf ef       	ldi	r28, 0xFF	; 255
    1602:	ec cf       	rjmp	.-40     	; 0x15dc <puts+0x1c>
    1604:	8a e0       	ldi	r24, 0x0A	; 10
    1606:	09 95       	icall
    1608:	89 2b       	or	r24, r25
    160a:	19 f0       	breq	.+6      	; 0x1612 <puts+0x52>
    160c:	8f ef       	ldi	r24, 0xFF	; 255
    160e:	9f ef       	ldi	r25, 0xFF	; 255
    1610:	02 c0       	rjmp	.+4      	; 0x1616 <puts+0x56>
    1612:	8d 2f       	mov	r24, r29
    1614:	9c 2f       	mov	r25, r28
    1616:	df 91       	pop	r29
    1618:	cf 91       	pop	r28
    161a:	1f 91       	pop	r17
    161c:	0f 91       	pop	r16
    161e:	08 95       	ret

00001620 <vfprintf>:
    1620:	ab e0       	ldi	r26, 0x0B	; 11
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	e6 e1       	ldi	r30, 0x16	; 22
    1626:	fb e0       	ldi	r31, 0x0B	; 11
    1628:	0c 94 e5 0e 	jmp	0x1dca	; 0x1dca <__prologue_saves__>
    162c:	6c 01       	movw	r12, r24
    162e:	7b 01       	movw	r14, r22
    1630:	8a 01       	movw	r16, r20
    1632:	fc 01       	movw	r30, r24
    1634:	17 82       	std	Z+7, r1	; 0x07
    1636:	16 82       	std	Z+6, r1	; 0x06
    1638:	83 81       	ldd	r24, Z+3	; 0x03
    163a:	81 ff       	sbrs	r24, 1
    163c:	cc c1       	rjmp	.+920    	; 0x19d6 <vfprintf+0x3b6>
    163e:	ce 01       	movw	r24, r28
    1640:	01 96       	adiw	r24, 0x01	; 1
    1642:	3c 01       	movw	r6, r24
    1644:	f6 01       	movw	r30, r12
    1646:	93 81       	ldd	r25, Z+3	; 0x03
    1648:	f7 01       	movw	r30, r14
    164a:	93 fd       	sbrc	r25, 3
    164c:	85 91       	lpm	r24, Z+
    164e:	93 ff       	sbrs	r25, 3
    1650:	81 91       	ld	r24, Z+
    1652:	7f 01       	movw	r14, r30
    1654:	88 23       	and	r24, r24
    1656:	09 f4       	brne	.+2      	; 0x165a <vfprintf+0x3a>
    1658:	ba c1       	rjmp	.+884    	; 0x19ce <vfprintf+0x3ae>
    165a:	85 32       	cpi	r24, 0x25	; 37
    165c:	39 f4       	brne	.+14     	; 0x166c <vfprintf+0x4c>
    165e:	93 fd       	sbrc	r25, 3
    1660:	85 91       	lpm	r24, Z+
    1662:	93 ff       	sbrs	r25, 3
    1664:	81 91       	ld	r24, Z+
    1666:	7f 01       	movw	r14, r30
    1668:	85 32       	cpi	r24, 0x25	; 37
    166a:	29 f4       	brne	.+10     	; 0x1676 <vfprintf+0x56>
    166c:	b6 01       	movw	r22, r12
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    1674:	e7 cf       	rjmp	.-50     	; 0x1644 <vfprintf+0x24>
    1676:	91 2c       	mov	r9, r1
    1678:	21 2c       	mov	r2, r1
    167a:	31 2c       	mov	r3, r1
    167c:	ff e1       	ldi	r31, 0x1F	; 31
    167e:	f3 15       	cp	r31, r3
    1680:	d8 f0       	brcs	.+54     	; 0x16b8 <vfprintf+0x98>
    1682:	8b 32       	cpi	r24, 0x2B	; 43
    1684:	79 f0       	breq	.+30     	; 0x16a4 <vfprintf+0x84>
    1686:	38 f4       	brcc	.+14     	; 0x1696 <vfprintf+0x76>
    1688:	80 32       	cpi	r24, 0x20	; 32
    168a:	79 f0       	breq	.+30     	; 0x16aa <vfprintf+0x8a>
    168c:	83 32       	cpi	r24, 0x23	; 35
    168e:	a1 f4       	brne	.+40     	; 0x16b8 <vfprintf+0x98>
    1690:	23 2d       	mov	r18, r3
    1692:	20 61       	ori	r18, 0x10	; 16
    1694:	1d c0       	rjmp	.+58     	; 0x16d0 <vfprintf+0xb0>
    1696:	8d 32       	cpi	r24, 0x2D	; 45
    1698:	61 f0       	breq	.+24     	; 0x16b2 <vfprintf+0x92>
    169a:	80 33       	cpi	r24, 0x30	; 48
    169c:	69 f4       	brne	.+26     	; 0x16b8 <vfprintf+0x98>
    169e:	23 2d       	mov	r18, r3
    16a0:	21 60       	ori	r18, 0x01	; 1
    16a2:	16 c0       	rjmp	.+44     	; 0x16d0 <vfprintf+0xb0>
    16a4:	83 2d       	mov	r24, r3
    16a6:	82 60       	ori	r24, 0x02	; 2
    16a8:	38 2e       	mov	r3, r24
    16aa:	e3 2d       	mov	r30, r3
    16ac:	e4 60       	ori	r30, 0x04	; 4
    16ae:	3e 2e       	mov	r3, r30
    16b0:	2a c0       	rjmp	.+84     	; 0x1706 <vfprintf+0xe6>
    16b2:	f3 2d       	mov	r31, r3
    16b4:	f8 60       	ori	r31, 0x08	; 8
    16b6:	1d c0       	rjmp	.+58     	; 0x16f2 <vfprintf+0xd2>
    16b8:	37 fc       	sbrc	r3, 7
    16ba:	2d c0       	rjmp	.+90     	; 0x1716 <vfprintf+0xf6>
    16bc:	20 ed       	ldi	r18, 0xD0	; 208
    16be:	28 0f       	add	r18, r24
    16c0:	2a 30       	cpi	r18, 0x0A	; 10
    16c2:	40 f0       	brcs	.+16     	; 0x16d4 <vfprintf+0xb4>
    16c4:	8e 32       	cpi	r24, 0x2E	; 46
    16c6:	b9 f4       	brne	.+46     	; 0x16f6 <vfprintf+0xd6>
    16c8:	36 fc       	sbrc	r3, 6
    16ca:	81 c1       	rjmp	.+770    	; 0x19ce <vfprintf+0x3ae>
    16cc:	23 2d       	mov	r18, r3
    16ce:	20 64       	ori	r18, 0x40	; 64
    16d0:	32 2e       	mov	r3, r18
    16d2:	19 c0       	rjmp	.+50     	; 0x1706 <vfprintf+0xe6>
    16d4:	36 fe       	sbrs	r3, 6
    16d6:	06 c0       	rjmp	.+12     	; 0x16e4 <vfprintf+0xc4>
    16d8:	8a e0       	ldi	r24, 0x0A	; 10
    16da:	98 9e       	mul	r9, r24
    16dc:	20 0d       	add	r18, r0
    16de:	11 24       	eor	r1, r1
    16e0:	92 2e       	mov	r9, r18
    16e2:	11 c0       	rjmp	.+34     	; 0x1706 <vfprintf+0xe6>
    16e4:	ea e0       	ldi	r30, 0x0A	; 10
    16e6:	2e 9e       	mul	r2, r30
    16e8:	20 0d       	add	r18, r0
    16ea:	11 24       	eor	r1, r1
    16ec:	22 2e       	mov	r2, r18
    16ee:	f3 2d       	mov	r31, r3
    16f0:	f0 62       	ori	r31, 0x20	; 32
    16f2:	3f 2e       	mov	r3, r31
    16f4:	08 c0       	rjmp	.+16     	; 0x1706 <vfprintf+0xe6>
    16f6:	8c 36       	cpi	r24, 0x6C	; 108
    16f8:	21 f4       	brne	.+8      	; 0x1702 <vfprintf+0xe2>
    16fa:	83 2d       	mov	r24, r3
    16fc:	80 68       	ori	r24, 0x80	; 128
    16fe:	38 2e       	mov	r3, r24
    1700:	02 c0       	rjmp	.+4      	; 0x1706 <vfprintf+0xe6>
    1702:	88 36       	cpi	r24, 0x68	; 104
    1704:	41 f4       	brne	.+16     	; 0x1716 <vfprintf+0xf6>
    1706:	f7 01       	movw	r30, r14
    1708:	93 fd       	sbrc	r25, 3
    170a:	85 91       	lpm	r24, Z+
    170c:	93 ff       	sbrs	r25, 3
    170e:	81 91       	ld	r24, Z+
    1710:	7f 01       	movw	r14, r30
    1712:	81 11       	cpse	r24, r1
    1714:	b3 cf       	rjmp	.-154    	; 0x167c <vfprintf+0x5c>
    1716:	98 2f       	mov	r25, r24
    1718:	9f 7d       	andi	r25, 0xDF	; 223
    171a:	95 54       	subi	r25, 0x45	; 69
    171c:	93 30       	cpi	r25, 0x03	; 3
    171e:	28 f4       	brcc	.+10     	; 0x172a <vfprintf+0x10a>
    1720:	0c 5f       	subi	r16, 0xFC	; 252
    1722:	1f 4f       	sbci	r17, 0xFF	; 255
    1724:	9f e3       	ldi	r25, 0x3F	; 63
    1726:	99 83       	std	Y+1, r25	; 0x01
    1728:	0d c0       	rjmp	.+26     	; 0x1744 <vfprintf+0x124>
    172a:	83 36       	cpi	r24, 0x63	; 99
    172c:	31 f0       	breq	.+12     	; 0x173a <vfprintf+0x11a>
    172e:	83 37       	cpi	r24, 0x73	; 115
    1730:	71 f0       	breq	.+28     	; 0x174e <vfprintf+0x12e>
    1732:	83 35       	cpi	r24, 0x53	; 83
    1734:	09 f0       	breq	.+2      	; 0x1738 <vfprintf+0x118>
    1736:	59 c0       	rjmp	.+178    	; 0x17ea <vfprintf+0x1ca>
    1738:	21 c0       	rjmp	.+66     	; 0x177c <vfprintf+0x15c>
    173a:	f8 01       	movw	r30, r16
    173c:	80 81       	ld	r24, Z
    173e:	89 83       	std	Y+1, r24	; 0x01
    1740:	0e 5f       	subi	r16, 0xFE	; 254
    1742:	1f 4f       	sbci	r17, 0xFF	; 255
    1744:	88 24       	eor	r8, r8
    1746:	83 94       	inc	r8
    1748:	91 2c       	mov	r9, r1
    174a:	53 01       	movw	r10, r6
    174c:	13 c0       	rjmp	.+38     	; 0x1774 <vfprintf+0x154>
    174e:	28 01       	movw	r4, r16
    1750:	f2 e0       	ldi	r31, 0x02	; 2
    1752:	4f 0e       	add	r4, r31
    1754:	51 1c       	adc	r5, r1
    1756:	f8 01       	movw	r30, r16
    1758:	a0 80       	ld	r10, Z
    175a:	b1 80       	ldd	r11, Z+1	; 0x01
    175c:	36 fe       	sbrs	r3, 6
    175e:	03 c0       	rjmp	.+6      	; 0x1766 <vfprintf+0x146>
    1760:	69 2d       	mov	r22, r9
    1762:	70 e0       	ldi	r23, 0x00	; 0
    1764:	02 c0       	rjmp	.+4      	; 0x176a <vfprintf+0x14a>
    1766:	6f ef       	ldi	r22, 0xFF	; 255
    1768:	7f ef       	ldi	r23, 0xFF	; 255
    176a:	c5 01       	movw	r24, r10
    176c:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <strnlen>
    1770:	4c 01       	movw	r8, r24
    1772:	82 01       	movw	r16, r4
    1774:	f3 2d       	mov	r31, r3
    1776:	ff 77       	andi	r31, 0x7F	; 127
    1778:	3f 2e       	mov	r3, r31
    177a:	16 c0       	rjmp	.+44     	; 0x17a8 <vfprintf+0x188>
    177c:	28 01       	movw	r4, r16
    177e:	22 e0       	ldi	r18, 0x02	; 2
    1780:	42 0e       	add	r4, r18
    1782:	51 1c       	adc	r5, r1
    1784:	f8 01       	movw	r30, r16
    1786:	a0 80       	ld	r10, Z
    1788:	b1 80       	ldd	r11, Z+1	; 0x01
    178a:	36 fe       	sbrs	r3, 6
    178c:	03 c0       	rjmp	.+6      	; 0x1794 <vfprintf+0x174>
    178e:	69 2d       	mov	r22, r9
    1790:	70 e0       	ldi	r23, 0x00	; 0
    1792:	02 c0       	rjmp	.+4      	; 0x1798 <vfprintf+0x178>
    1794:	6f ef       	ldi	r22, 0xFF	; 255
    1796:	7f ef       	ldi	r23, 0xFF	; 255
    1798:	c5 01       	movw	r24, r10
    179a:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <strnlen_P>
    179e:	4c 01       	movw	r8, r24
    17a0:	f3 2d       	mov	r31, r3
    17a2:	f0 68       	ori	r31, 0x80	; 128
    17a4:	3f 2e       	mov	r3, r31
    17a6:	82 01       	movw	r16, r4
    17a8:	33 fc       	sbrc	r3, 3
    17aa:	1b c0       	rjmp	.+54     	; 0x17e2 <vfprintf+0x1c2>
    17ac:	82 2d       	mov	r24, r2
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	88 16       	cp	r8, r24
    17b2:	99 06       	cpc	r9, r25
    17b4:	b0 f4       	brcc	.+44     	; 0x17e2 <vfprintf+0x1c2>
    17b6:	b6 01       	movw	r22, r12
    17b8:	80 e2       	ldi	r24, 0x20	; 32
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    17c0:	2a 94       	dec	r2
    17c2:	f4 cf       	rjmp	.-24     	; 0x17ac <vfprintf+0x18c>
    17c4:	f5 01       	movw	r30, r10
    17c6:	37 fc       	sbrc	r3, 7
    17c8:	85 91       	lpm	r24, Z+
    17ca:	37 fe       	sbrs	r3, 7
    17cc:	81 91       	ld	r24, Z+
    17ce:	5f 01       	movw	r10, r30
    17d0:	b6 01       	movw	r22, r12
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    17d8:	21 10       	cpse	r2, r1
    17da:	2a 94       	dec	r2
    17dc:	21 e0       	ldi	r18, 0x01	; 1
    17de:	82 1a       	sub	r8, r18
    17e0:	91 08       	sbc	r9, r1
    17e2:	81 14       	cp	r8, r1
    17e4:	91 04       	cpc	r9, r1
    17e6:	71 f7       	brne	.-36     	; 0x17c4 <vfprintf+0x1a4>
    17e8:	e8 c0       	rjmp	.+464    	; 0x19ba <vfprintf+0x39a>
    17ea:	84 36       	cpi	r24, 0x64	; 100
    17ec:	11 f0       	breq	.+4      	; 0x17f2 <vfprintf+0x1d2>
    17ee:	89 36       	cpi	r24, 0x69	; 105
    17f0:	41 f5       	brne	.+80     	; 0x1842 <vfprintf+0x222>
    17f2:	f8 01       	movw	r30, r16
    17f4:	37 fe       	sbrs	r3, 7
    17f6:	07 c0       	rjmp	.+14     	; 0x1806 <vfprintf+0x1e6>
    17f8:	60 81       	ld	r22, Z
    17fa:	71 81       	ldd	r23, Z+1	; 0x01
    17fc:	82 81       	ldd	r24, Z+2	; 0x02
    17fe:	93 81       	ldd	r25, Z+3	; 0x03
    1800:	0c 5f       	subi	r16, 0xFC	; 252
    1802:	1f 4f       	sbci	r17, 0xFF	; 255
    1804:	08 c0       	rjmp	.+16     	; 0x1816 <vfprintf+0x1f6>
    1806:	60 81       	ld	r22, Z
    1808:	71 81       	ldd	r23, Z+1	; 0x01
    180a:	07 2e       	mov	r0, r23
    180c:	00 0c       	add	r0, r0
    180e:	88 0b       	sbc	r24, r24
    1810:	99 0b       	sbc	r25, r25
    1812:	0e 5f       	subi	r16, 0xFE	; 254
    1814:	1f 4f       	sbci	r17, 0xFF	; 255
    1816:	f3 2d       	mov	r31, r3
    1818:	ff 76       	andi	r31, 0x6F	; 111
    181a:	3f 2e       	mov	r3, r31
    181c:	97 ff       	sbrs	r25, 7
    181e:	09 c0       	rjmp	.+18     	; 0x1832 <vfprintf+0x212>
    1820:	90 95       	com	r25
    1822:	80 95       	com	r24
    1824:	70 95       	com	r23
    1826:	61 95       	neg	r22
    1828:	7f 4f       	sbci	r23, 0xFF	; 255
    182a:	8f 4f       	sbci	r24, 0xFF	; 255
    182c:	9f 4f       	sbci	r25, 0xFF	; 255
    182e:	f0 68       	ori	r31, 0x80	; 128
    1830:	3f 2e       	mov	r3, r31
    1832:	2a e0       	ldi	r18, 0x0A	; 10
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	a3 01       	movw	r20, r6
    1838:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__ultoa_invert>
    183c:	88 2e       	mov	r8, r24
    183e:	86 18       	sub	r8, r6
    1840:	45 c0       	rjmp	.+138    	; 0x18cc <vfprintf+0x2ac>
    1842:	85 37       	cpi	r24, 0x75	; 117
    1844:	31 f4       	brne	.+12     	; 0x1852 <vfprintf+0x232>
    1846:	23 2d       	mov	r18, r3
    1848:	2f 7e       	andi	r18, 0xEF	; 239
    184a:	b2 2e       	mov	r11, r18
    184c:	2a e0       	ldi	r18, 0x0A	; 10
    184e:	30 e0       	ldi	r19, 0x00	; 0
    1850:	25 c0       	rjmp	.+74     	; 0x189c <vfprintf+0x27c>
    1852:	93 2d       	mov	r25, r3
    1854:	99 7f       	andi	r25, 0xF9	; 249
    1856:	b9 2e       	mov	r11, r25
    1858:	8f 36       	cpi	r24, 0x6F	; 111
    185a:	c1 f0       	breq	.+48     	; 0x188c <vfprintf+0x26c>
    185c:	18 f4       	brcc	.+6      	; 0x1864 <vfprintf+0x244>
    185e:	88 35       	cpi	r24, 0x58	; 88
    1860:	79 f0       	breq	.+30     	; 0x1880 <vfprintf+0x260>
    1862:	b5 c0       	rjmp	.+362    	; 0x19ce <vfprintf+0x3ae>
    1864:	80 37       	cpi	r24, 0x70	; 112
    1866:	19 f0       	breq	.+6      	; 0x186e <vfprintf+0x24e>
    1868:	88 37       	cpi	r24, 0x78	; 120
    186a:	21 f0       	breq	.+8      	; 0x1874 <vfprintf+0x254>
    186c:	b0 c0       	rjmp	.+352    	; 0x19ce <vfprintf+0x3ae>
    186e:	e9 2f       	mov	r30, r25
    1870:	e0 61       	ori	r30, 0x10	; 16
    1872:	be 2e       	mov	r11, r30
    1874:	b4 fe       	sbrs	r11, 4
    1876:	0d c0       	rjmp	.+26     	; 0x1892 <vfprintf+0x272>
    1878:	fb 2d       	mov	r31, r11
    187a:	f4 60       	ori	r31, 0x04	; 4
    187c:	bf 2e       	mov	r11, r31
    187e:	09 c0       	rjmp	.+18     	; 0x1892 <vfprintf+0x272>
    1880:	34 fe       	sbrs	r3, 4
    1882:	0a c0       	rjmp	.+20     	; 0x1898 <vfprintf+0x278>
    1884:	29 2f       	mov	r18, r25
    1886:	26 60       	ori	r18, 0x06	; 6
    1888:	b2 2e       	mov	r11, r18
    188a:	06 c0       	rjmp	.+12     	; 0x1898 <vfprintf+0x278>
    188c:	28 e0       	ldi	r18, 0x08	; 8
    188e:	30 e0       	ldi	r19, 0x00	; 0
    1890:	05 c0       	rjmp	.+10     	; 0x189c <vfprintf+0x27c>
    1892:	20 e1       	ldi	r18, 0x10	; 16
    1894:	30 e0       	ldi	r19, 0x00	; 0
    1896:	02 c0       	rjmp	.+4      	; 0x189c <vfprintf+0x27c>
    1898:	20 e1       	ldi	r18, 0x10	; 16
    189a:	32 e0       	ldi	r19, 0x02	; 2
    189c:	f8 01       	movw	r30, r16
    189e:	b7 fe       	sbrs	r11, 7
    18a0:	07 c0       	rjmp	.+14     	; 0x18b0 <vfprintf+0x290>
    18a2:	60 81       	ld	r22, Z
    18a4:	71 81       	ldd	r23, Z+1	; 0x01
    18a6:	82 81       	ldd	r24, Z+2	; 0x02
    18a8:	93 81       	ldd	r25, Z+3	; 0x03
    18aa:	0c 5f       	subi	r16, 0xFC	; 252
    18ac:	1f 4f       	sbci	r17, 0xFF	; 255
    18ae:	06 c0       	rjmp	.+12     	; 0x18bc <vfprintf+0x29c>
    18b0:	60 81       	ld	r22, Z
    18b2:	71 81       	ldd	r23, Z+1	; 0x01
    18b4:	80 e0       	ldi	r24, 0x00	; 0
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	0e 5f       	subi	r16, 0xFE	; 254
    18ba:	1f 4f       	sbci	r17, 0xFF	; 255
    18bc:	a3 01       	movw	r20, r6
    18be:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <__ultoa_invert>
    18c2:	88 2e       	mov	r8, r24
    18c4:	86 18       	sub	r8, r6
    18c6:	fb 2d       	mov	r31, r11
    18c8:	ff 77       	andi	r31, 0x7F	; 127
    18ca:	3f 2e       	mov	r3, r31
    18cc:	36 fe       	sbrs	r3, 6
    18ce:	0d c0       	rjmp	.+26     	; 0x18ea <vfprintf+0x2ca>
    18d0:	23 2d       	mov	r18, r3
    18d2:	2e 7f       	andi	r18, 0xFE	; 254
    18d4:	a2 2e       	mov	r10, r18
    18d6:	89 14       	cp	r8, r9
    18d8:	58 f4       	brcc	.+22     	; 0x18f0 <vfprintf+0x2d0>
    18da:	34 fe       	sbrs	r3, 4
    18dc:	0b c0       	rjmp	.+22     	; 0x18f4 <vfprintf+0x2d4>
    18de:	32 fc       	sbrc	r3, 2
    18e0:	09 c0       	rjmp	.+18     	; 0x18f4 <vfprintf+0x2d4>
    18e2:	83 2d       	mov	r24, r3
    18e4:	8e 7e       	andi	r24, 0xEE	; 238
    18e6:	a8 2e       	mov	r10, r24
    18e8:	05 c0       	rjmp	.+10     	; 0x18f4 <vfprintf+0x2d4>
    18ea:	b8 2c       	mov	r11, r8
    18ec:	a3 2c       	mov	r10, r3
    18ee:	03 c0       	rjmp	.+6      	; 0x18f6 <vfprintf+0x2d6>
    18f0:	b8 2c       	mov	r11, r8
    18f2:	01 c0       	rjmp	.+2      	; 0x18f6 <vfprintf+0x2d6>
    18f4:	b9 2c       	mov	r11, r9
    18f6:	a4 fe       	sbrs	r10, 4
    18f8:	0f c0       	rjmp	.+30     	; 0x1918 <vfprintf+0x2f8>
    18fa:	fe 01       	movw	r30, r28
    18fc:	e8 0d       	add	r30, r8
    18fe:	f1 1d       	adc	r31, r1
    1900:	80 81       	ld	r24, Z
    1902:	80 33       	cpi	r24, 0x30	; 48
    1904:	21 f4       	brne	.+8      	; 0x190e <vfprintf+0x2ee>
    1906:	9a 2d       	mov	r25, r10
    1908:	99 7e       	andi	r25, 0xE9	; 233
    190a:	a9 2e       	mov	r10, r25
    190c:	09 c0       	rjmp	.+18     	; 0x1920 <vfprintf+0x300>
    190e:	a2 fe       	sbrs	r10, 2
    1910:	06 c0       	rjmp	.+12     	; 0x191e <vfprintf+0x2fe>
    1912:	b3 94       	inc	r11
    1914:	b3 94       	inc	r11
    1916:	04 c0       	rjmp	.+8      	; 0x1920 <vfprintf+0x300>
    1918:	8a 2d       	mov	r24, r10
    191a:	86 78       	andi	r24, 0x86	; 134
    191c:	09 f0       	breq	.+2      	; 0x1920 <vfprintf+0x300>
    191e:	b3 94       	inc	r11
    1920:	a3 fc       	sbrc	r10, 3
    1922:	11 c0       	rjmp	.+34     	; 0x1946 <vfprintf+0x326>
    1924:	a0 fe       	sbrs	r10, 0
    1926:	06 c0       	rjmp	.+12     	; 0x1934 <vfprintf+0x314>
    1928:	b2 14       	cp	r11, r2
    192a:	88 f4       	brcc	.+34     	; 0x194e <vfprintf+0x32e>
    192c:	28 0c       	add	r2, r8
    192e:	92 2c       	mov	r9, r2
    1930:	9b 18       	sub	r9, r11
    1932:	0e c0       	rjmp	.+28     	; 0x1950 <vfprintf+0x330>
    1934:	b2 14       	cp	r11, r2
    1936:	60 f4       	brcc	.+24     	; 0x1950 <vfprintf+0x330>
    1938:	b6 01       	movw	r22, r12
    193a:	80 e2       	ldi	r24, 0x20	; 32
    193c:	90 e0       	ldi	r25, 0x00	; 0
    193e:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    1942:	b3 94       	inc	r11
    1944:	f7 cf       	rjmp	.-18     	; 0x1934 <vfprintf+0x314>
    1946:	b2 14       	cp	r11, r2
    1948:	18 f4       	brcc	.+6      	; 0x1950 <vfprintf+0x330>
    194a:	2b 18       	sub	r2, r11
    194c:	02 c0       	rjmp	.+4      	; 0x1952 <vfprintf+0x332>
    194e:	98 2c       	mov	r9, r8
    1950:	21 2c       	mov	r2, r1
    1952:	a4 fe       	sbrs	r10, 4
    1954:	10 c0       	rjmp	.+32     	; 0x1976 <vfprintf+0x356>
    1956:	b6 01       	movw	r22, r12
    1958:	80 e3       	ldi	r24, 0x30	; 48
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    1960:	a2 fe       	sbrs	r10, 2
    1962:	17 c0       	rjmp	.+46     	; 0x1992 <vfprintf+0x372>
    1964:	a1 fc       	sbrc	r10, 1
    1966:	03 c0       	rjmp	.+6      	; 0x196e <vfprintf+0x34e>
    1968:	88 e7       	ldi	r24, 0x78	; 120
    196a:	90 e0       	ldi	r25, 0x00	; 0
    196c:	02 c0       	rjmp	.+4      	; 0x1972 <vfprintf+0x352>
    196e:	88 e5       	ldi	r24, 0x58	; 88
    1970:	90 e0       	ldi	r25, 0x00	; 0
    1972:	b6 01       	movw	r22, r12
    1974:	0c c0       	rjmp	.+24     	; 0x198e <vfprintf+0x36e>
    1976:	8a 2d       	mov	r24, r10
    1978:	86 78       	andi	r24, 0x86	; 134
    197a:	59 f0       	breq	.+22     	; 0x1992 <vfprintf+0x372>
    197c:	a1 fe       	sbrs	r10, 1
    197e:	02 c0       	rjmp	.+4      	; 0x1984 <vfprintf+0x364>
    1980:	8b e2       	ldi	r24, 0x2B	; 43
    1982:	01 c0       	rjmp	.+2      	; 0x1986 <vfprintf+0x366>
    1984:	80 e2       	ldi	r24, 0x20	; 32
    1986:	a7 fc       	sbrc	r10, 7
    1988:	8d e2       	ldi	r24, 0x2D	; 45
    198a:	b6 01       	movw	r22, r12
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    1992:	89 14       	cp	r8, r9
    1994:	38 f4       	brcc	.+14     	; 0x19a4 <vfprintf+0x384>
    1996:	b6 01       	movw	r22, r12
    1998:	80 e3       	ldi	r24, 0x30	; 48
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    19a0:	9a 94       	dec	r9
    19a2:	f7 cf       	rjmp	.-18     	; 0x1992 <vfprintf+0x372>
    19a4:	8a 94       	dec	r8
    19a6:	f3 01       	movw	r30, r6
    19a8:	e8 0d       	add	r30, r8
    19aa:	f1 1d       	adc	r31, r1
    19ac:	80 81       	ld	r24, Z
    19ae:	b6 01       	movw	r22, r12
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    19b6:	81 10       	cpse	r8, r1
    19b8:	f5 cf       	rjmp	.-22     	; 0x19a4 <vfprintf+0x384>
    19ba:	22 20       	and	r2, r2
    19bc:	09 f4       	brne	.+2      	; 0x19c0 <vfprintf+0x3a0>
    19be:	42 ce       	rjmp	.-892    	; 0x1644 <vfprintf+0x24>
    19c0:	b6 01       	movw	r22, r12
    19c2:	80 e2       	ldi	r24, 0x20	; 32
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <fputc>
    19ca:	2a 94       	dec	r2
    19cc:	f6 cf       	rjmp	.-20     	; 0x19ba <vfprintf+0x39a>
    19ce:	f6 01       	movw	r30, r12
    19d0:	86 81       	ldd	r24, Z+6	; 0x06
    19d2:	97 81       	ldd	r25, Z+7	; 0x07
    19d4:	02 c0       	rjmp	.+4      	; 0x19da <vfprintf+0x3ba>
    19d6:	8f ef       	ldi	r24, 0xFF	; 255
    19d8:	9f ef       	ldi	r25, 0xFF	; 255
    19da:	2b 96       	adiw	r28, 0x0b	; 11
    19dc:	e2 e1       	ldi	r30, 0x12	; 18
    19de:	0c 94 01 0f 	jmp	0x1e02	; 0x1e02 <__epilogue_restores__>

000019e2 <calloc>:
    19e2:	0f 93       	push	r16
    19e4:	1f 93       	push	r17
    19e6:	cf 93       	push	r28
    19e8:	df 93       	push	r29
    19ea:	86 9f       	mul	r24, r22
    19ec:	80 01       	movw	r16, r0
    19ee:	87 9f       	mul	r24, r23
    19f0:	10 0d       	add	r17, r0
    19f2:	96 9f       	mul	r25, r22
    19f4:	10 0d       	add	r17, r0
    19f6:	11 24       	eor	r1, r1
    19f8:	c8 01       	movw	r24, r16
    19fa:	0e 94 0d 0d 	call	0x1a1a	; 0x1a1a <malloc>
    19fe:	ec 01       	movw	r28, r24
    1a00:	00 97       	sbiw	r24, 0x00	; 0
    1a02:	29 f0       	breq	.+10     	; 0x1a0e <calloc+0x2c>
    1a04:	a8 01       	movw	r20, r16
    1a06:	60 e0       	ldi	r22, 0x00	; 0
    1a08:	70 e0       	ldi	r23, 0x00	; 0
    1a0a:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <memset>
    1a0e:	ce 01       	movw	r24, r28
    1a10:	df 91       	pop	r29
    1a12:	cf 91       	pop	r28
    1a14:	1f 91       	pop	r17
    1a16:	0f 91       	pop	r16
    1a18:	08 95       	ret

00001a1a <malloc>:
    1a1a:	0f 93       	push	r16
    1a1c:	1f 93       	push	r17
    1a1e:	cf 93       	push	r28
    1a20:	df 93       	push	r29
    1a22:	82 30       	cpi	r24, 0x02	; 2
    1a24:	91 05       	cpc	r25, r1
    1a26:	10 f4       	brcc	.+4      	; 0x1a2c <malloc+0x12>
    1a28:	82 e0       	ldi	r24, 0x02	; 2
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	e0 91 e9 02 	lds	r30, 0x02E9	; 0x8002e9 <__flp>
    1a30:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <__flp+0x1>
    1a34:	20 e0       	ldi	r18, 0x00	; 0
    1a36:	30 e0       	ldi	r19, 0x00	; 0
    1a38:	a0 e0       	ldi	r26, 0x00	; 0
    1a3a:	b0 e0       	ldi	r27, 0x00	; 0
    1a3c:	30 97       	sbiw	r30, 0x00	; 0
    1a3e:	19 f1       	breq	.+70     	; 0x1a86 <malloc+0x6c>
    1a40:	40 81       	ld	r20, Z
    1a42:	51 81       	ldd	r21, Z+1	; 0x01
    1a44:	02 81       	ldd	r16, Z+2	; 0x02
    1a46:	13 81       	ldd	r17, Z+3	; 0x03
    1a48:	48 17       	cp	r20, r24
    1a4a:	59 07       	cpc	r21, r25
    1a4c:	c8 f0       	brcs	.+50     	; 0x1a80 <malloc+0x66>
    1a4e:	84 17       	cp	r24, r20
    1a50:	95 07       	cpc	r25, r21
    1a52:	69 f4       	brne	.+26     	; 0x1a6e <malloc+0x54>
    1a54:	10 97       	sbiw	r26, 0x00	; 0
    1a56:	31 f0       	breq	.+12     	; 0x1a64 <malloc+0x4a>
    1a58:	12 96       	adiw	r26, 0x02	; 2
    1a5a:	0c 93       	st	X, r16
    1a5c:	12 97       	sbiw	r26, 0x02	; 2
    1a5e:	13 96       	adiw	r26, 0x03	; 3
    1a60:	1c 93       	st	X, r17
    1a62:	27 c0       	rjmp	.+78     	; 0x1ab2 <malloc+0x98>
    1a64:	00 93 e9 02 	sts	0x02E9, r16	; 0x8002e9 <__flp>
    1a68:	10 93 ea 02 	sts	0x02EA, r17	; 0x8002ea <__flp+0x1>
    1a6c:	22 c0       	rjmp	.+68     	; 0x1ab2 <malloc+0x98>
    1a6e:	21 15       	cp	r18, r1
    1a70:	31 05       	cpc	r19, r1
    1a72:	19 f0       	breq	.+6      	; 0x1a7a <malloc+0x60>
    1a74:	42 17       	cp	r20, r18
    1a76:	53 07       	cpc	r21, r19
    1a78:	18 f4       	brcc	.+6      	; 0x1a80 <malloc+0x66>
    1a7a:	9a 01       	movw	r18, r20
    1a7c:	bd 01       	movw	r22, r26
    1a7e:	ef 01       	movw	r28, r30
    1a80:	df 01       	movw	r26, r30
    1a82:	f8 01       	movw	r30, r16
    1a84:	db cf       	rjmp	.-74     	; 0x1a3c <malloc+0x22>
    1a86:	21 15       	cp	r18, r1
    1a88:	31 05       	cpc	r19, r1
    1a8a:	f9 f0       	breq	.+62     	; 0x1aca <malloc+0xb0>
    1a8c:	28 1b       	sub	r18, r24
    1a8e:	39 0b       	sbc	r19, r25
    1a90:	24 30       	cpi	r18, 0x04	; 4
    1a92:	31 05       	cpc	r19, r1
    1a94:	80 f4       	brcc	.+32     	; 0x1ab6 <malloc+0x9c>
    1a96:	8a 81       	ldd	r24, Y+2	; 0x02
    1a98:	9b 81       	ldd	r25, Y+3	; 0x03
    1a9a:	61 15       	cp	r22, r1
    1a9c:	71 05       	cpc	r23, r1
    1a9e:	21 f0       	breq	.+8      	; 0x1aa8 <malloc+0x8e>
    1aa0:	fb 01       	movw	r30, r22
    1aa2:	93 83       	std	Z+3, r25	; 0x03
    1aa4:	82 83       	std	Z+2, r24	; 0x02
    1aa6:	04 c0       	rjmp	.+8      	; 0x1ab0 <malloc+0x96>
    1aa8:	90 93 ea 02 	sts	0x02EA, r25	; 0x8002ea <__flp+0x1>
    1aac:	80 93 e9 02 	sts	0x02E9, r24	; 0x8002e9 <__flp>
    1ab0:	fe 01       	movw	r30, r28
    1ab2:	32 96       	adiw	r30, 0x02	; 2
    1ab4:	44 c0       	rjmp	.+136    	; 0x1b3e <malloc+0x124>
    1ab6:	fe 01       	movw	r30, r28
    1ab8:	e2 0f       	add	r30, r18
    1aba:	f3 1f       	adc	r31, r19
    1abc:	81 93       	st	Z+, r24
    1abe:	91 93       	st	Z+, r25
    1ac0:	22 50       	subi	r18, 0x02	; 2
    1ac2:	31 09       	sbc	r19, r1
    1ac4:	39 83       	std	Y+1, r19	; 0x01
    1ac6:	28 83       	st	Y, r18
    1ac8:	3a c0       	rjmp	.+116    	; 0x1b3e <malloc+0x124>
    1aca:	20 91 e7 02 	lds	r18, 0x02E7	; 0x8002e7 <__brkval>
    1ace:	30 91 e8 02 	lds	r19, 0x02E8	; 0x8002e8 <__brkval+0x1>
    1ad2:	23 2b       	or	r18, r19
    1ad4:	41 f4       	brne	.+16     	; 0x1ae6 <malloc+0xcc>
    1ad6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1ada:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1ade:	30 93 e8 02 	sts	0x02E8, r19	; 0x8002e8 <__brkval+0x1>
    1ae2:	20 93 e7 02 	sts	0x02E7, r18	; 0x8002e7 <__brkval>
    1ae6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1aea:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1aee:	21 15       	cp	r18, r1
    1af0:	31 05       	cpc	r19, r1
    1af2:	41 f4       	brne	.+16     	; 0x1b04 <malloc+0xea>
    1af4:	2d b7       	in	r18, 0x3d	; 61
    1af6:	3e b7       	in	r19, 0x3e	; 62
    1af8:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1afc:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1b00:	24 1b       	sub	r18, r20
    1b02:	35 0b       	sbc	r19, r21
    1b04:	e0 91 e7 02 	lds	r30, 0x02E7	; 0x8002e7 <__brkval>
    1b08:	f0 91 e8 02 	lds	r31, 0x02E8	; 0x8002e8 <__brkval+0x1>
    1b0c:	e2 17       	cp	r30, r18
    1b0e:	f3 07       	cpc	r31, r19
    1b10:	a0 f4       	brcc	.+40     	; 0x1b3a <malloc+0x120>
    1b12:	2e 1b       	sub	r18, r30
    1b14:	3f 0b       	sbc	r19, r31
    1b16:	28 17       	cp	r18, r24
    1b18:	39 07       	cpc	r19, r25
    1b1a:	78 f0       	brcs	.+30     	; 0x1b3a <malloc+0x120>
    1b1c:	ac 01       	movw	r20, r24
    1b1e:	4e 5f       	subi	r20, 0xFE	; 254
    1b20:	5f 4f       	sbci	r21, 0xFF	; 255
    1b22:	24 17       	cp	r18, r20
    1b24:	35 07       	cpc	r19, r21
    1b26:	48 f0       	brcs	.+18     	; 0x1b3a <malloc+0x120>
    1b28:	4e 0f       	add	r20, r30
    1b2a:	5f 1f       	adc	r21, r31
    1b2c:	50 93 e8 02 	sts	0x02E8, r21	; 0x8002e8 <__brkval+0x1>
    1b30:	40 93 e7 02 	sts	0x02E7, r20	; 0x8002e7 <__brkval>
    1b34:	81 93       	st	Z+, r24
    1b36:	91 93       	st	Z+, r25
    1b38:	02 c0       	rjmp	.+4      	; 0x1b3e <malloc+0x124>
    1b3a:	e0 e0       	ldi	r30, 0x00	; 0
    1b3c:	f0 e0       	ldi	r31, 0x00	; 0
    1b3e:	cf 01       	movw	r24, r30
    1b40:	df 91       	pop	r29
    1b42:	cf 91       	pop	r28
    1b44:	1f 91       	pop	r17
    1b46:	0f 91       	pop	r16
    1b48:	08 95       	ret

00001b4a <free>:
    1b4a:	cf 93       	push	r28
    1b4c:	df 93       	push	r29
    1b4e:	00 97       	sbiw	r24, 0x00	; 0
    1b50:	09 f4       	brne	.+2      	; 0x1b54 <free+0xa>
    1b52:	81 c0       	rjmp	.+258    	; 0x1c56 <free+0x10c>
    1b54:	fc 01       	movw	r30, r24
    1b56:	32 97       	sbiw	r30, 0x02	; 2
    1b58:	13 82       	std	Z+3, r1	; 0x03
    1b5a:	12 82       	std	Z+2, r1	; 0x02
    1b5c:	a0 91 e9 02 	lds	r26, 0x02E9	; 0x8002e9 <__flp>
    1b60:	b0 91 ea 02 	lds	r27, 0x02EA	; 0x8002ea <__flp+0x1>
    1b64:	10 97       	sbiw	r26, 0x00	; 0
    1b66:	81 f4       	brne	.+32     	; 0x1b88 <free+0x3e>
    1b68:	20 81       	ld	r18, Z
    1b6a:	31 81       	ldd	r19, Z+1	; 0x01
    1b6c:	82 0f       	add	r24, r18
    1b6e:	93 1f       	adc	r25, r19
    1b70:	20 91 e7 02 	lds	r18, 0x02E7	; 0x8002e7 <__brkval>
    1b74:	30 91 e8 02 	lds	r19, 0x02E8	; 0x8002e8 <__brkval+0x1>
    1b78:	28 17       	cp	r18, r24
    1b7a:	39 07       	cpc	r19, r25
    1b7c:	51 f5       	brne	.+84     	; 0x1bd2 <free+0x88>
    1b7e:	f0 93 e8 02 	sts	0x02E8, r31	; 0x8002e8 <__brkval+0x1>
    1b82:	e0 93 e7 02 	sts	0x02E7, r30	; 0x8002e7 <__brkval>
    1b86:	67 c0       	rjmp	.+206    	; 0x1c56 <free+0x10c>
    1b88:	ed 01       	movw	r28, r26
    1b8a:	20 e0       	ldi	r18, 0x00	; 0
    1b8c:	30 e0       	ldi	r19, 0x00	; 0
    1b8e:	ce 17       	cp	r28, r30
    1b90:	df 07       	cpc	r29, r31
    1b92:	40 f4       	brcc	.+16     	; 0x1ba4 <free+0x5a>
    1b94:	4a 81       	ldd	r20, Y+2	; 0x02
    1b96:	5b 81       	ldd	r21, Y+3	; 0x03
    1b98:	9e 01       	movw	r18, r28
    1b9a:	41 15       	cp	r20, r1
    1b9c:	51 05       	cpc	r21, r1
    1b9e:	f1 f0       	breq	.+60     	; 0x1bdc <free+0x92>
    1ba0:	ea 01       	movw	r28, r20
    1ba2:	f5 cf       	rjmp	.-22     	; 0x1b8e <free+0x44>
    1ba4:	d3 83       	std	Z+3, r29	; 0x03
    1ba6:	c2 83       	std	Z+2, r28	; 0x02
    1ba8:	40 81       	ld	r20, Z
    1baa:	51 81       	ldd	r21, Z+1	; 0x01
    1bac:	84 0f       	add	r24, r20
    1bae:	95 1f       	adc	r25, r21
    1bb0:	c8 17       	cp	r28, r24
    1bb2:	d9 07       	cpc	r29, r25
    1bb4:	59 f4       	brne	.+22     	; 0x1bcc <free+0x82>
    1bb6:	88 81       	ld	r24, Y
    1bb8:	99 81       	ldd	r25, Y+1	; 0x01
    1bba:	84 0f       	add	r24, r20
    1bbc:	95 1f       	adc	r25, r21
    1bbe:	02 96       	adiw	r24, 0x02	; 2
    1bc0:	91 83       	std	Z+1, r25	; 0x01
    1bc2:	80 83       	st	Z, r24
    1bc4:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc6:	9b 81       	ldd	r25, Y+3	; 0x03
    1bc8:	93 83       	std	Z+3, r25	; 0x03
    1bca:	82 83       	std	Z+2, r24	; 0x02
    1bcc:	21 15       	cp	r18, r1
    1bce:	31 05       	cpc	r19, r1
    1bd0:	29 f4       	brne	.+10     	; 0x1bdc <free+0x92>
    1bd2:	f0 93 ea 02 	sts	0x02EA, r31	; 0x8002ea <__flp+0x1>
    1bd6:	e0 93 e9 02 	sts	0x02E9, r30	; 0x8002e9 <__flp>
    1bda:	3d c0       	rjmp	.+122    	; 0x1c56 <free+0x10c>
    1bdc:	e9 01       	movw	r28, r18
    1bde:	fb 83       	std	Y+3, r31	; 0x03
    1be0:	ea 83       	std	Y+2, r30	; 0x02
    1be2:	49 91       	ld	r20, Y+
    1be4:	59 91       	ld	r21, Y+
    1be6:	c4 0f       	add	r28, r20
    1be8:	d5 1f       	adc	r29, r21
    1bea:	ec 17       	cp	r30, r28
    1bec:	fd 07       	cpc	r31, r29
    1bee:	61 f4       	brne	.+24     	; 0x1c08 <free+0xbe>
    1bf0:	80 81       	ld	r24, Z
    1bf2:	91 81       	ldd	r25, Z+1	; 0x01
    1bf4:	84 0f       	add	r24, r20
    1bf6:	95 1f       	adc	r25, r21
    1bf8:	02 96       	adiw	r24, 0x02	; 2
    1bfa:	e9 01       	movw	r28, r18
    1bfc:	99 83       	std	Y+1, r25	; 0x01
    1bfe:	88 83       	st	Y, r24
    1c00:	82 81       	ldd	r24, Z+2	; 0x02
    1c02:	93 81       	ldd	r25, Z+3	; 0x03
    1c04:	9b 83       	std	Y+3, r25	; 0x03
    1c06:	8a 83       	std	Y+2, r24	; 0x02
    1c08:	e0 e0       	ldi	r30, 0x00	; 0
    1c0a:	f0 e0       	ldi	r31, 0x00	; 0
    1c0c:	12 96       	adiw	r26, 0x02	; 2
    1c0e:	8d 91       	ld	r24, X+
    1c10:	9c 91       	ld	r25, X
    1c12:	13 97       	sbiw	r26, 0x03	; 3
    1c14:	00 97       	sbiw	r24, 0x00	; 0
    1c16:	19 f0       	breq	.+6      	; 0x1c1e <free+0xd4>
    1c18:	fd 01       	movw	r30, r26
    1c1a:	dc 01       	movw	r26, r24
    1c1c:	f7 cf       	rjmp	.-18     	; 0x1c0c <free+0xc2>
    1c1e:	8d 91       	ld	r24, X+
    1c20:	9c 91       	ld	r25, X
    1c22:	11 97       	sbiw	r26, 0x01	; 1
    1c24:	9d 01       	movw	r18, r26
    1c26:	2e 5f       	subi	r18, 0xFE	; 254
    1c28:	3f 4f       	sbci	r19, 0xFF	; 255
    1c2a:	82 0f       	add	r24, r18
    1c2c:	93 1f       	adc	r25, r19
    1c2e:	20 91 e7 02 	lds	r18, 0x02E7	; 0x8002e7 <__brkval>
    1c32:	30 91 e8 02 	lds	r19, 0x02E8	; 0x8002e8 <__brkval+0x1>
    1c36:	28 17       	cp	r18, r24
    1c38:	39 07       	cpc	r19, r25
    1c3a:	69 f4       	brne	.+26     	; 0x1c56 <free+0x10c>
    1c3c:	30 97       	sbiw	r30, 0x00	; 0
    1c3e:	29 f4       	brne	.+10     	; 0x1c4a <free+0x100>
    1c40:	10 92 ea 02 	sts	0x02EA, r1	; 0x8002ea <__flp+0x1>
    1c44:	10 92 e9 02 	sts	0x02E9, r1	; 0x8002e9 <__flp>
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <free+0x104>
    1c4a:	13 82       	std	Z+3, r1	; 0x03
    1c4c:	12 82       	std	Z+2, r1	; 0x02
    1c4e:	b0 93 e8 02 	sts	0x02E8, r27	; 0x8002e8 <__brkval+0x1>
    1c52:	a0 93 e7 02 	sts	0x02E7, r26	; 0x8002e7 <__brkval>
    1c56:	df 91       	pop	r29
    1c58:	cf 91       	pop	r28
    1c5a:	08 95       	ret

00001c5c <strnlen_P>:
    1c5c:	fc 01       	movw	r30, r24
    1c5e:	05 90       	lpm	r0, Z+
    1c60:	61 50       	subi	r22, 0x01	; 1
    1c62:	70 40       	sbci	r23, 0x00	; 0
    1c64:	01 10       	cpse	r0, r1
    1c66:	d8 f7       	brcc	.-10     	; 0x1c5e <strnlen_P+0x2>
    1c68:	80 95       	com	r24
    1c6a:	90 95       	com	r25
    1c6c:	8e 0f       	add	r24, r30
    1c6e:	9f 1f       	adc	r25, r31
    1c70:	08 95       	ret

00001c72 <memset>:
    1c72:	dc 01       	movw	r26, r24
    1c74:	01 c0       	rjmp	.+2      	; 0x1c78 <memset+0x6>
    1c76:	6d 93       	st	X+, r22
    1c78:	41 50       	subi	r20, 0x01	; 1
    1c7a:	50 40       	sbci	r21, 0x00	; 0
    1c7c:	e0 f7       	brcc	.-8      	; 0x1c76 <memset+0x4>
    1c7e:	08 95       	ret

00001c80 <strnlen>:
    1c80:	fc 01       	movw	r30, r24
    1c82:	61 50       	subi	r22, 0x01	; 1
    1c84:	70 40       	sbci	r23, 0x00	; 0
    1c86:	01 90       	ld	r0, Z+
    1c88:	01 10       	cpse	r0, r1
    1c8a:	d8 f7       	brcc	.-10     	; 0x1c82 <strnlen+0x2>
    1c8c:	80 95       	com	r24
    1c8e:	90 95       	com	r25
    1c90:	8e 0f       	add	r24, r30
    1c92:	9f 1f       	adc	r25, r31
    1c94:	08 95       	ret

00001c96 <fputc>:
    1c96:	0f 93       	push	r16
    1c98:	1f 93       	push	r17
    1c9a:	cf 93       	push	r28
    1c9c:	df 93       	push	r29
    1c9e:	fb 01       	movw	r30, r22
    1ca0:	23 81       	ldd	r18, Z+3	; 0x03
    1ca2:	21 fd       	sbrc	r18, 1
    1ca4:	03 c0       	rjmp	.+6      	; 0x1cac <fputc+0x16>
    1ca6:	8f ef       	ldi	r24, 0xFF	; 255
    1ca8:	9f ef       	ldi	r25, 0xFF	; 255
    1caa:	2c c0       	rjmp	.+88     	; 0x1d04 <fputc+0x6e>
    1cac:	22 ff       	sbrs	r18, 2
    1cae:	16 c0       	rjmp	.+44     	; 0x1cdc <fputc+0x46>
    1cb0:	46 81       	ldd	r20, Z+6	; 0x06
    1cb2:	57 81       	ldd	r21, Z+7	; 0x07
    1cb4:	24 81       	ldd	r18, Z+4	; 0x04
    1cb6:	35 81       	ldd	r19, Z+5	; 0x05
    1cb8:	42 17       	cp	r20, r18
    1cba:	53 07       	cpc	r21, r19
    1cbc:	44 f4       	brge	.+16     	; 0x1cce <fputc+0x38>
    1cbe:	a0 81       	ld	r26, Z
    1cc0:	b1 81       	ldd	r27, Z+1	; 0x01
    1cc2:	9d 01       	movw	r18, r26
    1cc4:	2f 5f       	subi	r18, 0xFF	; 255
    1cc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc8:	31 83       	std	Z+1, r19	; 0x01
    1cca:	20 83       	st	Z, r18
    1ccc:	8c 93       	st	X, r24
    1cce:	26 81       	ldd	r18, Z+6	; 0x06
    1cd0:	37 81       	ldd	r19, Z+7	; 0x07
    1cd2:	2f 5f       	subi	r18, 0xFF	; 255
    1cd4:	3f 4f       	sbci	r19, 0xFF	; 255
    1cd6:	37 83       	std	Z+7, r19	; 0x07
    1cd8:	26 83       	std	Z+6, r18	; 0x06
    1cda:	14 c0       	rjmp	.+40     	; 0x1d04 <fputc+0x6e>
    1cdc:	8b 01       	movw	r16, r22
    1cde:	ec 01       	movw	r28, r24
    1ce0:	fb 01       	movw	r30, r22
    1ce2:	00 84       	ldd	r0, Z+8	; 0x08
    1ce4:	f1 85       	ldd	r31, Z+9	; 0x09
    1ce6:	e0 2d       	mov	r30, r0
    1ce8:	09 95       	icall
    1cea:	89 2b       	or	r24, r25
    1cec:	e1 f6       	brne	.-72     	; 0x1ca6 <fputc+0x10>
    1cee:	d8 01       	movw	r26, r16
    1cf0:	16 96       	adiw	r26, 0x06	; 6
    1cf2:	8d 91       	ld	r24, X+
    1cf4:	9c 91       	ld	r25, X
    1cf6:	17 97       	sbiw	r26, 0x07	; 7
    1cf8:	01 96       	adiw	r24, 0x01	; 1
    1cfa:	17 96       	adiw	r26, 0x07	; 7
    1cfc:	9c 93       	st	X, r25
    1cfe:	8e 93       	st	-X, r24
    1d00:	16 97       	sbiw	r26, 0x06	; 6
    1d02:	ce 01       	movw	r24, r28
    1d04:	df 91       	pop	r29
    1d06:	cf 91       	pop	r28
    1d08:	1f 91       	pop	r17
    1d0a:	0f 91       	pop	r16
    1d0c:	08 95       	ret

00001d0e <__ultoa_invert>:
    1d0e:	fa 01       	movw	r30, r20
    1d10:	aa 27       	eor	r26, r26
    1d12:	28 30       	cpi	r18, 0x08	; 8
    1d14:	51 f1       	breq	.+84     	; 0x1d6a <__ultoa_invert+0x5c>
    1d16:	20 31       	cpi	r18, 0x10	; 16
    1d18:	81 f1       	breq	.+96     	; 0x1d7a <__ultoa_invert+0x6c>
    1d1a:	e8 94       	clt
    1d1c:	6f 93       	push	r22
    1d1e:	6e 7f       	andi	r22, 0xFE	; 254
    1d20:	6e 5f       	subi	r22, 0xFE	; 254
    1d22:	7f 4f       	sbci	r23, 0xFF	; 255
    1d24:	8f 4f       	sbci	r24, 0xFF	; 255
    1d26:	9f 4f       	sbci	r25, 0xFF	; 255
    1d28:	af 4f       	sbci	r26, 0xFF	; 255
    1d2a:	b1 e0       	ldi	r27, 0x01	; 1
    1d2c:	3e d0       	rcall	.+124    	; 0x1daa <__ultoa_invert+0x9c>
    1d2e:	b4 e0       	ldi	r27, 0x04	; 4
    1d30:	3c d0       	rcall	.+120    	; 0x1daa <__ultoa_invert+0x9c>
    1d32:	67 0f       	add	r22, r23
    1d34:	78 1f       	adc	r23, r24
    1d36:	89 1f       	adc	r24, r25
    1d38:	9a 1f       	adc	r25, r26
    1d3a:	a1 1d       	adc	r26, r1
    1d3c:	68 0f       	add	r22, r24
    1d3e:	79 1f       	adc	r23, r25
    1d40:	8a 1f       	adc	r24, r26
    1d42:	91 1d       	adc	r25, r1
    1d44:	a1 1d       	adc	r26, r1
    1d46:	6a 0f       	add	r22, r26
    1d48:	71 1d       	adc	r23, r1
    1d4a:	81 1d       	adc	r24, r1
    1d4c:	91 1d       	adc	r25, r1
    1d4e:	a1 1d       	adc	r26, r1
    1d50:	20 d0       	rcall	.+64     	; 0x1d92 <__ultoa_invert+0x84>
    1d52:	09 f4       	brne	.+2      	; 0x1d56 <__ultoa_invert+0x48>
    1d54:	68 94       	set
    1d56:	3f 91       	pop	r19
    1d58:	2a e0       	ldi	r18, 0x0A	; 10
    1d5a:	26 9f       	mul	r18, r22
    1d5c:	11 24       	eor	r1, r1
    1d5e:	30 19       	sub	r19, r0
    1d60:	30 5d       	subi	r19, 0xD0	; 208
    1d62:	31 93       	st	Z+, r19
    1d64:	de f6       	brtc	.-74     	; 0x1d1c <__ultoa_invert+0xe>
    1d66:	cf 01       	movw	r24, r30
    1d68:	08 95       	ret
    1d6a:	46 2f       	mov	r20, r22
    1d6c:	47 70       	andi	r20, 0x07	; 7
    1d6e:	40 5d       	subi	r20, 0xD0	; 208
    1d70:	41 93       	st	Z+, r20
    1d72:	b3 e0       	ldi	r27, 0x03	; 3
    1d74:	0f d0       	rcall	.+30     	; 0x1d94 <__ultoa_invert+0x86>
    1d76:	c9 f7       	brne	.-14     	; 0x1d6a <__ultoa_invert+0x5c>
    1d78:	f6 cf       	rjmp	.-20     	; 0x1d66 <__ultoa_invert+0x58>
    1d7a:	46 2f       	mov	r20, r22
    1d7c:	4f 70       	andi	r20, 0x0F	; 15
    1d7e:	40 5d       	subi	r20, 0xD0	; 208
    1d80:	4a 33       	cpi	r20, 0x3A	; 58
    1d82:	18 f0       	brcs	.+6      	; 0x1d8a <__ultoa_invert+0x7c>
    1d84:	49 5d       	subi	r20, 0xD9	; 217
    1d86:	31 fd       	sbrc	r19, 1
    1d88:	40 52       	subi	r20, 0x20	; 32
    1d8a:	41 93       	st	Z+, r20
    1d8c:	02 d0       	rcall	.+4      	; 0x1d92 <__ultoa_invert+0x84>
    1d8e:	a9 f7       	brne	.-22     	; 0x1d7a <__ultoa_invert+0x6c>
    1d90:	ea cf       	rjmp	.-44     	; 0x1d66 <__ultoa_invert+0x58>
    1d92:	b4 e0       	ldi	r27, 0x04	; 4
    1d94:	a6 95       	lsr	r26
    1d96:	97 95       	ror	r25
    1d98:	87 95       	ror	r24
    1d9a:	77 95       	ror	r23
    1d9c:	67 95       	ror	r22
    1d9e:	ba 95       	dec	r27
    1da0:	c9 f7       	brne	.-14     	; 0x1d94 <__ultoa_invert+0x86>
    1da2:	00 97       	sbiw	r24, 0x00	; 0
    1da4:	61 05       	cpc	r22, r1
    1da6:	71 05       	cpc	r23, r1
    1da8:	08 95       	ret
    1daa:	9b 01       	movw	r18, r22
    1dac:	ac 01       	movw	r20, r24
    1dae:	0a 2e       	mov	r0, r26
    1db0:	06 94       	lsr	r0
    1db2:	57 95       	ror	r21
    1db4:	47 95       	ror	r20
    1db6:	37 95       	ror	r19
    1db8:	27 95       	ror	r18
    1dba:	ba 95       	dec	r27
    1dbc:	c9 f7       	brne	.-14     	; 0x1db0 <__ultoa_invert+0xa2>
    1dbe:	62 0f       	add	r22, r18
    1dc0:	73 1f       	adc	r23, r19
    1dc2:	84 1f       	adc	r24, r20
    1dc4:	95 1f       	adc	r25, r21
    1dc6:	a0 1d       	adc	r26, r0
    1dc8:	08 95       	ret

00001dca <__prologue_saves__>:
    1dca:	2f 92       	push	r2
    1dcc:	3f 92       	push	r3
    1dce:	4f 92       	push	r4
    1dd0:	5f 92       	push	r5
    1dd2:	6f 92       	push	r6
    1dd4:	7f 92       	push	r7
    1dd6:	8f 92       	push	r8
    1dd8:	9f 92       	push	r9
    1dda:	af 92       	push	r10
    1ddc:	bf 92       	push	r11
    1dde:	cf 92       	push	r12
    1de0:	df 92       	push	r13
    1de2:	ef 92       	push	r14
    1de4:	ff 92       	push	r15
    1de6:	0f 93       	push	r16
    1de8:	1f 93       	push	r17
    1dea:	cf 93       	push	r28
    1dec:	df 93       	push	r29
    1dee:	cd b7       	in	r28, 0x3d	; 61
    1df0:	de b7       	in	r29, 0x3e	; 62
    1df2:	ca 1b       	sub	r28, r26
    1df4:	db 0b       	sbc	r29, r27
    1df6:	0f b6       	in	r0, 0x3f	; 63
    1df8:	f8 94       	cli
    1dfa:	de bf       	out	0x3e, r29	; 62
    1dfc:	0f be       	out	0x3f, r0	; 63
    1dfe:	cd bf       	out	0x3d, r28	; 61
    1e00:	09 94       	ijmp

00001e02 <__epilogue_restores__>:
    1e02:	2a 88       	ldd	r2, Y+18	; 0x12
    1e04:	39 88       	ldd	r3, Y+17	; 0x11
    1e06:	48 88       	ldd	r4, Y+16	; 0x10
    1e08:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e0a:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e0c:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e0e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e10:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e12:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e14:	b9 84       	ldd	r11, Y+9	; 0x09
    1e16:	c8 84       	ldd	r12, Y+8	; 0x08
    1e18:	df 80       	ldd	r13, Y+7	; 0x07
    1e1a:	ee 80       	ldd	r14, Y+6	; 0x06
    1e1c:	fd 80       	ldd	r15, Y+5	; 0x05
    1e1e:	0c 81       	ldd	r16, Y+4	; 0x04
    1e20:	1b 81       	ldd	r17, Y+3	; 0x03
    1e22:	aa 81       	ldd	r26, Y+2	; 0x02
    1e24:	b9 81       	ldd	r27, Y+1	; 0x01
    1e26:	ce 0f       	add	r28, r30
    1e28:	d1 1d       	adc	r29, r1
    1e2a:	0f b6       	in	r0, 0x3f	; 63
    1e2c:	f8 94       	cli
    1e2e:	de bf       	out	0x3e, r29	; 62
    1e30:	0f be       	out	0x3f, r0	; 63
    1e32:	cd bf       	out	0x3d, r28	; 61
    1e34:	ed 01       	movw	r28, r26
    1e36:	08 95       	ret

00001e38 <_exit>:
    1e38:	f8 94       	cli

00001e3a <__stop_program>:
    1e3a:	ff cf       	rjmp	.-2      	; 0x1e3a <__stop_program>
