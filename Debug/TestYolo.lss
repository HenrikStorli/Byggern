
TestYolo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e0  00800100  000012be  00001352  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  008001e0  008001e0  00001432  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001432  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001490  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  000014cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000242e  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001109  00000000  00000000  00003b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011dd  00000000  00000000  00004c43  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000588  00000000  00000000  00005e20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000924  00000000  00000000  000063a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001451  00000000  00000000  00006ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  0000811d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 06 02 	jmp	0x40c	; 0x40c <__vector_3>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0xa0>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ee eb       	ldi	r30, 0xBE	; 190
     37c:	f2 e1       	ldi	r31, 0x12	; 18
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a0 3e       	cpi	r26, 0xE0	; 224
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	21 e0       	ldi	r18, 0x01	; 1
     38c:	a0 ee       	ldi	r26, 0xE0	; 224
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a2 3f       	cpi	r26, 0xF2	; 242
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 75 04 	call	0x8ea	; 0x8ea <main>
     39e:	0c 94 5d 09 	jmp	0x12ba	; 0x12ba <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <ADC_calibrate>:
    uint8_t retreived_value = ext_ram1[adrs];
    if (retreived_value != 0b01010101) {
        printf("ADC error, ext_ram1[%4d] = %02X  \n\r", adrs, retreived_value);
    }
    else{
        printf("ADC success, ext_ram1[%4d] = %02X  \n\r", adrs, retreived_value);
     3a6:	e1 e0       	ldi	r30, 0x01	; 1
     3a8:	f4 e1       	ldi	r31, 0x14	; 20
     3aa:	20 e8       	ldi	r18, 0x80	; 128
     3ac:	20 83       	st	Z, r18
     3ae:	26 ef       	ldi	r18, 0xF6	; 246
     3b0:	2a 95       	dec	r18
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <ADC_calibrate+0xa>
     3b4:	20 81       	ld	r18, Z
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	dc 01       	movw	r26, r24
     3ba:	2d 93       	st	X+, r18
     3bc:	3c 93       	st	X, r19
     3be:	21 e8       	ldi	r18, 0x81	; 129
     3c0:	20 83       	st	Z, r18
     3c2:	b6 ef       	ldi	r27, 0xF6	; 246
     3c4:	ba 95       	dec	r27
     3c6:	f1 f7       	brne	.-4      	; 0x3c4 <ADC_calibrate+0x1e>
     3c8:	20 81       	ld	r18, Z
     3ca:	30 e0       	ldi	r19, 0x00	; 0
     3cc:	fc 01       	movw	r30, r24
     3ce:	33 83       	std	Z+3, r19	; 0x03
     3d0:	22 83       	std	Z+2, r18	; 0x02
     3d2:	08 95       	ret

000003d4 <timer_init>:
}


void timer_init(void) {

    DDRB|=(1<<PB0);  /*set OC0 pin as output*/
     3d4:	b8 9a       	sbi	0x17, 0	; 23

    TCCR0 |= (1<<WGM01) | (0<<WGM00);
     3d6:	83 b7       	in	r24, 0x33	; 51
     3d8:	88 60       	ori	r24, 0x08	; 8
     3da:	83 bf       	out	0x33, r24	; 51
    TCCR0 |= (1<<COM00);
     3dc:	83 b7       	in	r24, 0x33	; 51
     3de:	80 61       	ori	r24, 0x10	; 16
     3e0:	83 bf       	out	0x33, r24	; 51
    TCCR0 |= (1<<CS00);
     3e2:	83 b7       	in	r24, 0x33	; 51
     3e4:	81 60       	ori	r24, 0x01	; 1
     3e6:	83 bf       	out	0x33, r24	; 51

    OCR0 = 0b00000001;
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	81 bf       	out	0x31, r24	; 49
     3ec:	08 95       	ret

000003ee <CAN_init>:
volatile int flag = 0;

uint8_t CAN_init(uint8_t mode){
    //Enable interrupt on PIN PE0 (INT2).

    mcp_init(mode);
     3ee:	0e 94 4a 03 	call	0x694	; 0x694 <mcp_init>

    cli();
     3f2:	f8 94       	cli

    EMCUCR &= ~(1<<ISC2);
     3f4:	86 b7       	in	r24, 0x36	; 54
     3f6:	8e 7f       	andi	r24, 0xFE	; 254
     3f8:	86 bf       	out	0x36, r24	; 54

    GICR |= (1<<INT2);
     3fa:	8b b7       	in	r24, 0x3b	; 59
     3fc:	80 62       	ori	r24, 0x20	; 32
     3fe:	8b bf       	out	0x3b, r24	; 59

    sei();
     400:	78 94       	sei

    mcp_write(MCP_CANINTE, 0x01);
     402:	61 e0       	ldi	r22, 0x01	; 1
     404:	8b e2       	ldi	r24, 0x2B	; 43
     406:	0e 94 11 03 	call	0x622	; 0x622 <mcp_write>

}
     40a:	08 95       	ret

0000040c <__vector_3>:

ISR(INT2_vect){
     40c:	1f 92       	push	r1
     40e:	0f 92       	push	r0
     410:	0f b6       	in	r0, 0x3f	; 63
     412:	0f 92       	push	r0
     414:	11 24       	eor	r1, r1
     416:	8f 93       	push	r24
     418:	9f 93       	push	r25
    flag = 1;
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <__data_end+0x1>
     422:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <__data_end>
}
     426:	9f 91       	pop	r25
     428:	8f 91       	pop	r24
     42a:	0f 90       	pop	r0
     42c:	0f be       	out	0x3f, r0	; 63
     42e:	0f 90       	pop	r0
     430:	1f 90       	pop	r1
     432:	18 95       	reti

00000434 <CAN_check_interrupt>:

uint8_t CAN_check_interrupt(){
    if(flag){
     434:	80 91 e0 01 	lds	r24, 0x01E0	; 0x8001e0 <__data_end>
     438:	90 91 e1 01 	lds	r25, 0x01E1	; 0x8001e1 <__data_end+0x1>
     43c:	89 2b       	or	r24, r25
     43e:	31 f0       	breq	.+12     	; 0x44c <CAN_check_interrupt+0x18>
        flag = 0;
     440:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <__data_end+0x1>
     444:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <__data_end>
        return 1;
     448:	81 e0       	ldi	r24, 0x01	; 1
     44a:	08 95       	ret
    }
    
    return 0;
     44c:	80 e0       	ldi	r24, 0x00	; 0
}
     44e:	08 95       	ret

00000450 <CAN_message_transmission>:

uint8_t CAN_message_transmission(CAN_message_t* can_message){
     450:	0f 93       	push	r16
     452:	1f 93       	push	r17
     454:	cf 93       	push	r28
     456:	df 93       	push	r29
     458:	8c 01       	movw	r16, r24

    //Splitting up the identifier into two bytes
    uint8_t identifier_low = (can_message -> identifier) % 8;
     45a:	fc 01       	movw	r30, r24
     45c:	c0 81       	ld	r28, Z
     45e:	d1 81       	ldd	r29, Z+1	; 0x01
    uint8_t identifier_high = (can_message -> identifier) / 8;

    //Writing the identifier
    mcp_write(MCP_TXB0SIDL, identifier_low);
     460:	6c 2f       	mov	r22, r28
     462:	67 70       	andi	r22, 0x07	; 7
     464:	82 e3       	ldi	r24, 0x32	; 50
     466:	0e 94 11 03 	call	0x622	; 0x622 <mcp_write>
    mcp_write(MCP_TXB0SIDH, identifier_high);
     46a:	be 01       	movw	r22, r28
     46c:	76 95       	lsr	r23
     46e:	67 95       	ror	r22
     470:	76 95       	lsr	r23
     472:	67 95       	ror	r22
     474:	76 95       	lsr	r23
     476:	67 95       	ror	r22
     478:	81 e3       	ldi	r24, 0x31	; 49
     47a:	0e 94 11 03 	call	0x622	; 0x622 <mcp_write>

    //Writing the length of the data message
    mcp_write(MCP_TXB0DLC, can_message -> data_length);
     47e:	f8 01       	movw	r30, r16
     480:	62 81       	ldd	r22, Z+2	; 0x02
     482:	85 e3       	ldi	r24, 0x35	; 53
     484:	0e 94 11 03 	call	0x622	; 0x622 <mcp_write>

    //Writing the data Message
    uint8_t data_byte;
    for(uint8_t i = 0; i < (can_message -> data_length); i++){
     488:	f8 01       	movw	r30, r16
     48a:	82 81       	ldd	r24, Z+2	; 0x02
     48c:	88 23       	and	r24, r24
     48e:	71 f0       	breq	.+28     	; 0x4ac <CAN_message_transmission+0x5c>
     490:	c0 e0       	ldi	r28, 0x00	; 0
        data_byte = (can_message -> data)[i];
     492:	f8 01       	movw	r30, r16
     494:	ec 0f       	add	r30, r28
     496:	f1 1d       	adc	r31, r1
        mcp_write(MCP_TXB0D0 + i, data_byte);
     498:	63 81       	ldd	r22, Z+3	; 0x03
     49a:	86 e3       	ldi	r24, 0x36	; 54
     49c:	8c 0f       	add	r24, r28
     49e:	0e 94 11 03 	call	0x622	; 0x622 <mcp_write>
    //Writing the length of the data message
    mcp_write(MCP_TXB0DLC, can_message -> data_length);

    //Writing the data Message
    uint8_t data_byte;
    for(uint8_t i = 0; i < (can_message -> data_length); i++){
     4a2:	cf 5f       	subi	r28, 0xFF	; 255
     4a4:	f8 01       	movw	r30, r16
     4a6:	82 81       	ldd	r24, Z+2	; 0x02
     4a8:	c8 17       	cp	r28, r24
     4aa:	98 f3       	brcs	.-26     	; 0x492 <CAN_message_transmission+0x42>
        data_byte = (can_message -> data)[i];
        mcp_write(MCP_TXB0D0 + i, data_byte);
    }

    mcp_request_to_send(0); // Litt usikker
     4ac:	80 e0       	ldi	r24, 0x00	; 0
     4ae:	0e 94 74 03 	call	0x6e8	; 0x6e8 <mcp_request_to_send>
}
     4b2:	df 91       	pop	r29
     4b4:	cf 91       	pop	r28
     4b6:	1f 91       	pop	r17
     4b8:	0f 91       	pop	r16
     4ba:	08 95       	ret

000004bc <CAN_meessage_reception>:

CAN_message_t CAN_meessage_reception(){
     4bc:	9f 92       	push	r9
     4be:	af 92       	push	r10
     4c0:	bf 92       	push	r11
     4c2:	cf 92       	push	r12
     4c4:	df 92       	push	r13
     4c6:	ef 92       	push	r14
     4c8:	ff 92       	push	r15
     4ca:	0f 93       	push	r16
     4cc:	1f 93       	push	r17
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	cd b7       	in	r28, 0x3d	; 61
     4d4:	de b7       	in	r29, 0x3e	; 62
     4d6:	2b 97       	sbiw	r28, 0x0b	; 11
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	f8 94       	cli
     4dc:	de bf       	out	0x3e, r29	; 62
     4de:	0f be       	out	0x3f, r0	; 63
     4e0:	cd bf       	out	0x3d, r28	; 61
     4e2:	5c 01       	movw	r10, r24
    CAN_message_t message;
    uint8_t byte_mask = 0xE0;

    unsigned int identifier_high = mcp_read(MCP_RXB0SIDH);
     4e4:	81 e6       	ldi	r24, 0x61	; 97
     4e6:	0e 94 2c 03 	call	0x658	; 0x658 <mcp_read>
     4ea:	c8 2e       	mov	r12, r24
     4ec:	d1 2c       	mov	r13, r1
    identifier_high = (identifier_high << 8 );
    uint8_t identifier_low = mcp_read(MCP_RXB0SIDL);
     4ee:	82 e6       	ldi	r24, 0x62	; 98
     4f0:	0e 94 2c 03 	call	0x658	; 0x658 <mcp_read>
    identifier_low &= byte_mask;

    message.identifier = identifier_low + identifier_high;
     4f4:	dc 2c       	mov	r13, r12
     4f6:	cc 24       	eor	r12, r12
     4f8:	80 7e       	andi	r24, 0xE0	; 224
     4fa:	c8 0e       	add	r12, r24
     4fc:	d1 1c       	adc	r13, r1

    message.data_length = mcp_read(MCP_RXB0DLC);
     4fe:	85 e6       	ldi	r24, 0x65	; 101
     500:	0e 94 2c 03 	call	0x658	; 0x658 <mcp_read>
     504:	98 2e       	mov	r9, r24

    for(uint8_t i = 0; i < message.data_length; i++){
     506:	88 23       	and	r24, r24
     508:	a1 f0       	breq	.+40     	; 0x532 <__stack+0x33>
     50a:	8e 01       	movw	r16, r28
     50c:	0c 5f       	subi	r16, 0xFC	; 252
     50e:	1f 4f       	sbci	r17, 0xFF	; 255
     510:	8f ef       	ldi	r24, 0xFF	; 255
     512:	89 0d       	add	r24, r9
     514:	9e 01       	movw	r18, r28
     516:	28 0f       	add	r18, r24
     518:	31 1d       	adc	r19, r1
     51a:	c9 01       	movw	r24, r18
     51c:	05 96       	adiw	r24, 0x05	; 5
     51e:	7c 01       	movw	r14, r24
        (message.data)[i] = mcp_read(MCP_RXB0DM +1);
     520:	87 e6       	ldi	r24, 0x67	; 103
     522:	0e 94 2c 03 	call	0x658	; 0x658 <mcp_read>
     526:	f8 01       	movw	r30, r16
     528:	81 93       	st	Z+, r24
     52a:	8f 01       	movw	r16, r30

    message.identifier = identifier_low + identifier_high;

    message.data_length = mcp_read(MCP_RXB0DLC);

    for(uint8_t i = 0; i < message.data_length; i++){
     52c:	ee 15       	cp	r30, r14
     52e:	ff 05       	cpc	r31, r15
     530:	b9 f7       	brne	.-18     	; 0x520 <__stack+0x21>
        (message.data)[i] = mcp_read(MCP_RXB0DM +1);
    }

    return message;
     532:	da 82       	std	Y+2, r13	; 0x02
     534:	c9 82       	std	Y+1, r12	; 0x01
     536:	9b 82       	std	Y+3, r9	; 0x03
     538:	8b e0       	ldi	r24, 0x0B	; 11
     53a:	fe 01       	movw	r30, r28
     53c:	31 96       	adiw	r30, 0x01	; 1
     53e:	d5 01       	movw	r26, r10
     540:	01 90       	ld	r0, Z+
     542:	0d 92       	st	X+, r0
     544:	8a 95       	dec	r24
     546:	e1 f7       	brne	.-8      	; 0x540 <__stack+0x41>
}
     548:	c5 01       	movw	r24, r10
     54a:	2b 96       	adiw	r28, 0x0b	; 11
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	de bf       	out	0x3e, r29	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	cd bf       	out	0x3d, r28	; 61
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	1f 91       	pop	r17
     55c:	0f 91       	pop	r16
     55e:	ff 90       	pop	r15
     560:	ef 90       	pop	r14
     562:	df 90       	pop	r13
     564:	cf 90       	pop	r12
     566:	bf 90       	pop	r11
     568:	af 90       	pop	r10
     56a:	9f 90       	pop	r9
     56c:	08 95       	ret

0000056e <CAN_communication_test>:

void CAN_communication_test(){ 
     56e:	cf 93       	push	r28
     570:	df 93       	push	r29
     572:	cd b7       	in	r28, 0x3d	; 61
     574:	de b7       	in	r29, 0x3e	; 62
     576:	66 97       	sbiw	r28, 0x16	; 22
     578:	0f b6       	in	r0, 0x3f	; 63
     57a:	f8 94       	cli
     57c:	de bf       	out	0x3e, r29	; 62
     57e:	0f be       	out	0x3f, r0	; 63
     580:	cd bf       	out	0x3d, r28	; 61
    CAN_message_t message;
    CAN_message_t message_recieve;

    message.identifier = 0xff;
     582:	8f ef       	ldi	r24, 0xFF	; 255
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	9a 83       	std	Y+2, r25	; 0x02
     588:	89 83       	std	Y+1, r24	; 0x01
    message.data_length = 2;
     58a:	82 e0       	ldi	r24, 0x02	; 2
     58c:	8b 83       	std	Y+3, r24	; 0x03
    (message.data)[0] = 0x11;
     58e:	81 e1       	ldi	r24, 0x11	; 17
     590:	8c 83       	std	Y+4, r24	; 0x04
    (message.data)[1] = 0x11;
     592:	8d 83       	std	Y+5, r24	; 0x05

    CAN_message_transmission(&message);
     594:	ce 01       	movw	r24, r28
     596:	01 96       	adiw	r24, 0x01	; 1
     598:	0e 94 28 02 	call	0x450	; 0x450 <CAN_message_transmission>

    if(CAN_check_interrupt()){
     59c:	0e 94 1a 02 	call	0x434	; 0x434 <CAN_check_interrupt>
     5a0:	88 23       	and	r24, r24
     5a2:	61 f1       	breq	.+88     	; 0x5fc <CAN_communication_test+0x8e>
        printf("Interrupt fungerer\n\r");
     5a4:	8a e0       	ldi	r24, 0x0A	; 10
     5a6:	91 e0       	ldi	r25, 0x01	; 1
     5a8:	9f 93       	push	r25
     5aa:	8f 93       	push	r24
     5ac:	0e 94 0b 05 	call	0xa16	; 0xa16 <printf>
        message_recieve = CAN_meessage_reception();
     5b0:	ce 01       	movw	r24, r28
     5b2:	0c 96       	adiw	r24, 0x0c	; 12
     5b4:	0e 94 5e 02 	call	0x4bc	; 0x4bc <CAN_meessage_reception>
        printf("DATAEN er: %d\n\r",message_recieve.data[0]);
     5b8:	8f 85       	ldd	r24, Y+15	; 0x0f
     5ba:	1f 92       	push	r1
     5bc:	8f 93       	push	r24
     5be:	8f e1       	ldi	r24, 0x1F	; 31
     5c0:	91 e0       	ldi	r25, 0x01	; 1
     5c2:	9f 93       	push	r25
     5c4:	8f 93       	push	r24
     5c6:	0e 94 0b 05 	call	0xa16	; 0xa16 <printf>
        printf("identifier : %d \r\n", message.identifier); 
     5ca:	8a 81       	ldd	r24, Y+2	; 0x02
     5cc:	8f 93       	push	r24
     5ce:	89 81       	ldd	r24, Y+1	; 0x01
     5d0:	8f 93       	push	r24
     5d2:	8f e2       	ldi	r24, 0x2F	; 47
     5d4:	91 e0       	ldi	r25, 0x01	; 1
     5d6:	9f 93       	push	r25
     5d8:	8f 93       	push	r24
     5da:	0e 94 0b 05 	call	0xa16	; 0xa16 <printf>
        printf("data length : %d \r\n", message.data_length);
     5de:	8b 81       	ldd	r24, Y+3	; 0x03
     5e0:	1f 92       	push	r1
     5e2:	8f 93       	push	r24
     5e4:	82 e4       	ldi	r24, 0x42	; 66
     5e6:	91 e0       	ldi	r25, 0x01	; 1
     5e8:	9f 93       	push	r25
     5ea:	8f 93       	push	r24
     5ec:	0e 94 0b 05 	call	0xa16	; 0xa16 <printf>
     5f0:	0f b6       	in	r0, 0x3f	; 63
     5f2:	f8 94       	cli
     5f4:	de bf       	out	0x3e, r29	; 62
     5f6:	0f be       	out	0x3f, r0	; 63
     5f8:	cd bf       	out	0x3d, r28	; 61
     5fa:	04 c0       	rjmp	.+8      	; 0x604 <CAN_communication_test+0x96>
    }
    else{
        printf("IKKE Interrupt \r\n");
     5fc:	86 e5       	ldi	r24, 0x56	; 86
     5fe:	91 e0       	ldi	r25, 0x01	; 1
     600:	0e 94 21 05 	call	0xa42	; 0xa42 <puts>

    }
}
     604:	66 96       	adiw	r28, 0x16	; 22
     606:	0f b6       	in	r0, 0x3f	; 63
     608:	f8 94       	cli
     60a:	de bf       	out	0x3e, r29	; 62
     60c:	0f be       	out	0x3f, r0	; 63
     60e:	cd bf       	out	0x3d, r28	; 61
     610:	df 91       	pop	r29
     612:	cf 91       	pop	r28
     614:	08 95       	ret

00000616 <spi_master_CS>:
    status_value = spi_read();

    spi_master_CS(1);

    return status_value;
}
     616:	81 11       	cpse	r24, r1
     618:	02 c0       	rjmp	.+4      	; 0x61e <spi_master_CS+0x8>
     61a:	c4 98       	cbi	0x18, 4	; 24
     61c:	08 95       	ret
     61e:	c4 9a       	sbi	0x18, 4	; 24
     620:	08 95       	ret

00000622 <mcp_write>:
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	d8 2f       	mov	r29, r24
     628:	c6 2f       	mov	r28, r22
     62a:	80 e0       	ldi	r24, 0x00	; 0
     62c:	0e 94 0b 03 	call	0x616	; 0x616 <spi_master_CS>
     630:	82 e0       	ldi	r24, 0x02	; 2
     632:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
     636:	8d 2f       	mov	r24, r29
     638:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
     63c:	8c 2f       	mov	r24, r28
     63e:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	0e 94 0b 03 	call	0x616	; 0x616 <spi_master_CS>
     648:	df 91       	pop	r29
     64a:	cf 91       	pop	r28
     64c:	08 95       	ret

0000064e <mcp_set_mode>:
     64e:	68 2f       	mov	r22, r24
     650:	8f e0       	ldi	r24, 0x0F	; 15
     652:	0e 94 11 03 	call	0x622	; 0x622 <mcp_write>
     656:	08 95       	ret

00000658 <mcp_read>:
     658:	cf 93       	push	r28
     65a:	c8 2f       	mov	r28, r24
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	0e 94 0b 03 	call	0x616	; 0x616 <spi_master_CS>
     662:	83 e0       	ldi	r24, 0x03	; 3
     664:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
     668:	8c 2f       	mov	r24, r28
     66a:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
     66e:	0e 94 9d 04 	call	0x93a	; 0x93a <spi_read>
     672:	c8 2f       	mov	r28, r24
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	0e 94 0b 03 	call	0x616	; 0x616 <spi_master_CS>
     67a:	8c 2f       	mov	r24, r28
     67c:	cf 91       	pop	r28
     67e:	08 95       	ret

00000680 <mcp_reset>:
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	0e 94 0b 03 	call	0x616	; 0x616 <spi_master_CS>
     686:	80 ec       	ldi	r24, 0xC0	; 192
     688:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
     68c:	81 e0       	ldi	r24, 0x01	; 1
     68e:	0e 94 0b 03 	call	0x616	; 0x616 <spi_master_CS>
     692:	08 95       	ret

00000694 <mcp_init>:
     694:	cf 93       	push	r28
     696:	c8 2f       	mov	r28, r24
     698:	0e 94 a2 04 	call	0x944	; 0x944 <spi_init>
     69c:	0e 94 40 03 	call	0x680	; 0x680 <mcp_reset>
     6a0:	8f ef       	ldi	r24, 0xFF	; 255
     6a2:	9f e8       	ldi	r25, 0x8F	; 143
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <mcp_init+0x10>
     6a8:	00 c0       	rjmp	.+0      	; 0x6aa <mcp_init+0x16>
     6aa:	00 00       	nop
     6ac:	8e e0       	ldi	r24, 0x0E	; 14
     6ae:	0e 94 2c 03 	call	0x658	; 0x658 <mcp_read>
     6b2:	80 7e       	andi	r24, 0xE0	; 224
     6b4:	80 38       	cpi	r24, 0x80	; 128
     6b6:	31 f0       	breq	.+12     	; 0x6c4 <mcp_init+0x30>
     6b8:	87 e6       	ldi	r24, 0x67	; 103
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	0e 94 21 05 	call	0xa42	; 0xa42 <puts>
     6c0:	81 e0       	ldi	r24, 0x01	; 1
     6c2:	10 c0       	rjmp	.+32     	; 0x6e4 <mcp_init+0x50>
     6c4:	8c 2f       	mov	r24, r28
     6c6:	0e 94 27 03 	call	0x64e	; 0x64e <mcp_set_mode>
     6ca:	8e e0       	ldi	r24, 0x0E	; 14
     6cc:	0e 94 2c 03 	call	0x658	; 0x658 <mcp_read>
     6d0:	80 7e       	andi	r24, 0xE0	; 224
     6d2:	8c 17       	cp	r24, r28
     6d4:	31 f0       	breq	.+12     	; 0x6e2 <mcp_init+0x4e>
     6d6:	88 e9       	ldi	r24, 0x98	; 152
     6d8:	91 e0       	ldi	r25, 0x01	; 1
     6da:	0e 94 21 05 	call	0xa42	; 0xa42 <puts>
     6de:	81 e0       	ldi	r24, 0x01	; 1
     6e0:	01 c0       	rjmp	.+2      	; 0x6e4 <mcp_init+0x50>
     6e2:	80 e0       	ldi	r24, 0x00	; 0
     6e4:	cf 91       	pop	r28
     6e6:	08 95       	ret

000006e8 <mcp_request_to_send>:

void mcp_request_to_send(uint8_t buffer){
     6e8:	cf 93       	push	r28
     6ea:	c8 2f       	mov	r28, r24
    spi_master_CS(0);
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	0e 94 0b 03 	call	0x616	; 0x616 <spi_master_CS>

    switch (buffer) {
     6f2:	c1 30       	cpi	r28, 0x01	; 1
     6f4:	41 f0       	breq	.+16     	; 0x706 <mcp_request_to_send+0x1e>
     6f6:	18 f0       	brcs	.+6      	; 0x6fe <mcp_request_to_send+0x16>
     6f8:	c2 30       	cpi	r28, 0x02	; 2
     6fa:	49 f0       	breq	.+18     	; 0x70e <mcp_request_to_send+0x26>
     6fc:	0c c0       	rjmp	.+24     	; 0x716 <mcp_request_to_send+0x2e>
      case 0:
          spi_write(MCP_RTS_TX0);
     6fe:	81 e8       	ldi	r24, 0x81	; 129
     700:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
          break;
     704:	0b c0       	rjmp	.+22     	; 0x71c <mcp_request_to_send+0x34>
      case 1:
          spi_write(MCP_RTS_TX1);
     706:	82 e8       	ldi	r24, 0x82	; 130
     708:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
          break;
     70c:	07 c0       	rjmp	.+14     	; 0x71c <mcp_request_to_send+0x34>
      case 2:
          spi_write(MCP_RTS_TX2);
     70e:	84 e8       	ldi	r24, 0x84	; 132
     710:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
          break;
     714:	03 c0       	rjmp	.+6      	; 0x71c <mcp_request_to_send+0x34>
      default:
        spi_write(MCP_RTS_ALL);
     716:	87 e8       	ldi	r24, 0x87	; 135
     718:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
    }

    spi_master_CS(1);
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	0e 94 0b 03 	call	0x616	; 0x616 <spi_master_CS>
}
     722:	cf 91       	pop	r28
     724:	08 95       	ret

00000726 <oled_sel_row>:
void write_cmd(uint8_t cmd){
    oled_write_cmd[0] = cmd;      // @SRAM location
}

void oled_sel_row(uint8_t page){
    oled_position.row = page;
     726:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <oled_position>
    page = page % 8;
    write_cmd(0xB0 + page);
     72a:	87 70       	andi	r24, 0x07	; 7
     72c:	80 55       	subi	r24, 0x50	; 80
void write_data(uint8_t data){
    oled_write_data[0] = data;      // @SRAM location
}

void write_cmd(uint8_t cmd){
    oled_write_cmd[0] = cmd;      // @SRAM location
     72e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     732:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     736:	80 83       	st	Z, r24
     738:	08 95       	ret

0000073a <oled_sel_col>:
    oled_position.row = page;
    page = page % 8;
    write_cmd(0xB0 + page);
}
void oled_sel_col(uint8_t col){
    oled_position.col = col;
     73a:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <oled_position+0x1>
    uint8_t numLow = col % 16;
     73e:	98 2f       	mov	r25, r24
     740:	9f 70       	andi	r25, 0x0F	; 15
void write_data(uint8_t data){
    oled_write_data[0] = data;      // @SRAM location
}

void write_cmd(uint8_t cmd){
    oled_write_cmd[0] = cmd;      // @SRAM location
     742:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     746:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     74a:	90 83       	st	Z, r25
    oled_position.col = col;
    uint8_t numLow = col % 16;
	uint8_t numHigh = col / 16;

	write_cmd(numLow);
	write_cmd(16 + numHigh);
     74c:	82 95       	swap	r24
     74e:	8f 70       	andi	r24, 0x0F	; 15
     750:	80 5f       	subi	r24, 0xF0	; 240
void write_data(uint8_t data){
    oled_write_data[0] = data;      // @SRAM location
}

void write_cmd(uint8_t cmd){
    oled_write_cmd[0] = cmd;      // @SRAM location
     752:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     756:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     75a:	80 83       	st	Z, r24
     75c:	08 95       	ret

0000075e <oled_line_down>:
}
void oled_home(void){
     oled_pos_set(0,0);
}
void oled_line_down(uint8_t lineNR){
    write_cmd(0xB0 + lineNR);
     75e:	80 55       	subi	r24, 0x50	; 80
void write_data(uint8_t data){
    oled_write_data[0] = data;      // @SRAM location
}

void write_cmd(uint8_t cmd){
    oled_write_cmd[0] = cmd;      // @SRAM location
     760:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     764:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     768:	80 83       	st	Z, r24
     76a:	08 95       	ret

0000076c <oled_pos_set>:
   }
    oled_home();
}


void oled_pos_set(uint8_t row, uint8_t col){
     76c:	cf 93       	push	r28
     76e:	c6 2f       	mov	r28, r22
    oled_sel_row(row);
     770:	0e 94 93 03 	call	0x726	; 0x726 <oled_sel_row>
    oled_sel_col(col);
     774:	8c 2f       	mov	r24, r28
     776:	0e 94 9d 03 	call	0x73a	; 0x73a <oled_sel_col>
}
     77a:	cf 91       	pop	r28
     77c:	08 95       	ret

0000077e <oled_home>:
	write_cmd(numLow);
	write_cmd(16 + numHigh);

}
void oled_home(void){
     oled_pos_set(0,0);
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	80 e0       	ldi	r24, 0x00	; 0
     782:	0e 94 b6 03 	call	0x76c	; 0x76c <oled_pos_set>
     786:	08 95       	ret

00000788 <oled_clear>:
}
void oled_line_down(uint8_t lineNR){
    write_cmd(0xB0 + lineNR);
}
void oled_clear(void){
     788:	1f 93       	push	r17
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
   for(uint8_t i = 0; i < 8; i++){      // page select
     78e:	10 e0       	ldi	r17, 0x00	; 0
     790:	c8 e7       	ldi	r28, 0x78	; 120
     792:	d0 e0       	ldi	r29, 0x00	; 0
        oled_line_down(i);
     794:	81 2f       	mov	r24, r17
     796:	0e 94 af 03 	call	0x75e	; 0x75e <oled_line_down>
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	0d c0       	rjmp	.+26     	; 0x7b8 <oled_clear+0x30>
        for(uint8_t j = 0; j < 128; j++){
                for(uint8_t k = 0; k < 8; k++){
                write_data(pgm_read_byte( &(font8[0][k] ) ) );   // gets blank spaces from font.h //
     79e:	84 91       	lpm	r24, Z
    oled_clear();
    oled_home();
}

void write_data(uint8_t data){
    oled_write_data[0] = data;      // @SRAM location
     7a0:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <oled_write_data>
     7a4:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <oled_write_data+0x1>
     7a8:	8c 93       	st	X, r24
     7aa:	31 96       	adiw	r30, 0x01	; 1
}
void oled_clear(void){
   for(uint8_t i = 0; i < 8; i++){      // page select
        oled_line_down(i);
        for(uint8_t j = 0; j < 128; j++){
                for(uint8_t k = 0; k < 8; k++){
     7ac:	ec 17       	cp	r30, r28
     7ae:	fd 07       	cpc	r31, r29
     7b0:	b1 f7       	brne	.-20     	; 0x79e <oled_clear+0x16>
    write_cmd(0xB0 + lineNR);
}
void oled_clear(void){
   for(uint8_t i = 0; i < 8; i++){      // page select
        oled_line_down(i);
        for(uint8_t j = 0; j < 128; j++){
     7b2:	9f 5f       	subi	r25, 0xFF	; 255
     7b4:	90 38       	cpi	r25, 0x80	; 128
     7b6:	19 f0       	breq	.+6      	; 0x7be <oled_clear+0x36>
     7b8:	e0 e7       	ldi	r30, 0x70	; 112
     7ba:	f0 e0       	ldi	r31, 0x00	; 0
     7bc:	f0 cf       	rjmp	.-32     	; 0x79e <oled_clear+0x16>
}
void oled_line_down(uint8_t lineNR){
    write_cmd(0xB0 + lineNR);
}
void oled_clear(void){
   for(uint8_t i = 0; i < 8; i++){      // page select
     7be:	1f 5f       	subi	r17, 0xFF	; 255
     7c0:	18 30       	cpi	r17, 0x08	; 8
     7c2:	41 f7       	brne	.-48     	; 0x794 <oled_clear+0xc>
               //     ext_oledData[0] = pgm_read_byte( &(font8[0][k] ) );
                }
            //
        }
   }
    oled_home();
     7c4:	0e 94 bf 03 	call	0x77e	; 0x77e <oled_home>
}
     7c8:	df 91       	pop	r29
     7ca:	cf 91       	pop	r28
     7cc:	1f 91       	pop	r17
     7ce:	08 95       	ret

000007d0 <OLED_init>:
void write_data(uint8_t data){
    oled_write_data[0] = data;      // @SRAM location
}

void write_cmd(uint8_t cmd){
    oled_write_cmd[0] = cmd;      // @SRAM location
     7d0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7d4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7d8:	8e ea       	ldi	r24, 0xAE	; 174
     7da:	80 83       	st	Z, r24
     7dc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7e0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7e4:	81 ea       	ldi	r24, 0xA1	; 161
     7e6:	80 83       	st	Z, r24
     7e8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7ec:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7f0:	8a ed       	ldi	r24, 0xDA	; 218
     7f2:	80 83       	st	Z, r24
     7f4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7f8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7fc:	82 e1       	ldi	r24, 0x12	; 18
     7fe:	80 83       	st	Z, r24
     800:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     804:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     808:	88 ec       	ldi	r24, 0xC8	; 200
     80a:	80 83       	st	Z, r24
     80c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     810:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     814:	88 ea       	ldi	r24, 0xA8	; 168
     816:	80 83       	st	Z, r24
     818:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     81c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     820:	8f e3       	ldi	r24, 0x3F	; 63
     822:	80 83       	st	Z, r24
     824:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     828:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     82c:	85 ed       	ldi	r24, 0xD5	; 213
     82e:	80 83       	st	Z, r24
     830:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     834:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     838:	80 e8       	ldi	r24, 0x80	; 128
     83a:	80 83       	st	Z, r24
     83c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     840:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     844:	81 e8       	ldi	r24, 0x81	; 129
     846:	80 83       	st	Z, r24
     848:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     84c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     850:	80 e5       	ldi	r24, 0x50	; 80
     852:	80 83       	st	Z, r24
     854:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     858:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     85c:	89 ed       	ldi	r24, 0xD9	; 217
     85e:	80 83       	st	Z, r24
     860:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     864:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     868:	81 e2       	ldi	r24, 0x21	; 33
     86a:	80 83       	st	Z, r24
     86c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     870:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     874:	80 e2       	ldi	r24, 0x20	; 32
     876:	80 83       	st	Z, r24
     878:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     87c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     880:	82 e0       	ldi	r24, 0x02	; 2
     882:	80 83       	st	Z, r24
     884:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     888:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     88c:	8b ed       	ldi	r24, 0xDB	; 219
     88e:	80 83       	st	Z, r24
     890:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     894:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     898:	80 e3       	ldi	r24, 0x30	; 48
     89a:	80 83       	st	Z, r24
     89c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8a0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8a4:	8d ea       	ldi	r24, 0xAD	; 173
     8a6:	80 83       	st	Z, r24
     8a8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8ac:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8b0:	10 82       	st	Z, r1
     8b2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8b6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8ba:	84 ea       	ldi	r24, 0xA4	; 164
     8bc:	80 83       	st	Z, r24
     8be:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8c2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8c6:	86 ea       	ldi	r24, 0xA6	; 166
     8c8:	80 83       	st	Z, r24
     8ca:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8ce:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8d2:	8f ea       	ldi	r24, 0xAF	; 175
     8d4:	80 83       	st	Z, r24
    write_cmd(0x00);
    write_cmd(0xa4); //out follows RAM content
    write_cmd(0xa6); //set normal display
    write_cmd(0xaf); // display on

    oled_clear();
     8d6:	0e 94 c4 03 	call	0x788	; 0x788 <oled_clear>
    oled_home();
     8da:	0e 94 bf 03 	call	0x77e	; 0x77e <oled_home>
     8de:	08 95       	ret

000008e0 <pos_readSettings>:
        return UP;
    }
}

void pos_readSettings(void){
DDRB &= ~(1 << PB1);
     8e0:	b9 98       	cbi	0x17, 1	; 23
DDRD &= ~(1 << PD4);
     8e2:	8c 98       	cbi	0x11, 4	; 17
DDRD &= ~(1 << PD5);
     8e4:	8d 98       	cbi	0x11, 5	; 17

PORTB |= (1 << PB1); // internal pull up enable
     8e6:	c1 9a       	sbi	0x18, 1	; 24
     8e8:	08 95       	ret

000008ea <main>:


int main(void)
{
    
    SRAM_init();
     8ea:	0e 94 a9 04 	call	0x952	; 0x952 <SRAM_init>
    timer_init();
     8ee:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <timer_init>
    USART_init();
     8f2:	0e 94 b0 04 	call	0x960	; 0x960 <USART_init>
    fdevopen(USART_send, USART_receive);
     8f6:	68 eb       	ldi	r22, 0xB8	; 184
     8f8:	74 e0       	ldi	r23, 0x04	; 4
     8fa:	8c eb       	ldi	r24, 0xBC	; 188
     8fc:	94 e0       	ldi	r25, 0x04	; 4
     8fe:	0e 94 c0 04 	call	0x980	; 0x980 <fdevopen>
    ADC_calibrate(&P_cal);
     902:	82 ee       	ldi	r24, 0xE2	; 226
     904:	91 e0       	ldi	r25, 0x01	; 1
     906:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_calibrate>
    OLED_init();
     90a:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <OLED_init>
    pos_readSettings();
     90e:	0e 94 70 04 	call	0x8e0	; 0x8e0 <pos_readSettings>
    oled_clear();
     912:	0e 94 c4 03 	call	0x788	; 0x788 <oled_clear>

    printf("MAIN kjører");
     916:	83 ed       	ldi	r24, 0xD3	; 211
     918:	91 e0       	ldi	r25, 0x01	; 1
     91a:	9f 93       	push	r25
     91c:	8f 93       	push	r24
     91e:	0e 94 0b 05 	call	0xa16	; 0xa16 <printf>
    //menu();
    //CAN_init(MODE_LOOPBACK);
    //CAN_communication_test();
    //mcp_init(MODE_LOOPBACK);
    //uint8_t r;
    CAN_init(MODE_LOOPBACK);
     922:	80 e4       	ldi	r24, 0x40	; 64
     924:	0e 94 f7 01 	call	0x3ee	; 0x3ee <CAN_init>
     928:	0f 90       	pop	r0
     92a:	0f 90       	pop	r0


    while (1) {
        CAN_communication_test();
     92c:	0e 94 b7 02 	call	0x56e	; 0x56e <CAN_communication_test>
     930:	fd cf       	rjmp	.-6      	; 0x92c <main+0x42>

00000932 <spi_write>:
#include "spi_driver.h"


void spi_write(char data){

    SPDR = data;
     932:	8f b9       	out	0x0f, r24	; 15
    while( !(SPSR & (1<<SPIF)) );
     934:	77 9b       	sbis	0x0e, 7	; 14
     936:	fe cf       	rjmp	.-4      	; 0x934 <spi_write+0x2>

}
     938:	08 95       	ret

0000093a <spi_read>:

char spi_read(void){

    spi_write(DUMMY);
     93a:	86 e5       	ldi	r24, 0x56	; 86
     93c:	0e 94 99 04 	call	0x932	; 0x932 <spi_write>
    //printf("SPI data sent is");
    return SPDR;
     940:	8f b1       	in	r24, 0x0f	; 15
}
     942:	08 95       	ret

00000944 <spi_init>:

void spi_init(void){
    DDR_SPI |= (1 << SCK) | (1 << MOSI) | (1 << SS);
     944:	87 b3       	in	r24, 0x17	; 23
     946:	80 6b       	ori	r24, 0xB0	; 176
     948:	87 bb       	out	0x17, r24	; 23

    SPCR |= (1 << SPE) | (1 << MSTR) |(1<<SPR0);  // Enable SPI and set as master
     94a:	8d b1       	in	r24, 0x0d	; 13
     94c:	81 65       	ori	r24, 0x51	; 81
     94e:	8d b9       	out	0x0d, r24	; 13
     950:	08 95       	ret

00000952 <SRAM_init>:
 */

#include "SRAM_driver.h"

void SRAM_init(void){
    MCUCR |= (1 << SRE);     //external SRAM enable (mcu control register)
     952:	85 b7       	in	r24, 0x35	; 53
     954:	80 68       	ori	r24, 0x80	; 128
     956:	85 bf       	out	0x35, r24	; 53
    SFIOR |= (1 << XMM2);    //excludes memory occupied by JTAG
     958:	80 b7       	in	r24, 0x30	; 48
     95a:	80 62       	ori	r24, 0x20	; 32
     95c:	80 bf       	out	0x30, r24	; 48
     95e:	08 95       	ret

00000960 <USART_init>:
 */
#include "UART_driver.h"


void USART_init(void){
    UBRR0L = (uint8_t)(BAUD_PRESCALER);
     960:	8f e1       	ldi	r24, 0x1F	; 31
     962:	89 b9       	out	0x09, r24	; 9
    UBRR0H = (uint8_t)((uint8_t) BAUD_PRESCALER>>8);
     964:	10 bc       	out	0x20, r1	; 32
    UCSR0B = (1 << RXEN0)|(1 << TXEN0);
     966:	88 e1       	ldi	r24, 0x18	; 24
     968:	8a b9       	out	0x0a, r24	; 10
    UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ00);
     96a:	8e e8       	ldi	r24, 0x8E	; 142
     96c:	80 bd       	out	0x20, r24	; 32
     96e:	08 95       	ret

00000970 <USART_receive>:
}

unsigned char USART_receive(void){
    while(!(UCSR0A & (1 << RXC0)));
     970:	5f 9b       	sbis	0x0b, 7	; 11
     972:	fe cf       	rjmp	.-4      	; 0x970 <USART_receive>
    return UDR0;
     974:	8c b1       	in	r24, 0x0c	; 12
}
     976:	08 95       	ret

00000978 <USART_send>:

void USART_send( unsigned char data){
    while(!(UCSR0A & (1 << UDRE0)));
     978:	5d 9b       	sbis	0x0b, 5	; 11
     97a:	fe cf       	rjmp	.-4      	; 0x978 <USART_send>
    UDR0 = data;
     97c:	8c b9       	out	0x0c, r24	; 12
     97e:	08 95       	ret

00000980 <fdevopen>:
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
     988:	00 97       	sbiw	r24, 0x00	; 0
     98a:	31 f4       	brne	.+12     	; 0x998 <fdevopen+0x18>
     98c:	61 15       	cp	r22, r1
     98e:	71 05       	cpc	r23, r1
     990:	19 f4       	brne	.+6      	; 0x998 <fdevopen+0x18>
     992:	80 e0       	ldi	r24, 0x00	; 0
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	3a c0       	rjmp	.+116    	; 0xa0c <fdevopen+0x8c>
     998:	8b 01       	movw	r16, r22
     99a:	ec 01       	movw	r28, r24
     99c:	6e e0       	ldi	r22, 0x0E	; 14
     99e:	70 e0       	ldi	r23, 0x00	; 0
     9a0:	81 e0       	ldi	r24, 0x01	; 1
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	0e 94 32 07 	call	0xe64	; 0xe64 <calloc>
     9a8:	fc 01       	movw	r30, r24
     9aa:	89 2b       	or	r24, r25
     9ac:	91 f3       	breq	.-28     	; 0x992 <fdevopen+0x12>
     9ae:	80 e8       	ldi	r24, 0x80	; 128
     9b0:	83 83       	std	Z+3, r24	; 0x03
     9b2:	01 15       	cp	r16, r1
     9b4:	11 05       	cpc	r17, r1
     9b6:	71 f0       	breq	.+28     	; 0x9d4 <fdevopen+0x54>
     9b8:	13 87       	std	Z+11, r17	; 0x0b
     9ba:	02 87       	std	Z+10, r16	; 0x0a
     9bc:	81 e8       	ldi	r24, 0x81	; 129
     9be:	83 83       	std	Z+3, r24	; 0x03
     9c0:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <__iob>
     9c4:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <__iob+0x1>
     9c8:	89 2b       	or	r24, r25
     9ca:	21 f4       	brne	.+8      	; 0x9d4 <fdevopen+0x54>
     9cc:	f0 93 e9 01 	sts	0x01E9, r31	; 0x8001e9 <__iob+0x1>
     9d0:	e0 93 e8 01 	sts	0x01E8, r30	; 0x8001e8 <__iob>
     9d4:	20 97       	sbiw	r28, 0x00	; 0
     9d6:	c9 f0       	breq	.+50     	; 0xa0a <fdevopen+0x8a>
     9d8:	d1 87       	std	Z+9, r29	; 0x09
     9da:	c0 87       	std	Z+8, r28	; 0x08
     9dc:	83 81       	ldd	r24, Z+3	; 0x03
     9de:	82 60       	ori	r24, 0x02	; 2
     9e0:	83 83       	std	Z+3, r24	; 0x03
     9e2:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <__iob+0x2>
     9e6:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <__iob+0x3>
     9ea:	89 2b       	or	r24, r25
     9ec:	71 f4       	brne	.+28     	; 0xa0a <fdevopen+0x8a>
     9ee:	f0 93 eb 01 	sts	0x01EB, r31	; 0x8001eb <__iob+0x3>
     9f2:	e0 93 ea 01 	sts	0x01EA, r30	; 0x8001ea <__iob+0x2>
     9f6:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <__iob+0x4>
     9fa:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <__iob+0x5>
     9fe:	89 2b       	or	r24, r25
     a00:	21 f4       	brne	.+8      	; 0xa0a <fdevopen+0x8a>
     a02:	f0 93 ed 01 	sts	0x01ED, r31	; 0x8001ed <__iob+0x5>
     a06:	e0 93 ec 01 	sts	0x01EC, r30	; 0x8001ec <__iob+0x4>
     a0a:	cf 01       	movw	r24, r30
     a0c:	df 91       	pop	r29
     a0e:	cf 91       	pop	r28
     a10:	1f 91       	pop	r17
     a12:	0f 91       	pop	r16
     a14:	08 95       	ret

00000a16 <printf>:
     a16:	a0 e0       	ldi	r26, 0x00	; 0
     a18:	b0 e0       	ldi	r27, 0x00	; 0
     a1a:	e1 e1       	ldi	r30, 0x11	; 17
     a1c:	f5 e0       	ldi	r31, 0x05	; 5
     a1e:	0c 94 36 09 	jmp	0x126c	; 0x126c <__prologue_saves__+0x20>
     a22:	ae 01       	movw	r20, r28
     a24:	4b 5f       	subi	r20, 0xFB	; 251
     a26:	5f 4f       	sbci	r21, 0xFF	; 255
     a28:	fa 01       	movw	r30, r20
     a2a:	61 91       	ld	r22, Z+
     a2c:	71 91       	ld	r23, Z+
     a2e:	af 01       	movw	r20, r30
     a30:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <__iob+0x2>
     a34:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <__iob+0x3>
     a38:	0e 94 51 05 	call	0xaa2	; 0xaa2 <vfprintf>
     a3c:	e2 e0       	ldi	r30, 0x02	; 2
     a3e:	0c 94 52 09 	jmp	0x12a4	; 0x12a4 <__epilogue_restores__+0x20>

00000a42 <puts>:
     a42:	0f 93       	push	r16
     a44:	1f 93       	push	r17
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <__iob+0x2>
     a4e:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <__iob+0x3>
     a52:	23 81       	ldd	r18, Z+3	; 0x03
     a54:	21 ff       	sbrs	r18, 1
     a56:	1b c0       	rjmp	.+54     	; 0xa8e <puts+0x4c>
     a58:	8c 01       	movw	r16, r24
     a5a:	d0 e0       	ldi	r29, 0x00	; 0
     a5c:	c0 e0       	ldi	r28, 0x00	; 0
     a5e:	f8 01       	movw	r30, r16
     a60:	81 91       	ld	r24, Z+
     a62:	8f 01       	movw	r16, r30
     a64:	60 91 ea 01 	lds	r22, 0x01EA	; 0x8001ea <__iob+0x2>
     a68:	70 91 eb 01 	lds	r23, 0x01EB	; 0x8001eb <__iob+0x3>
     a6c:	db 01       	movw	r26, r22
     a6e:	18 96       	adiw	r26, 0x08	; 8
     a70:	ed 91       	ld	r30, X+
     a72:	fc 91       	ld	r31, X
     a74:	19 97       	sbiw	r26, 0x09	; 9
     a76:	88 23       	and	r24, r24
     a78:	31 f0       	breq	.+12     	; 0xa86 <puts+0x44>
     a7a:	09 95       	icall
     a7c:	89 2b       	or	r24, r25
     a7e:	79 f3       	breq	.-34     	; 0xa5e <puts+0x1c>
     a80:	df ef       	ldi	r29, 0xFF	; 255
     a82:	cf ef       	ldi	r28, 0xFF	; 255
     a84:	ec cf       	rjmp	.-40     	; 0xa5e <puts+0x1c>
     a86:	8a e0       	ldi	r24, 0x0A	; 10
     a88:	09 95       	icall
     a8a:	89 2b       	or	r24, r25
     a8c:	19 f0       	breq	.+6      	; 0xa94 <puts+0x52>
     a8e:	8f ef       	ldi	r24, 0xFF	; 255
     a90:	9f ef       	ldi	r25, 0xFF	; 255
     a92:	02 c0       	rjmp	.+4      	; 0xa98 <puts+0x56>
     a94:	8d 2f       	mov	r24, r29
     a96:	9c 2f       	mov	r25, r28
     a98:	df 91       	pop	r29
     a9a:	cf 91       	pop	r28
     a9c:	1f 91       	pop	r17
     a9e:	0f 91       	pop	r16
     aa0:	08 95       	ret

00000aa2 <vfprintf>:
     aa2:	ab e0       	ldi	r26, 0x0B	; 11
     aa4:	b0 e0       	ldi	r27, 0x00	; 0
     aa6:	e7 e5       	ldi	r30, 0x57	; 87
     aa8:	f5 e0       	ldi	r31, 0x05	; 5
     aaa:	0c 94 26 09 	jmp	0x124c	; 0x124c <__prologue_saves__>
     aae:	6c 01       	movw	r12, r24
     ab0:	7b 01       	movw	r14, r22
     ab2:	8a 01       	movw	r16, r20
     ab4:	fc 01       	movw	r30, r24
     ab6:	17 82       	std	Z+7, r1	; 0x07
     ab8:	16 82       	std	Z+6, r1	; 0x06
     aba:	83 81       	ldd	r24, Z+3	; 0x03
     abc:	81 ff       	sbrs	r24, 1
     abe:	cc c1       	rjmp	.+920    	; 0xe58 <vfprintf+0x3b6>
     ac0:	ce 01       	movw	r24, r28
     ac2:	01 96       	adiw	r24, 0x01	; 1
     ac4:	3c 01       	movw	r6, r24
     ac6:	f6 01       	movw	r30, r12
     ac8:	93 81       	ldd	r25, Z+3	; 0x03
     aca:	f7 01       	movw	r30, r14
     acc:	93 fd       	sbrc	r25, 3
     ace:	85 91       	lpm	r24, Z+
     ad0:	93 ff       	sbrs	r25, 3
     ad2:	81 91       	ld	r24, Z+
     ad4:	7f 01       	movw	r14, r30
     ad6:	88 23       	and	r24, r24
     ad8:	09 f4       	brne	.+2      	; 0xadc <vfprintf+0x3a>
     ada:	ba c1       	rjmp	.+884    	; 0xe50 <vfprintf+0x3ae>
     adc:	85 32       	cpi	r24, 0x25	; 37
     ade:	39 f4       	brne	.+14     	; 0xaee <vfprintf+0x4c>
     ae0:	93 fd       	sbrc	r25, 3
     ae2:	85 91       	lpm	r24, Z+
     ae4:	93 ff       	sbrs	r25, 3
     ae6:	81 91       	ld	r24, Z+
     ae8:	7f 01       	movw	r14, r30
     aea:	85 32       	cpi	r24, 0x25	; 37
     aec:	29 f4       	brne	.+10     	; 0xaf8 <vfprintf+0x56>
     aee:	b6 01       	movw	r22, r12
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     af6:	e7 cf       	rjmp	.-50     	; 0xac6 <vfprintf+0x24>
     af8:	91 2c       	mov	r9, r1
     afa:	21 2c       	mov	r2, r1
     afc:	31 2c       	mov	r3, r1
     afe:	ff e1       	ldi	r31, 0x1F	; 31
     b00:	f3 15       	cp	r31, r3
     b02:	d8 f0       	brcs	.+54     	; 0xb3a <vfprintf+0x98>
     b04:	8b 32       	cpi	r24, 0x2B	; 43
     b06:	79 f0       	breq	.+30     	; 0xb26 <vfprintf+0x84>
     b08:	38 f4       	brcc	.+14     	; 0xb18 <vfprintf+0x76>
     b0a:	80 32       	cpi	r24, 0x20	; 32
     b0c:	79 f0       	breq	.+30     	; 0xb2c <vfprintf+0x8a>
     b0e:	83 32       	cpi	r24, 0x23	; 35
     b10:	a1 f4       	brne	.+40     	; 0xb3a <vfprintf+0x98>
     b12:	23 2d       	mov	r18, r3
     b14:	20 61       	ori	r18, 0x10	; 16
     b16:	1d c0       	rjmp	.+58     	; 0xb52 <vfprintf+0xb0>
     b18:	8d 32       	cpi	r24, 0x2D	; 45
     b1a:	61 f0       	breq	.+24     	; 0xb34 <vfprintf+0x92>
     b1c:	80 33       	cpi	r24, 0x30	; 48
     b1e:	69 f4       	brne	.+26     	; 0xb3a <vfprintf+0x98>
     b20:	23 2d       	mov	r18, r3
     b22:	21 60       	ori	r18, 0x01	; 1
     b24:	16 c0       	rjmp	.+44     	; 0xb52 <vfprintf+0xb0>
     b26:	83 2d       	mov	r24, r3
     b28:	82 60       	ori	r24, 0x02	; 2
     b2a:	38 2e       	mov	r3, r24
     b2c:	e3 2d       	mov	r30, r3
     b2e:	e4 60       	ori	r30, 0x04	; 4
     b30:	3e 2e       	mov	r3, r30
     b32:	2a c0       	rjmp	.+84     	; 0xb88 <vfprintf+0xe6>
     b34:	f3 2d       	mov	r31, r3
     b36:	f8 60       	ori	r31, 0x08	; 8
     b38:	1d c0       	rjmp	.+58     	; 0xb74 <vfprintf+0xd2>
     b3a:	37 fc       	sbrc	r3, 7
     b3c:	2d c0       	rjmp	.+90     	; 0xb98 <vfprintf+0xf6>
     b3e:	20 ed       	ldi	r18, 0xD0	; 208
     b40:	28 0f       	add	r18, r24
     b42:	2a 30       	cpi	r18, 0x0A	; 10
     b44:	40 f0       	brcs	.+16     	; 0xb56 <vfprintf+0xb4>
     b46:	8e 32       	cpi	r24, 0x2E	; 46
     b48:	b9 f4       	brne	.+46     	; 0xb78 <vfprintf+0xd6>
     b4a:	36 fc       	sbrc	r3, 6
     b4c:	81 c1       	rjmp	.+770    	; 0xe50 <vfprintf+0x3ae>
     b4e:	23 2d       	mov	r18, r3
     b50:	20 64       	ori	r18, 0x40	; 64
     b52:	32 2e       	mov	r3, r18
     b54:	19 c0       	rjmp	.+50     	; 0xb88 <vfprintf+0xe6>
     b56:	36 fe       	sbrs	r3, 6
     b58:	06 c0       	rjmp	.+12     	; 0xb66 <vfprintf+0xc4>
     b5a:	8a e0       	ldi	r24, 0x0A	; 10
     b5c:	98 9e       	mul	r9, r24
     b5e:	20 0d       	add	r18, r0
     b60:	11 24       	eor	r1, r1
     b62:	92 2e       	mov	r9, r18
     b64:	11 c0       	rjmp	.+34     	; 0xb88 <vfprintf+0xe6>
     b66:	ea e0       	ldi	r30, 0x0A	; 10
     b68:	2e 9e       	mul	r2, r30
     b6a:	20 0d       	add	r18, r0
     b6c:	11 24       	eor	r1, r1
     b6e:	22 2e       	mov	r2, r18
     b70:	f3 2d       	mov	r31, r3
     b72:	f0 62       	ori	r31, 0x20	; 32
     b74:	3f 2e       	mov	r3, r31
     b76:	08 c0       	rjmp	.+16     	; 0xb88 <vfprintf+0xe6>
     b78:	8c 36       	cpi	r24, 0x6C	; 108
     b7a:	21 f4       	brne	.+8      	; 0xb84 <vfprintf+0xe2>
     b7c:	83 2d       	mov	r24, r3
     b7e:	80 68       	ori	r24, 0x80	; 128
     b80:	38 2e       	mov	r3, r24
     b82:	02 c0       	rjmp	.+4      	; 0xb88 <vfprintf+0xe6>
     b84:	88 36       	cpi	r24, 0x68	; 104
     b86:	41 f4       	brne	.+16     	; 0xb98 <vfprintf+0xf6>
     b88:	f7 01       	movw	r30, r14
     b8a:	93 fd       	sbrc	r25, 3
     b8c:	85 91       	lpm	r24, Z+
     b8e:	93 ff       	sbrs	r25, 3
     b90:	81 91       	ld	r24, Z+
     b92:	7f 01       	movw	r14, r30
     b94:	81 11       	cpse	r24, r1
     b96:	b3 cf       	rjmp	.-154    	; 0xafe <vfprintf+0x5c>
     b98:	98 2f       	mov	r25, r24
     b9a:	9f 7d       	andi	r25, 0xDF	; 223
     b9c:	95 54       	subi	r25, 0x45	; 69
     b9e:	93 30       	cpi	r25, 0x03	; 3
     ba0:	28 f4       	brcc	.+10     	; 0xbac <vfprintf+0x10a>
     ba2:	0c 5f       	subi	r16, 0xFC	; 252
     ba4:	1f 4f       	sbci	r17, 0xFF	; 255
     ba6:	9f e3       	ldi	r25, 0x3F	; 63
     ba8:	99 83       	std	Y+1, r25	; 0x01
     baa:	0d c0       	rjmp	.+26     	; 0xbc6 <vfprintf+0x124>
     bac:	83 36       	cpi	r24, 0x63	; 99
     bae:	31 f0       	breq	.+12     	; 0xbbc <vfprintf+0x11a>
     bb0:	83 37       	cpi	r24, 0x73	; 115
     bb2:	71 f0       	breq	.+28     	; 0xbd0 <vfprintf+0x12e>
     bb4:	83 35       	cpi	r24, 0x53	; 83
     bb6:	09 f0       	breq	.+2      	; 0xbba <vfprintf+0x118>
     bb8:	59 c0       	rjmp	.+178    	; 0xc6c <vfprintf+0x1ca>
     bba:	21 c0       	rjmp	.+66     	; 0xbfe <vfprintf+0x15c>
     bbc:	f8 01       	movw	r30, r16
     bbe:	80 81       	ld	r24, Z
     bc0:	89 83       	std	Y+1, r24	; 0x01
     bc2:	0e 5f       	subi	r16, 0xFE	; 254
     bc4:	1f 4f       	sbci	r17, 0xFF	; 255
     bc6:	88 24       	eor	r8, r8
     bc8:	83 94       	inc	r8
     bca:	91 2c       	mov	r9, r1
     bcc:	53 01       	movw	r10, r6
     bce:	13 c0       	rjmp	.+38     	; 0xbf6 <vfprintf+0x154>
     bd0:	28 01       	movw	r4, r16
     bd2:	f2 e0       	ldi	r31, 0x02	; 2
     bd4:	4f 0e       	add	r4, r31
     bd6:	51 1c       	adc	r5, r1
     bd8:	f8 01       	movw	r30, r16
     bda:	a0 80       	ld	r10, Z
     bdc:	b1 80       	ldd	r11, Z+1	; 0x01
     bde:	36 fe       	sbrs	r3, 6
     be0:	03 c0       	rjmp	.+6      	; 0xbe8 <vfprintf+0x146>
     be2:	69 2d       	mov	r22, r9
     be4:	70 e0       	ldi	r23, 0x00	; 0
     be6:	02 c0       	rjmp	.+4      	; 0xbec <vfprintf+0x14a>
     be8:	6f ef       	ldi	r22, 0xFF	; 255
     bea:	7f ef       	ldi	r23, 0xFF	; 255
     bec:	c5 01       	movw	r24, r10
     bee:	0e 94 81 08 	call	0x1102	; 0x1102 <strnlen>
     bf2:	4c 01       	movw	r8, r24
     bf4:	82 01       	movw	r16, r4
     bf6:	f3 2d       	mov	r31, r3
     bf8:	ff 77       	andi	r31, 0x7F	; 127
     bfa:	3f 2e       	mov	r3, r31
     bfc:	16 c0       	rjmp	.+44     	; 0xc2a <vfprintf+0x188>
     bfe:	28 01       	movw	r4, r16
     c00:	22 e0       	ldi	r18, 0x02	; 2
     c02:	42 0e       	add	r4, r18
     c04:	51 1c       	adc	r5, r1
     c06:	f8 01       	movw	r30, r16
     c08:	a0 80       	ld	r10, Z
     c0a:	b1 80       	ldd	r11, Z+1	; 0x01
     c0c:	36 fe       	sbrs	r3, 6
     c0e:	03 c0       	rjmp	.+6      	; 0xc16 <vfprintf+0x174>
     c10:	69 2d       	mov	r22, r9
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	02 c0       	rjmp	.+4      	; 0xc1a <vfprintf+0x178>
     c16:	6f ef       	ldi	r22, 0xFF	; 255
     c18:	7f ef       	ldi	r23, 0xFF	; 255
     c1a:	c5 01       	movw	r24, r10
     c1c:	0e 94 6f 08 	call	0x10de	; 0x10de <strnlen_P>
     c20:	4c 01       	movw	r8, r24
     c22:	f3 2d       	mov	r31, r3
     c24:	f0 68       	ori	r31, 0x80	; 128
     c26:	3f 2e       	mov	r3, r31
     c28:	82 01       	movw	r16, r4
     c2a:	33 fc       	sbrc	r3, 3
     c2c:	1b c0       	rjmp	.+54     	; 0xc64 <vfprintf+0x1c2>
     c2e:	82 2d       	mov	r24, r2
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	88 16       	cp	r8, r24
     c34:	99 06       	cpc	r9, r25
     c36:	b0 f4       	brcc	.+44     	; 0xc64 <vfprintf+0x1c2>
     c38:	b6 01       	movw	r22, r12
     c3a:	80 e2       	ldi	r24, 0x20	; 32
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     c42:	2a 94       	dec	r2
     c44:	f4 cf       	rjmp	.-24     	; 0xc2e <vfprintf+0x18c>
     c46:	f5 01       	movw	r30, r10
     c48:	37 fc       	sbrc	r3, 7
     c4a:	85 91       	lpm	r24, Z+
     c4c:	37 fe       	sbrs	r3, 7
     c4e:	81 91       	ld	r24, Z+
     c50:	5f 01       	movw	r10, r30
     c52:	b6 01       	movw	r22, r12
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     c5a:	21 10       	cpse	r2, r1
     c5c:	2a 94       	dec	r2
     c5e:	21 e0       	ldi	r18, 0x01	; 1
     c60:	82 1a       	sub	r8, r18
     c62:	91 08       	sbc	r9, r1
     c64:	81 14       	cp	r8, r1
     c66:	91 04       	cpc	r9, r1
     c68:	71 f7       	brne	.-36     	; 0xc46 <vfprintf+0x1a4>
     c6a:	e8 c0       	rjmp	.+464    	; 0xe3c <vfprintf+0x39a>
     c6c:	84 36       	cpi	r24, 0x64	; 100
     c6e:	11 f0       	breq	.+4      	; 0xc74 <vfprintf+0x1d2>
     c70:	89 36       	cpi	r24, 0x69	; 105
     c72:	41 f5       	brne	.+80     	; 0xcc4 <vfprintf+0x222>
     c74:	f8 01       	movw	r30, r16
     c76:	37 fe       	sbrs	r3, 7
     c78:	07 c0       	rjmp	.+14     	; 0xc88 <vfprintf+0x1e6>
     c7a:	60 81       	ld	r22, Z
     c7c:	71 81       	ldd	r23, Z+1	; 0x01
     c7e:	82 81       	ldd	r24, Z+2	; 0x02
     c80:	93 81       	ldd	r25, Z+3	; 0x03
     c82:	0c 5f       	subi	r16, 0xFC	; 252
     c84:	1f 4f       	sbci	r17, 0xFF	; 255
     c86:	08 c0       	rjmp	.+16     	; 0xc98 <vfprintf+0x1f6>
     c88:	60 81       	ld	r22, Z
     c8a:	71 81       	ldd	r23, Z+1	; 0x01
     c8c:	07 2e       	mov	r0, r23
     c8e:	00 0c       	add	r0, r0
     c90:	88 0b       	sbc	r24, r24
     c92:	99 0b       	sbc	r25, r25
     c94:	0e 5f       	subi	r16, 0xFE	; 254
     c96:	1f 4f       	sbci	r17, 0xFF	; 255
     c98:	f3 2d       	mov	r31, r3
     c9a:	ff 76       	andi	r31, 0x6F	; 111
     c9c:	3f 2e       	mov	r3, r31
     c9e:	97 ff       	sbrs	r25, 7
     ca0:	09 c0       	rjmp	.+18     	; 0xcb4 <vfprintf+0x212>
     ca2:	90 95       	com	r25
     ca4:	80 95       	com	r24
     ca6:	70 95       	com	r23
     ca8:	61 95       	neg	r22
     caa:	7f 4f       	sbci	r23, 0xFF	; 255
     cac:	8f 4f       	sbci	r24, 0xFF	; 255
     cae:	9f 4f       	sbci	r25, 0xFF	; 255
     cb0:	f0 68       	ori	r31, 0x80	; 128
     cb2:	3f 2e       	mov	r3, r31
     cb4:	2a e0       	ldi	r18, 0x0A	; 10
     cb6:	30 e0       	ldi	r19, 0x00	; 0
     cb8:	a3 01       	movw	r20, r6
     cba:	0e 94 c8 08 	call	0x1190	; 0x1190 <__ultoa_invert>
     cbe:	88 2e       	mov	r8, r24
     cc0:	86 18       	sub	r8, r6
     cc2:	45 c0       	rjmp	.+138    	; 0xd4e <vfprintf+0x2ac>
     cc4:	85 37       	cpi	r24, 0x75	; 117
     cc6:	31 f4       	brne	.+12     	; 0xcd4 <vfprintf+0x232>
     cc8:	23 2d       	mov	r18, r3
     cca:	2f 7e       	andi	r18, 0xEF	; 239
     ccc:	b2 2e       	mov	r11, r18
     cce:	2a e0       	ldi	r18, 0x0A	; 10
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	25 c0       	rjmp	.+74     	; 0xd1e <vfprintf+0x27c>
     cd4:	93 2d       	mov	r25, r3
     cd6:	99 7f       	andi	r25, 0xF9	; 249
     cd8:	b9 2e       	mov	r11, r25
     cda:	8f 36       	cpi	r24, 0x6F	; 111
     cdc:	c1 f0       	breq	.+48     	; 0xd0e <vfprintf+0x26c>
     cde:	18 f4       	brcc	.+6      	; 0xce6 <vfprintf+0x244>
     ce0:	88 35       	cpi	r24, 0x58	; 88
     ce2:	79 f0       	breq	.+30     	; 0xd02 <vfprintf+0x260>
     ce4:	b5 c0       	rjmp	.+362    	; 0xe50 <vfprintf+0x3ae>
     ce6:	80 37       	cpi	r24, 0x70	; 112
     ce8:	19 f0       	breq	.+6      	; 0xcf0 <vfprintf+0x24e>
     cea:	88 37       	cpi	r24, 0x78	; 120
     cec:	21 f0       	breq	.+8      	; 0xcf6 <vfprintf+0x254>
     cee:	b0 c0       	rjmp	.+352    	; 0xe50 <vfprintf+0x3ae>
     cf0:	e9 2f       	mov	r30, r25
     cf2:	e0 61       	ori	r30, 0x10	; 16
     cf4:	be 2e       	mov	r11, r30
     cf6:	b4 fe       	sbrs	r11, 4
     cf8:	0d c0       	rjmp	.+26     	; 0xd14 <vfprintf+0x272>
     cfa:	fb 2d       	mov	r31, r11
     cfc:	f4 60       	ori	r31, 0x04	; 4
     cfe:	bf 2e       	mov	r11, r31
     d00:	09 c0       	rjmp	.+18     	; 0xd14 <vfprintf+0x272>
     d02:	34 fe       	sbrs	r3, 4
     d04:	0a c0       	rjmp	.+20     	; 0xd1a <vfprintf+0x278>
     d06:	29 2f       	mov	r18, r25
     d08:	26 60       	ori	r18, 0x06	; 6
     d0a:	b2 2e       	mov	r11, r18
     d0c:	06 c0       	rjmp	.+12     	; 0xd1a <vfprintf+0x278>
     d0e:	28 e0       	ldi	r18, 0x08	; 8
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	05 c0       	rjmp	.+10     	; 0xd1e <vfprintf+0x27c>
     d14:	20 e1       	ldi	r18, 0x10	; 16
     d16:	30 e0       	ldi	r19, 0x00	; 0
     d18:	02 c0       	rjmp	.+4      	; 0xd1e <vfprintf+0x27c>
     d1a:	20 e1       	ldi	r18, 0x10	; 16
     d1c:	32 e0       	ldi	r19, 0x02	; 2
     d1e:	f8 01       	movw	r30, r16
     d20:	b7 fe       	sbrs	r11, 7
     d22:	07 c0       	rjmp	.+14     	; 0xd32 <vfprintf+0x290>
     d24:	60 81       	ld	r22, Z
     d26:	71 81       	ldd	r23, Z+1	; 0x01
     d28:	82 81       	ldd	r24, Z+2	; 0x02
     d2a:	93 81       	ldd	r25, Z+3	; 0x03
     d2c:	0c 5f       	subi	r16, 0xFC	; 252
     d2e:	1f 4f       	sbci	r17, 0xFF	; 255
     d30:	06 c0       	rjmp	.+12     	; 0xd3e <vfprintf+0x29c>
     d32:	60 81       	ld	r22, Z
     d34:	71 81       	ldd	r23, Z+1	; 0x01
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	0e 5f       	subi	r16, 0xFE	; 254
     d3c:	1f 4f       	sbci	r17, 0xFF	; 255
     d3e:	a3 01       	movw	r20, r6
     d40:	0e 94 c8 08 	call	0x1190	; 0x1190 <__ultoa_invert>
     d44:	88 2e       	mov	r8, r24
     d46:	86 18       	sub	r8, r6
     d48:	fb 2d       	mov	r31, r11
     d4a:	ff 77       	andi	r31, 0x7F	; 127
     d4c:	3f 2e       	mov	r3, r31
     d4e:	36 fe       	sbrs	r3, 6
     d50:	0d c0       	rjmp	.+26     	; 0xd6c <vfprintf+0x2ca>
     d52:	23 2d       	mov	r18, r3
     d54:	2e 7f       	andi	r18, 0xFE	; 254
     d56:	a2 2e       	mov	r10, r18
     d58:	89 14       	cp	r8, r9
     d5a:	58 f4       	brcc	.+22     	; 0xd72 <vfprintf+0x2d0>
     d5c:	34 fe       	sbrs	r3, 4
     d5e:	0b c0       	rjmp	.+22     	; 0xd76 <vfprintf+0x2d4>
     d60:	32 fc       	sbrc	r3, 2
     d62:	09 c0       	rjmp	.+18     	; 0xd76 <vfprintf+0x2d4>
     d64:	83 2d       	mov	r24, r3
     d66:	8e 7e       	andi	r24, 0xEE	; 238
     d68:	a8 2e       	mov	r10, r24
     d6a:	05 c0       	rjmp	.+10     	; 0xd76 <vfprintf+0x2d4>
     d6c:	b8 2c       	mov	r11, r8
     d6e:	a3 2c       	mov	r10, r3
     d70:	03 c0       	rjmp	.+6      	; 0xd78 <vfprintf+0x2d6>
     d72:	b8 2c       	mov	r11, r8
     d74:	01 c0       	rjmp	.+2      	; 0xd78 <vfprintf+0x2d6>
     d76:	b9 2c       	mov	r11, r9
     d78:	a4 fe       	sbrs	r10, 4
     d7a:	0f c0       	rjmp	.+30     	; 0xd9a <vfprintf+0x2f8>
     d7c:	fe 01       	movw	r30, r28
     d7e:	e8 0d       	add	r30, r8
     d80:	f1 1d       	adc	r31, r1
     d82:	80 81       	ld	r24, Z
     d84:	80 33       	cpi	r24, 0x30	; 48
     d86:	21 f4       	brne	.+8      	; 0xd90 <vfprintf+0x2ee>
     d88:	9a 2d       	mov	r25, r10
     d8a:	99 7e       	andi	r25, 0xE9	; 233
     d8c:	a9 2e       	mov	r10, r25
     d8e:	09 c0       	rjmp	.+18     	; 0xda2 <vfprintf+0x300>
     d90:	a2 fe       	sbrs	r10, 2
     d92:	06 c0       	rjmp	.+12     	; 0xda0 <vfprintf+0x2fe>
     d94:	b3 94       	inc	r11
     d96:	b3 94       	inc	r11
     d98:	04 c0       	rjmp	.+8      	; 0xda2 <vfprintf+0x300>
     d9a:	8a 2d       	mov	r24, r10
     d9c:	86 78       	andi	r24, 0x86	; 134
     d9e:	09 f0       	breq	.+2      	; 0xda2 <vfprintf+0x300>
     da0:	b3 94       	inc	r11
     da2:	a3 fc       	sbrc	r10, 3
     da4:	11 c0       	rjmp	.+34     	; 0xdc8 <vfprintf+0x326>
     da6:	a0 fe       	sbrs	r10, 0
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <vfprintf+0x314>
     daa:	b2 14       	cp	r11, r2
     dac:	88 f4       	brcc	.+34     	; 0xdd0 <vfprintf+0x32e>
     dae:	28 0c       	add	r2, r8
     db0:	92 2c       	mov	r9, r2
     db2:	9b 18       	sub	r9, r11
     db4:	0e c0       	rjmp	.+28     	; 0xdd2 <vfprintf+0x330>
     db6:	b2 14       	cp	r11, r2
     db8:	60 f4       	brcc	.+24     	; 0xdd2 <vfprintf+0x330>
     dba:	b6 01       	movw	r22, r12
     dbc:	80 e2       	ldi	r24, 0x20	; 32
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     dc4:	b3 94       	inc	r11
     dc6:	f7 cf       	rjmp	.-18     	; 0xdb6 <vfprintf+0x314>
     dc8:	b2 14       	cp	r11, r2
     dca:	18 f4       	brcc	.+6      	; 0xdd2 <vfprintf+0x330>
     dcc:	2b 18       	sub	r2, r11
     dce:	02 c0       	rjmp	.+4      	; 0xdd4 <vfprintf+0x332>
     dd0:	98 2c       	mov	r9, r8
     dd2:	21 2c       	mov	r2, r1
     dd4:	a4 fe       	sbrs	r10, 4
     dd6:	10 c0       	rjmp	.+32     	; 0xdf8 <vfprintf+0x356>
     dd8:	b6 01       	movw	r22, r12
     dda:	80 e3       	ldi	r24, 0x30	; 48
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     de2:	a2 fe       	sbrs	r10, 2
     de4:	17 c0       	rjmp	.+46     	; 0xe14 <vfprintf+0x372>
     de6:	a1 fc       	sbrc	r10, 1
     de8:	03 c0       	rjmp	.+6      	; 0xdf0 <vfprintf+0x34e>
     dea:	88 e7       	ldi	r24, 0x78	; 120
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	02 c0       	rjmp	.+4      	; 0xdf4 <vfprintf+0x352>
     df0:	88 e5       	ldi	r24, 0x58	; 88
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	b6 01       	movw	r22, r12
     df6:	0c c0       	rjmp	.+24     	; 0xe10 <vfprintf+0x36e>
     df8:	8a 2d       	mov	r24, r10
     dfa:	86 78       	andi	r24, 0x86	; 134
     dfc:	59 f0       	breq	.+22     	; 0xe14 <vfprintf+0x372>
     dfe:	a1 fe       	sbrs	r10, 1
     e00:	02 c0       	rjmp	.+4      	; 0xe06 <vfprintf+0x364>
     e02:	8b e2       	ldi	r24, 0x2B	; 43
     e04:	01 c0       	rjmp	.+2      	; 0xe08 <vfprintf+0x366>
     e06:	80 e2       	ldi	r24, 0x20	; 32
     e08:	a7 fc       	sbrc	r10, 7
     e0a:	8d e2       	ldi	r24, 0x2D	; 45
     e0c:	b6 01       	movw	r22, r12
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e14:	89 14       	cp	r8, r9
     e16:	38 f4       	brcc	.+14     	; 0xe26 <vfprintf+0x384>
     e18:	b6 01       	movw	r22, r12
     e1a:	80 e3       	ldi	r24, 0x30	; 48
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e22:	9a 94       	dec	r9
     e24:	f7 cf       	rjmp	.-18     	; 0xe14 <vfprintf+0x372>
     e26:	8a 94       	dec	r8
     e28:	f3 01       	movw	r30, r6
     e2a:	e8 0d       	add	r30, r8
     e2c:	f1 1d       	adc	r31, r1
     e2e:	80 81       	ld	r24, Z
     e30:	b6 01       	movw	r22, r12
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e38:	81 10       	cpse	r8, r1
     e3a:	f5 cf       	rjmp	.-22     	; 0xe26 <vfprintf+0x384>
     e3c:	22 20       	and	r2, r2
     e3e:	09 f4       	brne	.+2      	; 0xe42 <vfprintf+0x3a0>
     e40:	42 ce       	rjmp	.-892    	; 0xac6 <vfprintf+0x24>
     e42:	b6 01       	movw	r22, r12
     e44:	80 e2       	ldi	r24, 0x20	; 32
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	0e 94 8c 08 	call	0x1118	; 0x1118 <fputc>
     e4c:	2a 94       	dec	r2
     e4e:	f6 cf       	rjmp	.-20     	; 0xe3c <vfprintf+0x39a>
     e50:	f6 01       	movw	r30, r12
     e52:	86 81       	ldd	r24, Z+6	; 0x06
     e54:	97 81       	ldd	r25, Z+7	; 0x07
     e56:	02 c0       	rjmp	.+4      	; 0xe5c <vfprintf+0x3ba>
     e58:	8f ef       	ldi	r24, 0xFF	; 255
     e5a:	9f ef       	ldi	r25, 0xFF	; 255
     e5c:	2b 96       	adiw	r28, 0x0b	; 11
     e5e:	e2 e1       	ldi	r30, 0x12	; 18
     e60:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__epilogue_restores__>

00000e64 <calloc>:
     e64:	0f 93       	push	r16
     e66:	1f 93       	push	r17
     e68:	cf 93       	push	r28
     e6a:	df 93       	push	r29
     e6c:	86 9f       	mul	r24, r22
     e6e:	80 01       	movw	r16, r0
     e70:	87 9f       	mul	r24, r23
     e72:	10 0d       	add	r17, r0
     e74:	96 9f       	mul	r25, r22
     e76:	10 0d       	add	r17, r0
     e78:	11 24       	eor	r1, r1
     e7a:	c8 01       	movw	r24, r16
     e7c:	0e 94 4e 07 	call	0xe9c	; 0xe9c <malloc>
     e80:	ec 01       	movw	r28, r24
     e82:	00 97       	sbiw	r24, 0x00	; 0
     e84:	29 f0       	breq	.+10     	; 0xe90 <calloc+0x2c>
     e86:	a8 01       	movw	r20, r16
     e88:	60 e0       	ldi	r22, 0x00	; 0
     e8a:	70 e0       	ldi	r23, 0x00	; 0
     e8c:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <memset>
     e90:	ce 01       	movw	r24, r28
     e92:	df 91       	pop	r29
     e94:	cf 91       	pop	r28
     e96:	1f 91       	pop	r17
     e98:	0f 91       	pop	r16
     e9a:	08 95       	ret

00000e9c <malloc>:
     e9c:	0f 93       	push	r16
     e9e:	1f 93       	push	r17
     ea0:	cf 93       	push	r28
     ea2:	df 93       	push	r29
     ea4:	82 30       	cpi	r24, 0x02	; 2
     ea6:	91 05       	cpc	r25, r1
     ea8:	10 f4       	brcc	.+4      	; 0xeae <malloc+0x12>
     eaa:	82 e0       	ldi	r24, 0x02	; 2
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <__flp>
     eb2:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <__flp+0x1>
     eb6:	20 e0       	ldi	r18, 0x00	; 0
     eb8:	30 e0       	ldi	r19, 0x00	; 0
     eba:	a0 e0       	ldi	r26, 0x00	; 0
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	30 97       	sbiw	r30, 0x00	; 0
     ec0:	19 f1       	breq	.+70     	; 0xf08 <malloc+0x6c>
     ec2:	40 81       	ld	r20, Z
     ec4:	51 81       	ldd	r21, Z+1	; 0x01
     ec6:	02 81       	ldd	r16, Z+2	; 0x02
     ec8:	13 81       	ldd	r17, Z+3	; 0x03
     eca:	48 17       	cp	r20, r24
     ecc:	59 07       	cpc	r21, r25
     ece:	c8 f0       	brcs	.+50     	; 0xf02 <malloc+0x66>
     ed0:	84 17       	cp	r24, r20
     ed2:	95 07       	cpc	r25, r21
     ed4:	69 f4       	brne	.+26     	; 0xef0 <malloc+0x54>
     ed6:	10 97       	sbiw	r26, 0x00	; 0
     ed8:	31 f0       	breq	.+12     	; 0xee6 <malloc+0x4a>
     eda:	12 96       	adiw	r26, 0x02	; 2
     edc:	0c 93       	st	X, r16
     ede:	12 97       	sbiw	r26, 0x02	; 2
     ee0:	13 96       	adiw	r26, 0x03	; 3
     ee2:	1c 93       	st	X, r17
     ee4:	27 c0       	rjmp	.+78     	; 0xf34 <malloc+0x98>
     ee6:	00 93 f0 01 	sts	0x01F0, r16	; 0x8001f0 <__flp>
     eea:	10 93 f1 01 	sts	0x01F1, r17	; 0x8001f1 <__flp+0x1>
     eee:	22 c0       	rjmp	.+68     	; 0xf34 <malloc+0x98>
     ef0:	21 15       	cp	r18, r1
     ef2:	31 05       	cpc	r19, r1
     ef4:	19 f0       	breq	.+6      	; 0xefc <malloc+0x60>
     ef6:	42 17       	cp	r20, r18
     ef8:	53 07       	cpc	r21, r19
     efa:	18 f4       	brcc	.+6      	; 0xf02 <malloc+0x66>
     efc:	9a 01       	movw	r18, r20
     efe:	bd 01       	movw	r22, r26
     f00:	ef 01       	movw	r28, r30
     f02:	df 01       	movw	r26, r30
     f04:	f8 01       	movw	r30, r16
     f06:	db cf       	rjmp	.-74     	; 0xebe <malloc+0x22>
     f08:	21 15       	cp	r18, r1
     f0a:	31 05       	cpc	r19, r1
     f0c:	f9 f0       	breq	.+62     	; 0xf4c <malloc+0xb0>
     f0e:	28 1b       	sub	r18, r24
     f10:	39 0b       	sbc	r19, r25
     f12:	24 30       	cpi	r18, 0x04	; 4
     f14:	31 05       	cpc	r19, r1
     f16:	80 f4       	brcc	.+32     	; 0xf38 <malloc+0x9c>
     f18:	8a 81       	ldd	r24, Y+2	; 0x02
     f1a:	9b 81       	ldd	r25, Y+3	; 0x03
     f1c:	61 15       	cp	r22, r1
     f1e:	71 05       	cpc	r23, r1
     f20:	21 f0       	breq	.+8      	; 0xf2a <malloc+0x8e>
     f22:	fb 01       	movw	r30, r22
     f24:	93 83       	std	Z+3, r25	; 0x03
     f26:	82 83       	std	Z+2, r24	; 0x02
     f28:	04 c0       	rjmp	.+8      	; 0xf32 <malloc+0x96>
     f2a:	90 93 f1 01 	sts	0x01F1, r25	; 0x8001f1 <__flp+0x1>
     f2e:	80 93 f0 01 	sts	0x01F0, r24	; 0x8001f0 <__flp>
     f32:	fe 01       	movw	r30, r28
     f34:	32 96       	adiw	r30, 0x02	; 2
     f36:	44 c0       	rjmp	.+136    	; 0xfc0 <malloc+0x124>
     f38:	fe 01       	movw	r30, r28
     f3a:	e2 0f       	add	r30, r18
     f3c:	f3 1f       	adc	r31, r19
     f3e:	81 93       	st	Z+, r24
     f40:	91 93       	st	Z+, r25
     f42:	22 50       	subi	r18, 0x02	; 2
     f44:	31 09       	sbc	r19, r1
     f46:	39 83       	std	Y+1, r19	; 0x01
     f48:	28 83       	st	Y, r18
     f4a:	3a c0       	rjmp	.+116    	; 0xfc0 <malloc+0x124>
     f4c:	20 91 ee 01 	lds	r18, 0x01EE	; 0x8001ee <__brkval>
     f50:	30 91 ef 01 	lds	r19, 0x01EF	; 0x8001ef <__brkval+0x1>
     f54:	23 2b       	or	r18, r19
     f56:	41 f4       	brne	.+16     	; 0xf68 <malloc+0xcc>
     f58:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     f5c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     f60:	30 93 ef 01 	sts	0x01EF, r19	; 0x8001ef <__brkval+0x1>
     f64:	20 93 ee 01 	sts	0x01EE, r18	; 0x8001ee <__brkval>
     f68:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     f6c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     f70:	21 15       	cp	r18, r1
     f72:	31 05       	cpc	r19, r1
     f74:	41 f4       	brne	.+16     	; 0xf86 <malloc+0xea>
     f76:	2d b7       	in	r18, 0x3d	; 61
     f78:	3e b7       	in	r19, 0x3e	; 62
     f7a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     f7e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     f82:	24 1b       	sub	r18, r20
     f84:	35 0b       	sbc	r19, r21
     f86:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <__brkval>
     f8a:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <__brkval+0x1>
     f8e:	e2 17       	cp	r30, r18
     f90:	f3 07       	cpc	r31, r19
     f92:	a0 f4       	brcc	.+40     	; 0xfbc <malloc+0x120>
     f94:	2e 1b       	sub	r18, r30
     f96:	3f 0b       	sbc	r19, r31
     f98:	28 17       	cp	r18, r24
     f9a:	39 07       	cpc	r19, r25
     f9c:	78 f0       	brcs	.+30     	; 0xfbc <malloc+0x120>
     f9e:	ac 01       	movw	r20, r24
     fa0:	4e 5f       	subi	r20, 0xFE	; 254
     fa2:	5f 4f       	sbci	r21, 0xFF	; 255
     fa4:	24 17       	cp	r18, r20
     fa6:	35 07       	cpc	r19, r21
     fa8:	48 f0       	brcs	.+18     	; 0xfbc <malloc+0x120>
     faa:	4e 0f       	add	r20, r30
     fac:	5f 1f       	adc	r21, r31
     fae:	50 93 ef 01 	sts	0x01EF, r21	; 0x8001ef <__brkval+0x1>
     fb2:	40 93 ee 01 	sts	0x01EE, r20	; 0x8001ee <__brkval>
     fb6:	81 93       	st	Z+, r24
     fb8:	91 93       	st	Z+, r25
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <malloc+0x124>
     fbc:	e0 e0       	ldi	r30, 0x00	; 0
     fbe:	f0 e0       	ldi	r31, 0x00	; 0
     fc0:	cf 01       	movw	r24, r30
     fc2:	df 91       	pop	r29
     fc4:	cf 91       	pop	r28
     fc6:	1f 91       	pop	r17
     fc8:	0f 91       	pop	r16
     fca:	08 95       	ret

00000fcc <free>:
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	00 97       	sbiw	r24, 0x00	; 0
     fd2:	09 f4       	brne	.+2      	; 0xfd6 <free+0xa>
     fd4:	81 c0       	rjmp	.+258    	; 0x10d8 <free+0x10c>
     fd6:	fc 01       	movw	r30, r24
     fd8:	32 97       	sbiw	r30, 0x02	; 2
     fda:	13 82       	std	Z+3, r1	; 0x03
     fdc:	12 82       	std	Z+2, r1	; 0x02
     fde:	a0 91 f0 01 	lds	r26, 0x01F0	; 0x8001f0 <__flp>
     fe2:	b0 91 f1 01 	lds	r27, 0x01F1	; 0x8001f1 <__flp+0x1>
     fe6:	10 97       	sbiw	r26, 0x00	; 0
     fe8:	81 f4       	brne	.+32     	; 0x100a <free+0x3e>
     fea:	20 81       	ld	r18, Z
     fec:	31 81       	ldd	r19, Z+1	; 0x01
     fee:	82 0f       	add	r24, r18
     ff0:	93 1f       	adc	r25, r19
     ff2:	20 91 ee 01 	lds	r18, 0x01EE	; 0x8001ee <__brkval>
     ff6:	30 91 ef 01 	lds	r19, 0x01EF	; 0x8001ef <__brkval+0x1>
     ffa:	28 17       	cp	r18, r24
     ffc:	39 07       	cpc	r19, r25
     ffe:	51 f5       	brne	.+84     	; 0x1054 <free+0x88>
    1000:	f0 93 ef 01 	sts	0x01EF, r31	; 0x8001ef <__brkval+0x1>
    1004:	e0 93 ee 01 	sts	0x01EE, r30	; 0x8001ee <__brkval>
    1008:	67 c0       	rjmp	.+206    	; 0x10d8 <free+0x10c>
    100a:	ed 01       	movw	r28, r26
    100c:	20 e0       	ldi	r18, 0x00	; 0
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	ce 17       	cp	r28, r30
    1012:	df 07       	cpc	r29, r31
    1014:	40 f4       	brcc	.+16     	; 0x1026 <free+0x5a>
    1016:	4a 81       	ldd	r20, Y+2	; 0x02
    1018:	5b 81       	ldd	r21, Y+3	; 0x03
    101a:	9e 01       	movw	r18, r28
    101c:	41 15       	cp	r20, r1
    101e:	51 05       	cpc	r21, r1
    1020:	f1 f0       	breq	.+60     	; 0x105e <free+0x92>
    1022:	ea 01       	movw	r28, r20
    1024:	f5 cf       	rjmp	.-22     	; 0x1010 <free+0x44>
    1026:	d3 83       	std	Z+3, r29	; 0x03
    1028:	c2 83       	std	Z+2, r28	; 0x02
    102a:	40 81       	ld	r20, Z
    102c:	51 81       	ldd	r21, Z+1	; 0x01
    102e:	84 0f       	add	r24, r20
    1030:	95 1f       	adc	r25, r21
    1032:	c8 17       	cp	r28, r24
    1034:	d9 07       	cpc	r29, r25
    1036:	59 f4       	brne	.+22     	; 0x104e <free+0x82>
    1038:	88 81       	ld	r24, Y
    103a:	99 81       	ldd	r25, Y+1	; 0x01
    103c:	84 0f       	add	r24, r20
    103e:	95 1f       	adc	r25, r21
    1040:	02 96       	adiw	r24, 0x02	; 2
    1042:	91 83       	std	Z+1, r25	; 0x01
    1044:	80 83       	st	Z, r24
    1046:	8a 81       	ldd	r24, Y+2	; 0x02
    1048:	9b 81       	ldd	r25, Y+3	; 0x03
    104a:	93 83       	std	Z+3, r25	; 0x03
    104c:	82 83       	std	Z+2, r24	; 0x02
    104e:	21 15       	cp	r18, r1
    1050:	31 05       	cpc	r19, r1
    1052:	29 f4       	brne	.+10     	; 0x105e <free+0x92>
    1054:	f0 93 f1 01 	sts	0x01F1, r31	; 0x8001f1 <__flp+0x1>
    1058:	e0 93 f0 01 	sts	0x01F0, r30	; 0x8001f0 <__flp>
    105c:	3d c0       	rjmp	.+122    	; 0x10d8 <free+0x10c>
    105e:	e9 01       	movw	r28, r18
    1060:	fb 83       	std	Y+3, r31	; 0x03
    1062:	ea 83       	std	Y+2, r30	; 0x02
    1064:	49 91       	ld	r20, Y+
    1066:	59 91       	ld	r21, Y+
    1068:	c4 0f       	add	r28, r20
    106a:	d5 1f       	adc	r29, r21
    106c:	ec 17       	cp	r30, r28
    106e:	fd 07       	cpc	r31, r29
    1070:	61 f4       	brne	.+24     	; 0x108a <free+0xbe>
    1072:	80 81       	ld	r24, Z
    1074:	91 81       	ldd	r25, Z+1	; 0x01
    1076:	84 0f       	add	r24, r20
    1078:	95 1f       	adc	r25, r21
    107a:	02 96       	adiw	r24, 0x02	; 2
    107c:	e9 01       	movw	r28, r18
    107e:	99 83       	std	Y+1, r25	; 0x01
    1080:	88 83       	st	Y, r24
    1082:	82 81       	ldd	r24, Z+2	; 0x02
    1084:	93 81       	ldd	r25, Z+3	; 0x03
    1086:	9b 83       	std	Y+3, r25	; 0x03
    1088:	8a 83       	std	Y+2, r24	; 0x02
    108a:	e0 e0       	ldi	r30, 0x00	; 0
    108c:	f0 e0       	ldi	r31, 0x00	; 0
    108e:	12 96       	adiw	r26, 0x02	; 2
    1090:	8d 91       	ld	r24, X+
    1092:	9c 91       	ld	r25, X
    1094:	13 97       	sbiw	r26, 0x03	; 3
    1096:	00 97       	sbiw	r24, 0x00	; 0
    1098:	19 f0       	breq	.+6      	; 0x10a0 <free+0xd4>
    109a:	fd 01       	movw	r30, r26
    109c:	dc 01       	movw	r26, r24
    109e:	f7 cf       	rjmp	.-18     	; 0x108e <free+0xc2>
    10a0:	8d 91       	ld	r24, X+
    10a2:	9c 91       	ld	r25, X
    10a4:	11 97       	sbiw	r26, 0x01	; 1
    10a6:	9d 01       	movw	r18, r26
    10a8:	2e 5f       	subi	r18, 0xFE	; 254
    10aa:	3f 4f       	sbci	r19, 0xFF	; 255
    10ac:	82 0f       	add	r24, r18
    10ae:	93 1f       	adc	r25, r19
    10b0:	20 91 ee 01 	lds	r18, 0x01EE	; 0x8001ee <__brkval>
    10b4:	30 91 ef 01 	lds	r19, 0x01EF	; 0x8001ef <__brkval+0x1>
    10b8:	28 17       	cp	r18, r24
    10ba:	39 07       	cpc	r19, r25
    10bc:	69 f4       	brne	.+26     	; 0x10d8 <free+0x10c>
    10be:	30 97       	sbiw	r30, 0x00	; 0
    10c0:	29 f4       	brne	.+10     	; 0x10cc <free+0x100>
    10c2:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <__flp+0x1>
    10c6:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <__flp>
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <free+0x104>
    10cc:	13 82       	std	Z+3, r1	; 0x03
    10ce:	12 82       	std	Z+2, r1	; 0x02
    10d0:	b0 93 ef 01 	sts	0x01EF, r27	; 0x8001ef <__brkval+0x1>
    10d4:	a0 93 ee 01 	sts	0x01EE, r26	; 0x8001ee <__brkval>
    10d8:	df 91       	pop	r29
    10da:	cf 91       	pop	r28
    10dc:	08 95       	ret

000010de <strnlen_P>:
    10de:	fc 01       	movw	r30, r24
    10e0:	05 90       	lpm	r0, Z+
    10e2:	61 50       	subi	r22, 0x01	; 1
    10e4:	70 40       	sbci	r23, 0x00	; 0
    10e6:	01 10       	cpse	r0, r1
    10e8:	d8 f7       	brcc	.-10     	; 0x10e0 <strnlen_P+0x2>
    10ea:	80 95       	com	r24
    10ec:	90 95       	com	r25
    10ee:	8e 0f       	add	r24, r30
    10f0:	9f 1f       	adc	r25, r31
    10f2:	08 95       	ret

000010f4 <memset>:
    10f4:	dc 01       	movw	r26, r24
    10f6:	01 c0       	rjmp	.+2      	; 0x10fa <memset+0x6>
    10f8:	6d 93       	st	X+, r22
    10fa:	41 50       	subi	r20, 0x01	; 1
    10fc:	50 40       	sbci	r21, 0x00	; 0
    10fe:	e0 f7       	brcc	.-8      	; 0x10f8 <memset+0x4>
    1100:	08 95       	ret

00001102 <strnlen>:
    1102:	fc 01       	movw	r30, r24
    1104:	61 50       	subi	r22, 0x01	; 1
    1106:	70 40       	sbci	r23, 0x00	; 0
    1108:	01 90       	ld	r0, Z+
    110a:	01 10       	cpse	r0, r1
    110c:	d8 f7       	brcc	.-10     	; 0x1104 <strnlen+0x2>
    110e:	80 95       	com	r24
    1110:	90 95       	com	r25
    1112:	8e 0f       	add	r24, r30
    1114:	9f 1f       	adc	r25, r31
    1116:	08 95       	ret

00001118 <fputc>:
    1118:	0f 93       	push	r16
    111a:	1f 93       	push	r17
    111c:	cf 93       	push	r28
    111e:	df 93       	push	r29
    1120:	fb 01       	movw	r30, r22
    1122:	23 81       	ldd	r18, Z+3	; 0x03
    1124:	21 fd       	sbrc	r18, 1
    1126:	03 c0       	rjmp	.+6      	; 0x112e <fputc+0x16>
    1128:	8f ef       	ldi	r24, 0xFF	; 255
    112a:	9f ef       	ldi	r25, 0xFF	; 255
    112c:	2c c0       	rjmp	.+88     	; 0x1186 <fputc+0x6e>
    112e:	22 ff       	sbrs	r18, 2
    1130:	16 c0       	rjmp	.+44     	; 0x115e <fputc+0x46>
    1132:	46 81       	ldd	r20, Z+6	; 0x06
    1134:	57 81       	ldd	r21, Z+7	; 0x07
    1136:	24 81       	ldd	r18, Z+4	; 0x04
    1138:	35 81       	ldd	r19, Z+5	; 0x05
    113a:	42 17       	cp	r20, r18
    113c:	53 07       	cpc	r21, r19
    113e:	44 f4       	brge	.+16     	; 0x1150 <fputc+0x38>
    1140:	a0 81       	ld	r26, Z
    1142:	b1 81       	ldd	r27, Z+1	; 0x01
    1144:	9d 01       	movw	r18, r26
    1146:	2f 5f       	subi	r18, 0xFF	; 255
    1148:	3f 4f       	sbci	r19, 0xFF	; 255
    114a:	31 83       	std	Z+1, r19	; 0x01
    114c:	20 83       	st	Z, r18
    114e:	8c 93       	st	X, r24
    1150:	26 81       	ldd	r18, Z+6	; 0x06
    1152:	37 81       	ldd	r19, Z+7	; 0x07
    1154:	2f 5f       	subi	r18, 0xFF	; 255
    1156:	3f 4f       	sbci	r19, 0xFF	; 255
    1158:	37 83       	std	Z+7, r19	; 0x07
    115a:	26 83       	std	Z+6, r18	; 0x06
    115c:	14 c0       	rjmp	.+40     	; 0x1186 <fputc+0x6e>
    115e:	8b 01       	movw	r16, r22
    1160:	ec 01       	movw	r28, r24
    1162:	fb 01       	movw	r30, r22
    1164:	00 84       	ldd	r0, Z+8	; 0x08
    1166:	f1 85       	ldd	r31, Z+9	; 0x09
    1168:	e0 2d       	mov	r30, r0
    116a:	09 95       	icall
    116c:	89 2b       	or	r24, r25
    116e:	e1 f6       	brne	.-72     	; 0x1128 <fputc+0x10>
    1170:	d8 01       	movw	r26, r16
    1172:	16 96       	adiw	r26, 0x06	; 6
    1174:	8d 91       	ld	r24, X+
    1176:	9c 91       	ld	r25, X
    1178:	17 97       	sbiw	r26, 0x07	; 7
    117a:	01 96       	adiw	r24, 0x01	; 1
    117c:	17 96       	adiw	r26, 0x07	; 7
    117e:	9c 93       	st	X, r25
    1180:	8e 93       	st	-X, r24
    1182:	16 97       	sbiw	r26, 0x06	; 6
    1184:	ce 01       	movw	r24, r28
    1186:	df 91       	pop	r29
    1188:	cf 91       	pop	r28
    118a:	1f 91       	pop	r17
    118c:	0f 91       	pop	r16
    118e:	08 95       	ret

00001190 <__ultoa_invert>:
    1190:	fa 01       	movw	r30, r20
    1192:	aa 27       	eor	r26, r26
    1194:	28 30       	cpi	r18, 0x08	; 8
    1196:	51 f1       	breq	.+84     	; 0x11ec <__ultoa_invert+0x5c>
    1198:	20 31       	cpi	r18, 0x10	; 16
    119a:	81 f1       	breq	.+96     	; 0x11fc <__ultoa_invert+0x6c>
    119c:	e8 94       	clt
    119e:	6f 93       	push	r22
    11a0:	6e 7f       	andi	r22, 0xFE	; 254
    11a2:	6e 5f       	subi	r22, 0xFE	; 254
    11a4:	7f 4f       	sbci	r23, 0xFF	; 255
    11a6:	8f 4f       	sbci	r24, 0xFF	; 255
    11a8:	9f 4f       	sbci	r25, 0xFF	; 255
    11aa:	af 4f       	sbci	r26, 0xFF	; 255
    11ac:	b1 e0       	ldi	r27, 0x01	; 1
    11ae:	3e d0       	rcall	.+124    	; 0x122c <__ultoa_invert+0x9c>
    11b0:	b4 e0       	ldi	r27, 0x04	; 4
    11b2:	3c d0       	rcall	.+120    	; 0x122c <__ultoa_invert+0x9c>
    11b4:	67 0f       	add	r22, r23
    11b6:	78 1f       	adc	r23, r24
    11b8:	89 1f       	adc	r24, r25
    11ba:	9a 1f       	adc	r25, r26
    11bc:	a1 1d       	adc	r26, r1
    11be:	68 0f       	add	r22, r24
    11c0:	79 1f       	adc	r23, r25
    11c2:	8a 1f       	adc	r24, r26
    11c4:	91 1d       	adc	r25, r1
    11c6:	a1 1d       	adc	r26, r1
    11c8:	6a 0f       	add	r22, r26
    11ca:	71 1d       	adc	r23, r1
    11cc:	81 1d       	adc	r24, r1
    11ce:	91 1d       	adc	r25, r1
    11d0:	a1 1d       	adc	r26, r1
    11d2:	20 d0       	rcall	.+64     	; 0x1214 <__ultoa_invert+0x84>
    11d4:	09 f4       	brne	.+2      	; 0x11d8 <__ultoa_invert+0x48>
    11d6:	68 94       	set
    11d8:	3f 91       	pop	r19
    11da:	2a e0       	ldi	r18, 0x0A	; 10
    11dc:	26 9f       	mul	r18, r22
    11de:	11 24       	eor	r1, r1
    11e0:	30 19       	sub	r19, r0
    11e2:	30 5d       	subi	r19, 0xD0	; 208
    11e4:	31 93       	st	Z+, r19
    11e6:	de f6       	brtc	.-74     	; 0x119e <__ultoa_invert+0xe>
    11e8:	cf 01       	movw	r24, r30
    11ea:	08 95       	ret
    11ec:	46 2f       	mov	r20, r22
    11ee:	47 70       	andi	r20, 0x07	; 7
    11f0:	40 5d       	subi	r20, 0xD0	; 208
    11f2:	41 93       	st	Z+, r20
    11f4:	b3 e0       	ldi	r27, 0x03	; 3
    11f6:	0f d0       	rcall	.+30     	; 0x1216 <__ultoa_invert+0x86>
    11f8:	c9 f7       	brne	.-14     	; 0x11ec <__ultoa_invert+0x5c>
    11fa:	f6 cf       	rjmp	.-20     	; 0x11e8 <__ultoa_invert+0x58>
    11fc:	46 2f       	mov	r20, r22
    11fe:	4f 70       	andi	r20, 0x0F	; 15
    1200:	40 5d       	subi	r20, 0xD0	; 208
    1202:	4a 33       	cpi	r20, 0x3A	; 58
    1204:	18 f0       	brcs	.+6      	; 0x120c <__ultoa_invert+0x7c>
    1206:	49 5d       	subi	r20, 0xD9	; 217
    1208:	31 fd       	sbrc	r19, 1
    120a:	40 52       	subi	r20, 0x20	; 32
    120c:	41 93       	st	Z+, r20
    120e:	02 d0       	rcall	.+4      	; 0x1214 <__ultoa_invert+0x84>
    1210:	a9 f7       	brne	.-22     	; 0x11fc <__ultoa_invert+0x6c>
    1212:	ea cf       	rjmp	.-44     	; 0x11e8 <__ultoa_invert+0x58>
    1214:	b4 e0       	ldi	r27, 0x04	; 4
    1216:	a6 95       	lsr	r26
    1218:	97 95       	ror	r25
    121a:	87 95       	ror	r24
    121c:	77 95       	ror	r23
    121e:	67 95       	ror	r22
    1220:	ba 95       	dec	r27
    1222:	c9 f7       	brne	.-14     	; 0x1216 <__ultoa_invert+0x86>
    1224:	00 97       	sbiw	r24, 0x00	; 0
    1226:	61 05       	cpc	r22, r1
    1228:	71 05       	cpc	r23, r1
    122a:	08 95       	ret
    122c:	9b 01       	movw	r18, r22
    122e:	ac 01       	movw	r20, r24
    1230:	0a 2e       	mov	r0, r26
    1232:	06 94       	lsr	r0
    1234:	57 95       	ror	r21
    1236:	47 95       	ror	r20
    1238:	37 95       	ror	r19
    123a:	27 95       	ror	r18
    123c:	ba 95       	dec	r27
    123e:	c9 f7       	brne	.-14     	; 0x1232 <__ultoa_invert+0xa2>
    1240:	62 0f       	add	r22, r18
    1242:	73 1f       	adc	r23, r19
    1244:	84 1f       	adc	r24, r20
    1246:	95 1f       	adc	r25, r21
    1248:	a0 1d       	adc	r26, r0
    124a:	08 95       	ret

0000124c <__prologue_saves__>:
    124c:	2f 92       	push	r2
    124e:	3f 92       	push	r3
    1250:	4f 92       	push	r4
    1252:	5f 92       	push	r5
    1254:	6f 92       	push	r6
    1256:	7f 92       	push	r7
    1258:	8f 92       	push	r8
    125a:	9f 92       	push	r9
    125c:	af 92       	push	r10
    125e:	bf 92       	push	r11
    1260:	cf 92       	push	r12
    1262:	df 92       	push	r13
    1264:	ef 92       	push	r14
    1266:	ff 92       	push	r15
    1268:	0f 93       	push	r16
    126a:	1f 93       	push	r17
    126c:	cf 93       	push	r28
    126e:	df 93       	push	r29
    1270:	cd b7       	in	r28, 0x3d	; 61
    1272:	de b7       	in	r29, 0x3e	; 62
    1274:	ca 1b       	sub	r28, r26
    1276:	db 0b       	sbc	r29, r27
    1278:	0f b6       	in	r0, 0x3f	; 63
    127a:	f8 94       	cli
    127c:	de bf       	out	0x3e, r29	; 62
    127e:	0f be       	out	0x3f, r0	; 63
    1280:	cd bf       	out	0x3d, r28	; 61
    1282:	09 94       	ijmp

00001284 <__epilogue_restores__>:
    1284:	2a 88       	ldd	r2, Y+18	; 0x12
    1286:	39 88       	ldd	r3, Y+17	; 0x11
    1288:	48 88       	ldd	r4, Y+16	; 0x10
    128a:	5f 84       	ldd	r5, Y+15	; 0x0f
    128c:	6e 84       	ldd	r6, Y+14	; 0x0e
    128e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1290:	8c 84       	ldd	r8, Y+12	; 0x0c
    1292:	9b 84       	ldd	r9, Y+11	; 0x0b
    1294:	aa 84       	ldd	r10, Y+10	; 0x0a
    1296:	b9 84       	ldd	r11, Y+9	; 0x09
    1298:	c8 84       	ldd	r12, Y+8	; 0x08
    129a:	df 80       	ldd	r13, Y+7	; 0x07
    129c:	ee 80       	ldd	r14, Y+6	; 0x06
    129e:	fd 80       	ldd	r15, Y+5	; 0x05
    12a0:	0c 81       	ldd	r16, Y+4	; 0x04
    12a2:	1b 81       	ldd	r17, Y+3	; 0x03
    12a4:	aa 81       	ldd	r26, Y+2	; 0x02
    12a6:	b9 81       	ldd	r27, Y+1	; 0x01
    12a8:	ce 0f       	add	r28, r30
    12aa:	d1 1d       	adc	r29, r1
    12ac:	0f b6       	in	r0, 0x3f	; 63
    12ae:	f8 94       	cli
    12b0:	de bf       	out	0x3e, r29	; 62
    12b2:	0f be       	out	0x3f, r0	; 63
    12b4:	cd bf       	out	0x3d, r28	; 61
    12b6:	ed 01       	movw	r28, r26
    12b8:	08 95       	ret

000012ba <_exit>:
    12ba:	f8 94       	cli

000012bc <__stop_program>:
    12bc:	ff cf       	rjmp	.-2      	; 0x12bc <__stop_program>
