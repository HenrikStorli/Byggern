
TestYolo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000de  00800100  00001bea  00001c7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  008001de  008001de  00001d5c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d5c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001db8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  00001df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a54  00000000  00000000  0000206c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000128a  00000000  00000000  00004ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014b6  00000000  00000000  00005d4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000690  00000000  00000000  00007200  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a68  00000000  00000000  00007890  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018ba  00000000  00000000  000082f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  00009bb2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cb 01 	jmp	0x396	; 0x396 <__ctors_end>
       4:	0c 94 39 02 	jmp	0x472	; 0x472 <__vector_1>
       8:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
       c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      10:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      14:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      18:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      1c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      20:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      24:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      28:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      2c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      30:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      34:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      38:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      3c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      40:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      44:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      48:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      4c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      50:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      54:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      58:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      5c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      60:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      64:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      68:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      6c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__trampolines_end>:
	...
      a6:	00 06       	cpc	r0, r16
      a8:	5f 5f       	subi	r21, 0xFF	; 255
      aa:	06 00       	.word	0x0006	; ????
      ac:	00 00       	nop
      ae:	00 07       	cpc	r16, r16
      b0:	07 00       	.word	0x0007	; ????
      b2:	07 07       	cpc	r16, r23
      b4:	00 00       	nop
      b6:	14 7f       	andi	r17, 0xF4	; 244
      b8:	7f 14       	cp	r7, r15
      ba:	7f 7f       	andi	r23, 0xFF	; 255
      bc:	14 00       	.word	0x0014	; ????
      be:	24 2e       	mov	r2, r20
      c0:	6b 6b       	ori	r22, 0xBB	; 187
      c2:	3a 12       	cpse	r3, r26
      c4:	00 00       	nop
      c6:	46 66       	ori	r20, 0x66	; 102
      c8:	30 18       	sub	r3, r0
      ca:	0c 66       	ori	r16, 0x6C	; 108
      cc:	62 00       	.word	0x0062	; ????
      ce:	30 7a       	andi	r19, 0xA0	; 160
      d0:	4f 5d       	subi	r20, 0xDF	; 223
      d2:	37 7a       	andi	r19, 0xA7	; 167
      d4:	48 00       	.word	0x0048	; ????
      d6:	04 07       	cpc	r16, r20
      d8:	03 00       	.word	0x0003	; ????
      da:	00 00       	nop
      dc:	00 00       	nop
      de:	00 1c       	adc	r0, r0
      e0:	3e 63       	ori	r19, 0x3E	; 62
      e2:	41 00       	.word	0x0041	; ????
      e4:	00 00       	nop
      e6:	00 41       	sbci	r16, 0x10	; 16
      e8:	63 3e       	cpi	r22, 0xE3	; 227
      ea:	1c 00       	.word	0x001c	; ????
      ec:	00 00       	nop
      ee:	08 2a       	or	r0, r24
      f0:	3e 1c       	adc	r3, r14
      f2:	1c 3e       	cpi	r17, 0xEC	; 236
      f4:	2a 08       	sbc	r2, r10
      f6:	08 08       	sbc	r0, r8
      f8:	3e 3e       	cpi	r19, 0xEE	; 238
      fa:	08 08       	sbc	r0, r8
      fc:	00 00       	nop
      fe:	00 a0       	ldd	r0, Z+32	; 0x20
     100:	e0 60       	ori	r30, 0x00	; 0
     102:	00 00       	nop
     104:	00 00       	nop
     106:	08 08       	sbc	r0, r8
     108:	08 08       	sbc	r0, r8
     10a:	08 08       	sbc	r0, r8
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	60 60       	ori	r22, 0x00	; 0
     112:	00 00       	nop
     114:	00 00       	nop
     116:	60 30       	cpi	r22, 0x00	; 0
     118:	18 0c       	add	r1, r8
     11a:	06 03       	mulsu	r16, r22
     11c:	01 00       	.word	0x0001	; ????
     11e:	3e 7f       	andi	r19, 0xFE	; 254
     120:	59 4d       	sbci	r21, 0xD9	; 217
     122:	7f 3e       	cpi	r23, 0xEF	; 239
     124:	00 00       	nop
     126:	42 42       	sbci	r20, 0x22	; 34
     128:	7f 7f       	andi	r23, 0xFF	; 255
     12a:	40 40       	sbci	r20, 0x00	; 0
     12c:	00 00       	nop
     12e:	62 73       	andi	r22, 0x32	; 50
     130:	59 49       	sbci	r21, 0x99	; 153
     132:	6f 66       	ori	r22, 0x6F	; 111
     134:	00 00       	nop
     136:	22 63       	ori	r18, 0x32	; 50
     138:	49 49       	sbci	r20, 0x99	; 153
     13a:	7f 36       	cpi	r23, 0x6F	; 111
     13c:	00 00       	nop
     13e:	18 1c       	adc	r1, r8
     140:	16 13       	cpse	r17, r22
     142:	7f 7f       	andi	r23, 0xFF	; 255
     144:	10 00       	.word	0x0010	; ????
     146:	27 67       	ori	r18, 0x77	; 119
     148:	45 45       	sbci	r20, 0x55	; 85
     14a:	7d 39       	cpi	r23, 0x9D	; 157
     14c:	00 00       	nop
     14e:	3c 7e       	andi	r19, 0xEC	; 236
     150:	4b 49       	sbci	r20, 0x9B	; 155
     152:	79 30       	cpi	r23, 0x09	; 9
     154:	00 00       	nop
     156:	03 63       	ori	r16, 0x33	; 51
     158:	71 19       	sub	r23, r1
     15a:	0f 07       	cpc	r16, r31
     15c:	00 00       	nop
     15e:	36 7f       	andi	r19, 0xF6	; 246
     160:	49 49       	sbci	r20, 0x99	; 153
     162:	7f 36       	cpi	r23, 0x6F	; 111
     164:	00 00       	nop
     166:	06 4f       	sbci	r16, 0xF6	; 246
     168:	49 69       	ori	r20, 0x99	; 153
     16a:	3f 1e       	adc	r3, r31
     16c:	00 00       	nop
     16e:	00 00       	nop
     170:	6c 6c       	ori	r22, 0xCC	; 204
     172:	00 00       	nop
     174:	00 00       	nop
     176:	00 a0       	ldd	r0, Z+32	; 0x20
     178:	ec 6c       	ori	r30, 0xCC	; 204
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	08 1c       	adc	r0, r8
     180:	36 63       	ori	r19, 0x36	; 54
     182:	41 00       	.word	0x0041	; ????
     184:	00 00       	nop
     186:	14 14       	cp	r1, r4
     188:	14 14       	cp	r1, r4
     18a:	14 14       	cp	r1, r4
     18c:	00 00       	nop
     18e:	00 41       	sbci	r16, 0x10	; 16
     190:	63 36       	cpi	r22, 0x63	; 99
     192:	1c 08       	sbc	r1, r12
     194:	00 00       	nop
     196:	02 03       	mulsu	r16, r18
     198:	51 59       	subi	r21, 0x91	; 145
     19a:	0f 06       	cpc	r0, r31
     19c:	00 00       	nop
     19e:	3e 7f       	andi	r19, 0xFE	; 254
     1a0:	41 5d       	subi	r20, 0xD1	; 209
     1a2:	5d 1f       	adc	r21, r29
     1a4:	1e 00       	.word	0x001e	; ????
     1a6:	7c 7e       	andi	r23, 0xEC	; 236
     1a8:	13 13       	cpse	r17, r19
     1aa:	7e 7c       	andi	r23, 0xCE	; 206
     1ac:	00 00       	nop
     1ae:	41 7f       	andi	r20, 0xF1	; 241
     1b0:	7f 49       	sbci	r23, 0x9F	; 159
     1b2:	49 7f       	andi	r20, 0xF9	; 249
     1b4:	36 00       	.word	0x0036	; ????
     1b6:	1c 3e       	cpi	r17, 0xEC	; 236
     1b8:	63 41       	sbci	r22, 0x13	; 19
     1ba:	41 63       	ori	r20, 0x31	; 49
     1bc:	22 00       	.word	0x0022	; ????
     1be:	41 7f       	andi	r20, 0xF1	; 241
     1c0:	7f 41       	sbci	r23, 0x1F	; 31
     1c2:	63 7f       	andi	r22, 0xF3	; 243
     1c4:	1c 00       	.word	0x001c	; ????
     1c6:	41 7f       	andi	r20, 0xF1	; 241
     1c8:	7f 49       	sbci	r23, 0x9F	; 159
     1ca:	5d 41       	sbci	r21, 0x1D	; 29
     1cc:	63 00       	.word	0x0063	; ????
     1ce:	41 7f       	andi	r20, 0xF1	; 241
     1d0:	7f 49       	sbci	r23, 0x9F	; 159
     1d2:	1d 01       	movw	r2, r26
     1d4:	03 00       	.word	0x0003	; ????
     1d6:	1c 3e       	cpi	r17, 0xEC	; 236
     1d8:	63 41       	sbci	r22, 0x13	; 19
     1da:	51 73       	andi	r21, 0x31	; 49
     1dc:	72 00       	.word	0x0072	; ????
     1de:	7f 7f       	andi	r23, 0xFF	; 255
     1e0:	08 08       	sbc	r0, r8
     1e2:	7f 7f       	andi	r23, 0xFF	; 255
     1e4:	00 00       	nop
     1e6:	00 41       	sbci	r16, 0x10	; 16
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	41 00       	.word	0x0041	; ????
     1ec:	00 00       	nop
     1ee:	30 70       	andi	r19, 0x00	; 0
     1f0:	40 41       	sbci	r20, 0x10	; 16
     1f2:	7f 3f       	cpi	r23, 0xFF	; 255
     1f4:	01 00       	.word	0x0001	; ????
     1f6:	41 7f       	andi	r20, 0xF1	; 241
     1f8:	7f 08       	sbc	r7, r15
     1fa:	1c 77       	andi	r17, 0x7C	; 124
     1fc:	63 00       	.word	0x0063	; ????
     1fe:	41 7f       	andi	r20, 0xF1	; 241
     200:	7f 41       	sbci	r23, 0x1F	; 31
     202:	40 60       	ori	r20, 0x00	; 0
     204:	70 00       	.word	0x0070	; ????
     206:	7f 7f       	andi	r23, 0xFF	; 255
     208:	06 0c       	add	r0, r6
     20a:	06 7f       	andi	r16, 0xF6	; 246
     20c:	7f 00       	.word	0x007f	; ????
     20e:	7f 7f       	andi	r23, 0xFF	; 255
     210:	06 0c       	add	r0, r6
     212:	18 7f       	andi	r17, 0xF8	; 248
     214:	7f 00       	.word	0x007f	; ????
     216:	1c 3e       	cpi	r17, 0xEC	; 236
     218:	63 41       	sbci	r22, 0x13	; 19
     21a:	63 3e       	cpi	r22, 0xE3	; 227
     21c:	1c 00       	.word	0x001c	; ????
     21e:	41 7f       	andi	r20, 0xF1	; 241
     220:	7f 49       	sbci	r23, 0x9F	; 159
     222:	09 0f       	add	r16, r25
     224:	06 00       	.word	0x0006	; ????
     226:	1e 3f       	cpi	r17, 0xFE	; 254
     228:	21 71       	andi	r18, 0x11	; 17
     22a:	7f 5e       	subi	r23, 0xEF	; 239
     22c:	00 00       	nop
     22e:	41 7f       	andi	r20, 0xF1	; 241
     230:	7f 19       	sub	r23, r15
     232:	39 6f       	ori	r19, 0xF9	; 249
     234:	46 00       	.word	0x0046	; ????
     236:	26 67       	ori	r18, 0x76	; 118
     238:	4d 59       	subi	r20, 0x9D	; 157
     23a:	7b 32       	cpi	r23, 0x2B	; 43
     23c:	00 00       	nop
     23e:	03 41       	sbci	r16, 0x13	; 19
     240:	7f 7f       	andi	r23, 0xFF	; 255
     242:	41 03       	mulsu	r20, r17
     244:	00 00       	nop
     246:	7f 7f       	andi	r23, 0xFF	; 255
     248:	40 40       	sbci	r20, 0x00	; 0
     24a:	7f 7f       	andi	r23, 0xFF	; 255
     24c:	00 00       	nop
     24e:	1f 3f       	cpi	r17, 0xFF	; 255
     250:	60 60       	ori	r22, 0x00	; 0
     252:	3f 1f       	adc	r19, r31
     254:	00 00       	nop
     256:	7f 7f       	andi	r23, 0xFF	; 255
     258:	30 18       	sub	r3, r0
     25a:	30 7f       	andi	r19, 0xF0	; 240
     25c:	7f 00       	.word	0x007f	; ????
     25e:	63 77       	andi	r22, 0x73	; 115
     260:	1c 08       	sbc	r1, r12
     262:	1c 77       	andi	r17, 0x7C	; 124
     264:	63 00       	.word	0x0063	; ????
     266:	07 4f       	sbci	r16, 0xF7	; 247
     268:	78 78       	andi	r23, 0x88	; 136
     26a:	4f 07       	cpc	r20, r31
     26c:	00 00       	nop
     26e:	67 73       	andi	r22, 0x37	; 55
     270:	59 4d       	sbci	r21, 0xD9	; 217
     272:	47 63       	ori	r20, 0x37	; 55
     274:	71 00       	.word	0x0071	; ????
     276:	00 7f       	andi	r16, 0xF0	; 240
     278:	7f 41       	sbci	r23, 0x1F	; 31
     27a:	41 00       	.word	0x0041	; ????
     27c:	00 00       	nop
     27e:	01 03       	mulsu	r16, r17
     280:	06 0c       	add	r0, r6
     282:	18 30       	cpi	r17, 0x08	; 8
     284:	60 00       	.word	0x0060	; ????
     286:	00 41       	sbci	r16, 0x10	; 16
     288:	41 7f       	andi	r20, 0xF1	; 241
     28a:	7f 00       	.word	0x007f	; ????
     28c:	00 00       	nop
     28e:	08 0c       	add	r0, r8
     290:	06 03       	mulsu	r16, r22
     292:	06 0c       	add	r0, r6
     294:	08 00       	.word	0x0008	; ????
     296:	80 80       	ld	r8, Z
     298:	80 80       	ld	r8, Z
     29a:	80 80       	ld	r8, Z
     29c:	80 80       	ld	r8, Z
     29e:	00 00       	nop
     2a0:	03 07       	cpc	r16, r19
     2a2:	04 00       	.word	0x0004	; ????
     2a4:	00 00       	nop
     2a6:	20 74       	andi	r18, 0x40	; 64
     2a8:	54 54       	subi	r21, 0x44	; 68
     2aa:	3c 78       	andi	r19, 0x8C	; 140
     2ac:	40 00       	.word	0x0040	; ????
     2ae:	41 3f       	cpi	r20, 0xF1	; 241
     2b0:	7f 44       	sbci	r23, 0x4F	; 79
     2b2:	44 7c       	andi	r20, 0xC4	; 196
     2b4:	38 00       	.word	0x0038	; ????
     2b6:	38 7c       	andi	r19, 0xC8	; 200
     2b8:	44 44       	sbci	r20, 0x44	; 68
     2ba:	6c 28       	or	r6, r12
     2bc:	00 00       	nop
     2be:	30 78       	andi	r19, 0x80	; 128
     2c0:	48 49       	sbci	r20, 0x98	; 152
     2c2:	3f 7f       	andi	r19, 0xFF	; 255
     2c4:	40 00       	.word	0x0040	; ????
     2c6:	38 7c       	andi	r19, 0xC8	; 200
     2c8:	54 54       	subi	r21, 0x44	; 68
     2ca:	5c 18       	sub	r5, r12
     2cc:	00 00       	nop
     2ce:	48 7e       	andi	r20, 0xE8	; 232
     2d0:	7f 49       	sbci	r23, 0x9F	; 159
     2d2:	03 02       	muls	r16, r19
     2d4:	00 00       	nop
     2d6:	98 bc       	out	0x28, r9	; 40
     2d8:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2da:	f8 7c       	andi	r31, 0xC8	; 200
     2dc:	04 00       	.word	0x0004	; ????
     2de:	41 7f       	andi	r20, 0xF1	; 241
     2e0:	7f 08       	sbc	r7, r15
     2e2:	04 7c       	andi	r16, 0xC4	; 196
     2e4:	78 00       	.word	0x0078	; ????
     2e6:	00 44       	sbci	r16, 0x40	; 64
     2e8:	7d 7d       	andi	r23, 0xDD	; 221
     2ea:	40 00       	.word	0x0040	; ????
     2ec:	00 00       	nop
     2ee:	40 c4       	rjmp	.+2176   	; 0xb70 <joystick_direction+0x11a>
     2f0:	84 fd       	sbrc	r24, 4
     2f2:	7d 00       	.word	0x007d	; ????
     2f4:	00 00       	nop
     2f6:	41 7f       	andi	r20, 0xF1	; 241
     2f8:	7f 10       	cpse	r7, r15
     2fa:	38 6c       	ori	r19, 0xC8	; 200
     2fc:	44 00       	.word	0x0044	; ????
     2fe:	00 41       	sbci	r16, 0x10	; 16
     300:	7f 7f       	andi	r23, 0xFF	; 255
     302:	40 00       	.word	0x0040	; ????
     304:	00 00       	nop
     306:	7c 7c       	andi	r23, 0xCC	; 204
     308:	0c 18       	sub	r0, r12
     30a:	0c 7c       	andi	r16, 0xCC	; 204
     30c:	78 00       	.word	0x0078	; ????
     30e:	7c 7c       	andi	r23, 0xCC	; 204
     310:	04 04       	cpc	r0, r4
     312:	7c 78       	andi	r23, 0x8C	; 140
     314:	00 00       	nop
     316:	38 7c       	andi	r19, 0xC8	; 200
     318:	44 44       	sbci	r20, 0x44	; 68
     31a:	7c 38       	cpi	r23, 0x8C	; 140
     31c:	00 00       	nop
     31e:	84 fc       	sbrc	r8, 4
     320:	f8 a4       	ldd	r15, Y+40	; 0x28
     322:	24 3c       	cpi	r18, 0xC4	; 196
     324:	18 00       	.word	0x0018	; ????
     326:	18 3c       	cpi	r17, 0xC8	; 200
     328:	24 a4       	ldd	r2, Z+44	; 0x2c
     32a:	f8 fc       	.word	0xfcf8	; ????
     32c:	84 00       	.word	0x0084	; ????
     32e:	44 7c       	andi	r20, 0xC4	; 196
     330:	78 44       	sbci	r23, 0x48	; 72
     332:	1c 18       	sub	r1, r12
     334:	00 00       	nop
     336:	48 5c       	subi	r20, 0xC8	; 200
     338:	54 54       	subi	r21, 0x44	; 68
     33a:	74 24       	eor	r7, r4
     33c:	00 00       	nop
     33e:	00 04       	cpc	r0, r0
     340:	3e 7f       	andi	r19, 0xFE	; 254
     342:	44 24       	eor	r4, r4
     344:	00 00       	nop
     346:	3c 7c       	andi	r19, 0xCC	; 204
     348:	40 40       	sbci	r20, 0x00	; 0
     34a:	3c 7c       	andi	r19, 0xCC	; 204
     34c:	40 00       	.word	0x0040	; ????
     34e:	1c 3c       	cpi	r17, 0xCC	; 204
     350:	60 60       	ori	r22, 0x00	; 0
     352:	3c 1c       	adc	r3, r12
     354:	00 00       	nop
     356:	3c 7c       	andi	r19, 0xCC	; 204
     358:	60 30       	cpi	r22, 0x00	; 0
     35a:	60 7c       	andi	r22, 0xC0	; 192
     35c:	3c 00       	.word	0x003c	; ????
     35e:	44 6c       	ori	r20, 0xC4	; 196
     360:	38 10       	cpse	r3, r8
     362:	38 6c       	ori	r19, 0xC8	; 200
     364:	44 00       	.word	0x0044	; ????
     366:	9c bc       	out	0x2c, r9	; 44
     368:	a0 a0       	ldd	r10, Z+32	; 0x20
     36a:	fc 7c       	andi	r31, 0xCC	; 204
     36c:	00 00       	nop
     36e:	4c 64       	ori	r20, 0x4C	; 76
     370:	74 5c       	subi	r23, 0xC4	; 196
     372:	4c 64       	ori	r20, 0x4C	; 76
     374:	00 00       	nop
     376:	08 08       	sbc	r0, r8
     378:	3e 77       	andi	r19, 0x7E	; 126
     37a:	41 41       	sbci	r20, 0x11	; 17
     37c:	00 00       	nop
     37e:	00 00       	nop
     380:	00 77       	andi	r16, 0x70	; 112
     382:	77 00       	.word	0x0077	; ????
     384:	00 00       	nop
     386:	41 41       	sbci	r20, 0x11	; 17
     388:	77 3e       	cpi	r23, 0xE7	; 231
     38a:	08 08       	sbc	r0, r8
     38c:	00 00       	nop
     38e:	02 03       	mulsu	r16, r18
     390:	01 03       	mulsu	r16, r17
     392:	02 03       	mulsu	r16, r18
     394:	01 00       	.word	0x0001	; ????

00000396 <__ctors_end>:
     396:	11 24       	eor	r1, r1
     398:	1f be       	out	0x3f, r1	; 63
     39a:	cf ef       	ldi	r28, 0xFF	; 255
     39c:	d4 e0       	ldi	r29, 0x04	; 4
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	cd bf       	out	0x3d, r28	; 61

000003a2 <__do_copy_data>:
     3a2:	11 e0       	ldi	r17, 0x01	; 1
     3a4:	a0 e0       	ldi	r26, 0x00	; 0
     3a6:	b1 e0       	ldi	r27, 0x01	; 1
     3a8:	ea ee       	ldi	r30, 0xEA	; 234
     3aa:	fb e1       	ldi	r31, 0x1B	; 27
     3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <__do_copy_data+0x10>
     3ae:	05 90       	lpm	r0, Z+
     3b0:	0d 92       	st	X+, r0
     3b2:	ae 3d       	cpi	r26, 0xDE	; 222
     3b4:	b1 07       	cpc	r27, r17
     3b6:	d9 f7       	brne	.-10     	; 0x3ae <__do_copy_data+0xc>

000003b8 <__do_clear_bss>:
     3b8:	21 e0       	ldi	r18, 0x01	; 1
     3ba:	ae ed       	ldi	r26, 0xDE	; 222
     3bc:	b1 e0       	ldi	r27, 0x01	; 1
     3be:	01 c0       	rjmp	.+2      	; 0x3c2 <.do_clear_bss_start>

000003c0 <.do_clear_bss_loop>:
     3c0:	1d 92       	st	X+, r1

000003c2 <.do_clear_bss_start>:
     3c2:	a4 3f       	cpi	r26, 0xF4	; 244
     3c4:	b2 07       	cpc	r27, r18
     3c6:	e1 f7       	brne	.-8      	; 0x3c0 <.do_clear_bss_loop>
     3c8:	0e 94 05 06 	call	0xc0a	; 0xc0a <main>
     3cc:	0c 94 f3 0d 	jmp	0x1be6	; 0x1be6 <_exit>

000003d0 <__bad_interrupt>:
     3d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003d4 <ADC_read>:
    uint8_t retreived_value = ext_ram1[adrs];
    if (retreived_value != 0b01010101) {
        printf("ADC error, ext_ram1[%4d] = %02X  \n\r", adrs, retreived_value);
    }
    else{
        printf("ADC success, ext_ram1[%4d] = %02X  \n\r", adrs, retreived_value);
     3d4:	80 68       	ori	r24, 0x80	; 128
     3d6:	e1 e0       	ldi	r30, 0x01	; 1
     3d8:	f4 e1       	ldi	r31, 0x14	; 20
     3da:	80 83       	st	Z, r24
     3dc:	86 ef       	ldi	r24, 0xF6	; 246
     3de:	8a 95       	dec	r24
     3e0:	f1 f7       	brne	.-4      	; 0x3de <ADC_read+0xa>
     3e2:	80 81       	ld	r24, Z
     3e4:	08 95       	ret

000003e6 <ADC_calibrate>:
     3e6:	e1 e0       	ldi	r30, 0x01	; 1
     3e8:	f4 e1       	ldi	r31, 0x14	; 20
     3ea:	20 e8       	ldi	r18, 0x80	; 128
     3ec:	20 83       	st	Z, r18
     3ee:	26 ef       	ldi	r18, 0xF6	; 246
     3f0:	2a 95       	dec	r18
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <ADC_calibrate+0xa>
     3f4:	20 81       	ld	r18, Z
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	dc 01       	movw	r26, r24
     3fa:	2d 93       	st	X+, r18
     3fc:	3c 93       	st	X, r19
     3fe:	21 e8       	ldi	r18, 0x81	; 129
     400:	20 83       	st	Z, r18
     402:	b6 ef       	ldi	r27, 0xF6	; 246
     404:	ba 95       	dec	r27
     406:	f1 f7       	brne	.-4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     408:	20 81       	ld	r18, Z
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	fc 01       	movw	r30, r24
     40e:	33 83       	std	Z+3, r19	; 0x03
     410:	22 83       	std	Z+2, r18	; 0x02
     412:	08 95       	ret

00000414 <ADC_timer_init>:
}


void ADC_timer_init(void) {

    DDRB|=(1<<PB0);  /*set OC0 pin as output*/
     414:	b8 9a       	sbi	0x17, 0	; 23

    TCCR0 |= (1<<WGM01) | (0<<WGM00);
     416:	83 b7       	in	r24, 0x33	; 51
     418:	88 60       	ori	r24, 0x08	; 8
     41a:	83 bf       	out	0x33, r24	; 51
    TCCR0 |= (1<<COM00);
     41c:	83 b7       	in	r24, 0x33	; 51
     41e:	80 61       	ori	r24, 0x10	; 16
     420:	83 bf       	out	0x33, r24	; 51
    TCCR0 |= (1<<CS00);
     422:	83 b7       	in	r24, 0x33	; 51
     424:	81 60       	ori	r24, 0x01	; 1
     426:	83 bf       	out	0x33, r24	; 51

    OCR0 = 0b00000001;
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	81 bf       	out	0x31, r24	; 49
     42c:	08 95       	ret

0000042e <CAN_init>:
     42e:	f8 94       	cli
     430:	85 b7       	in	r24, 0x35	; 53
     432:	82 60       	ori	r24, 0x02	; 2
     434:	85 bf       	out	0x35, r24	; 53
     436:	85 b7       	in	r24, 0x35	; 53
     438:	8e 7f       	andi	r24, 0xFE	; 254
     43a:	85 bf       	out	0x35, r24	; 53
     43c:	8b b7       	in	r24, 0x3b	; 59
     43e:	80 64       	ori	r24, 0x40	; 64
     440:	8b bf       	out	0x3b, r24	; 59
     442:	78 94       	sei
     444:	80 e8       	ldi	r24, 0x80	; 128
     446:	0e 94 04 03 	call	0x608	; 0x608 <mcp_init>
     44a:	63 e0       	ldi	r22, 0x03	; 3
     44c:	8b e2       	ldi	r24, 0x2B	; 43
     44e:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     452:	61 e8       	ldi	r22, 0x81	; 129
     454:	8a e2       	ldi	r24, 0x2A	; 42
     456:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     45a:	6d ea       	ldi	r22, 0xAD	; 173
     45c:	89 e2       	ldi	r24, 0x29	; 41
     45e:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     462:	65 e0       	ldi	r22, 0x05	; 5
     464:	88 e2       	ldi	r24, 0x28	; 40
     466:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     46a:	80 e0       	ldi	r24, 0x00	; 0
     46c:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <mcp_set_mode>
     470:	08 95       	ret

00000472 <__vector_1>:
     472:	1f 92       	push	r1
     474:	0f 92       	push	r0
     476:	0f b6       	in	r0, 0x3f	; 63
     478:	0f 92       	push	r0
     47a:	11 24       	eor	r1, r1
     47c:	8f 93       	push	r24
     47e:	9f 93       	push	r25
     480:	81 e0       	ldi	r24, 0x01	; 1
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <__data_end+0x1>
     488:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <__data_end>
     48c:	9f 91       	pop	r25
     48e:	8f 91       	pop	r24
     490:	0f 90       	pop	r0
     492:	0f be       	out	0x3f, r0	; 63
     494:	0f 90       	pop	r0
     496:	1f 90       	pop	r1
     498:	18 95       	reti

0000049a <CAN_message_transmission>:
     49a:	0f 93       	push	r16
     49c:	1f 93       	push	r17
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	8c 01       	movw	r16, r24
     4a4:	fc 01       	movw	r30, r24
     4a6:	c0 81       	ld	r28, Z
     4a8:	d1 81       	ldd	r29, Z+1	; 0x01
     4aa:	6c 2f       	mov	r22, r28
     4ac:	62 95       	swap	r22
     4ae:	66 0f       	add	r22, r22
     4b0:	60 7e       	andi	r22, 0xE0	; 224
     4b2:	82 e3       	ldi	r24, 0x32	; 50
     4b4:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     4b8:	be 01       	movw	r22, r28
     4ba:	76 95       	lsr	r23
     4bc:	67 95       	ror	r22
     4be:	76 95       	lsr	r23
     4c0:	67 95       	ror	r22
     4c2:	76 95       	lsr	r23
     4c4:	67 95       	ror	r22
     4c6:	81 e3       	ldi	r24, 0x31	; 49
     4c8:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     4cc:	f8 01       	movw	r30, r16
     4ce:	62 81       	ldd	r22, Z+2	; 0x02
     4d0:	85 e3       	ldi	r24, 0x35	; 53
     4d2:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     4d6:	f8 01       	movw	r30, r16
     4d8:	82 81       	ldd	r24, Z+2	; 0x02
     4da:	88 23       	and	r24, r24
     4dc:	71 f0       	breq	.+28     	; 0x4fa <CAN_message_transmission+0x60>
     4de:	c0 e0       	ldi	r28, 0x00	; 0
     4e0:	f8 01       	movw	r30, r16
     4e2:	ec 0f       	add	r30, r28
     4e4:	f1 1d       	adc	r31, r1
     4e6:	63 81       	ldd	r22, Z+3	; 0x03
     4e8:	86 e3       	ldi	r24, 0x36	; 54
     4ea:	8c 0f       	add	r24, r28
     4ec:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     4f0:	cf 5f       	subi	r28, 0xFF	; 255
     4f2:	f8 01       	movw	r30, r16
     4f4:	82 81       	ldd	r24, Z+2	; 0x02
     4f6:	c8 17       	cp	r28, r24
     4f8:	98 f3       	brcs	.-26     	; 0x4e0 <CAN_message_transmission+0x46>
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	0e 94 40 03 	call	0x680	; 0x680 <mcp_request_to_send>
     500:	df 91       	pop	r29
     502:	cf 91       	pop	r28
     504:	1f 91       	pop	r17
     506:	0f 91       	pop	r16
     508:	08 95       	ret

0000050a <joyStick_Can_Message>:
 *  Author: Herbe
 */ 
#include "CAN_joystick_messages.h"


void joyStick_Can_Message(){
     50a:	ef 92       	push	r14
     50c:	ff 92       	push	r15
     50e:	0f 93       	push	r16
     510:	1f 93       	push	r17
     512:	cf 93       	push	r28
     514:	df 93       	push	r29
     516:	cd b7       	in	r28, 0x3d	; 61
     518:	de b7       	in	r29, 0x3e	; 62
     51a:	2b 97       	sbiw	r28, 0x0b	; 11
     51c:	0f b6       	in	r0, 0x3f	; 63
     51e:	f8 94       	cli
     520:	de bf       	out	0x3e, r29	; 62
     522:	0f be       	out	0x3f, r0	; 63
     524:	cd bf       	out	0x3d, r28	; 61
	
pos_read(&P_pos); //Reads the current position of the joystick
     526:	84 ee       	ldi	r24, 0xE4	; 228
     528:	91 e0       	ldi	r25, 0x01	; 1
     52a:	0e 94 3c 04 	call	0x878	; 0x878 <pos_read>

uint8_t sendSliderRight = ADC_read(2);  
     52e:	82 e0       	ldi	r24, 0x02	; 2
     530:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     534:	e8 2e       	mov	r14, r24
uint8_t sendPosX = 128 + P_pos.posX;  //Adding 128 to not have negative a number
     536:	e4 ee       	ldi	r30, 0xE4	; 228
     538:	f1 e0       	ldi	r31, 0x01	; 1
     53a:	80 81       	ld	r24, Z
     53c:	68 94       	set
     53e:	ff 24       	eor	r15, r15
     540:	f7 f8       	bld	r15, 7
     542:	f8 0e       	add	r15, r24
uint8_t sendPosY = 128 + P_pos.posY;  //Adding 128 to not have negative a number
     544:	02 81       	ldd	r16, Z+2	; 0x02
     546:	00 58       	subi	r16, 0x80	; 128
uint8_t sendJoyButton = usb_button_pushed(JOYSTICK_BUTTON);
     548:	82 e0       	ldi	r24, 0x02	; 2
     54a:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <usb_button_pushed>
     54e:	18 2f       	mov	r17, r24
uint8_t sendJoyDirection = (joystick_direction()) << 1; //shift right to not disturb rest of message
     550:	0e 94 2b 05 	call	0xa56	; 0xa56 <joystick_direction>

uint8_t sendJoyData = sendJoyDirection + sendJoyButton;  //Combining button-bushed and joystick-direction in one byte.

CAN_message_t joyStickData;
joyStickData.identifier = 0;
     554:	1a 82       	std	Y+2, r1	; 0x02
     556:	19 82       	std	Y+1, r1	; 0x01
joyStickData.data[0] = sendPosX;
     558:	fc 82       	std	Y+4, r15	; 0x04
joyStickData.data[1] = sendPosY;
     55a:	0d 83       	std	Y+5, r16	; 0x05
joyStickData.data[2] = sendJoyData;
     55c:	88 0f       	add	r24, r24
     55e:	18 0f       	add	r17, r24
     560:	1e 83       	std	Y+6, r17	; 0x06
joyStickData.data[3] = sendSliderRight;
     562:	ef 82       	std	Y+7, r14	; 0x07
joyStickData.data_length = 4;
     564:	84 e0       	ldi	r24, 0x04	; 4
     566:	8b 83       	std	Y+3, r24	; 0x03

CAN_message_transmission(&joyStickData);
     568:	ce 01       	movw	r24, r28
     56a:	01 96       	adiw	r24, 0x01	; 1
     56c:	0e 94 4d 02 	call	0x49a	; 0x49a <CAN_message_transmission>
     570:	2b 96       	adiw	r28, 0x0b	; 11
     572:	0f b6       	in	r0, 0x3f	; 63
     574:	f8 94       	cli
     576:	de bf       	out	0x3e, r29	; 62
     578:	0f be       	out	0x3f, r0	; 63
     57a:	cd bf       	out	0x3d, r28	; 61
     57c:	df 91       	pop	r29
     57e:	cf 91       	pop	r28
     580:	1f 91       	pop	r17
     582:	0f 91       	pop	r16
     584:	ff 90       	pop	r15
     586:	ef 90       	pop	r14
     588:	08 95       	ret

0000058a <spi_master_CS>:
     58a:	81 11       	cpse	r24, r1
     58c:	02 c0       	rjmp	.+4      	; 0x592 <spi_master_CS+0x8>
     58e:	c4 98       	cbi	0x18, 4	; 24
     590:	08 95       	ret
     592:	c4 9a       	sbi	0x18, 4	; 24
     594:	08 95       	ret

00000596 <mcp_write>:
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	d8 2f       	mov	r29, r24
     59c:	c6 2f       	mov	r28, r22
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	0e 94 c5 02 	call	0x58a	; 0x58a <spi_master_CS>
     5a4:	82 e0       	ldi	r24, 0x02	; 2
     5a6:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     5aa:	8d 2f       	mov	r24, r29
     5ac:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     5b0:	8c 2f       	mov	r24, r28
     5b2:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     5b6:	81 e0       	ldi	r24, 0x01	; 1
     5b8:	0e 94 c5 02 	call	0x58a	; 0x58a <spi_master_CS>
     5bc:	df 91       	pop	r29
     5be:	cf 91       	pop	r28
     5c0:	08 95       	ret

000005c2 <mcp_set_mode>:
     5c2:	68 2f       	mov	r22, r24
     5c4:	8f e0       	ldi	r24, 0x0F	; 15
     5c6:	0e 94 cb 02 	call	0x596	; 0x596 <mcp_write>
     5ca:	08 95       	ret

000005cc <mcp_read>:
     5cc:	cf 93       	push	r28
     5ce:	c8 2f       	mov	r28, r24
     5d0:	80 e0       	ldi	r24, 0x00	; 0
     5d2:	0e 94 c5 02 	call	0x58a	; 0x58a <spi_master_CS>
     5d6:	83 e0       	ldi	r24, 0x03	; 3
     5d8:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     5dc:	8c 2f       	mov	r24, r28
     5de:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     5e2:	0e 94 50 06 	call	0xca0	; 0xca0 <spi_read>
     5e6:	c8 2f       	mov	r28, r24
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	0e 94 c5 02 	call	0x58a	; 0x58a <spi_master_CS>
     5ee:	8c 2f       	mov	r24, r28
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <mcp_reset>:
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	0e 94 c5 02 	call	0x58a	; 0x58a <spi_master_CS>
     5fa:	80 ec       	ldi	r24, 0xC0	; 192
     5fc:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     600:	81 e0       	ldi	r24, 0x01	; 1
     602:	0e 94 c5 02 	call	0x58a	; 0x58a <spi_master_CS>
     606:	08 95       	ret

00000608 <mcp_init>:
     608:	cf 93       	push	r28
     60a:	df 93       	push	r29
     60c:	d8 2f       	mov	r29, r24
     60e:	0e 94 55 06 	call	0xcaa	; 0xcaa <spi_init>
     612:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <mcp_reset>
     616:	80 e8       	ldi	r24, 0x80	; 128
     618:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <mcp_set_mode>
     61c:	8f ef       	ldi	r24, 0xFF	; 255
     61e:	9f e8       	ldi	r25, 0x8F	; 143
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	f1 f7       	brne	.-4      	; 0x620 <mcp_init+0x18>
     624:	00 c0       	rjmp	.+0      	; 0x626 <mcp_init+0x1e>
     626:	00 00       	nop
     628:	8e e0       	ldi	r24, 0x0E	; 14
     62a:	0e 94 e6 02 	call	0x5cc	; 0x5cc <mcp_read>
     62e:	c8 2f       	mov	r28, r24
     630:	1f 92       	push	r1
     632:	8f 93       	push	r24
     634:	8a e0       	ldi	r24, 0x0A	; 10
     636:	91 e0       	ldi	r25, 0x01	; 1
     638:	9f 93       	push	r25
     63a:	8f 93       	push	r24
     63c:	0e 94 a1 09 	call	0x1342	; 0x1342 <printf>
     640:	c0 7e       	andi	r28, 0xE0	; 224
     642:	0f 90       	pop	r0
     644:	0f 90       	pop	r0
     646:	0f 90       	pop	r0
     648:	0f 90       	pop	r0
     64a:	c0 38       	cpi	r28, 0x80	; 128
     64c:	31 f0       	breq	.+12     	; 0x65a <mcp_init+0x52>
     64e:	86 e1       	ldi	r24, 0x16	; 22
     650:	91 e0       	ldi	r25, 0x01	; 1
     652:	0e 94 b7 09 	call	0x136e	; 0x136e <puts>
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	10 c0       	rjmp	.+32     	; 0x67a <mcp_init+0x72>
     65a:	8d 2f       	mov	r24, r29
     65c:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <mcp_set_mode>
     660:	8e e0       	ldi	r24, 0x0E	; 14
     662:	0e 94 e6 02 	call	0x5cc	; 0x5cc <mcp_read>
     666:	80 7e       	andi	r24, 0xE0	; 224
     668:	8d 17       	cp	r24, r29
     66a:	31 f0       	breq	.+12     	; 0x678 <mcp_init+0x70>
     66c:	88 e4       	ldi	r24, 0x48	; 72
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	0e 94 b7 09 	call	0x136e	; 0x136e <puts>
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	01 c0       	rjmp	.+2      	; 0x67a <mcp_init+0x72>
     678:	80 e0       	ldi	r24, 0x00	; 0
     67a:	df 91       	pop	r29
     67c:	cf 91       	pop	r28
     67e:	08 95       	ret

00000680 <mcp_request_to_send>:
     680:	cf 93       	push	r28
     682:	c8 2f       	mov	r28, r24
     684:	80 e0       	ldi	r24, 0x00	; 0
     686:	0e 94 c5 02 	call	0x58a	; 0x58a <spi_master_CS>
     68a:	c1 30       	cpi	r28, 0x01	; 1
     68c:	41 f0       	breq	.+16     	; 0x69e <mcp_request_to_send+0x1e>
     68e:	18 f0       	brcs	.+6      	; 0x696 <mcp_request_to_send+0x16>
     690:	c2 30       	cpi	r28, 0x02	; 2
     692:	49 f0       	breq	.+18     	; 0x6a6 <mcp_request_to_send+0x26>
     694:	0c c0       	rjmp	.+24     	; 0x6ae <mcp_request_to_send+0x2e>
     696:	81 e8       	ldi	r24, 0x81	; 129
     698:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     69c:	0b c0       	rjmp	.+22     	; 0x6b4 <mcp_request_to_send+0x34>
     69e:	82 e8       	ldi	r24, 0x82	; 130
     6a0:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     6a4:	07 c0       	rjmp	.+14     	; 0x6b4 <mcp_request_to_send+0x34>
     6a6:	84 e8       	ldi	r24, 0x84	; 132
     6a8:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     6ac:	03 c0       	rjmp	.+6      	; 0x6b4 <mcp_request_to_send+0x34>
     6ae:	87 e8       	ldi	r24, 0x87	; 135
     6b0:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	0e 94 c5 02 	call	0x58a	; 0x58a <spi_master_CS>
     6ba:	cf 91       	pop	r28
     6bc:	08 95       	ret

000006be <oled_sel_row>:
     6be:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <oled_position>
     6c2:	87 70       	andi	r24, 0x07	; 7
     6c4:	80 55       	subi	r24, 0x50	; 80
     6c6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     6ca:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     6ce:	80 83       	st	Z, r24
     6d0:	08 95       	ret

000006d2 <oled_sel_col>:
     6d2:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <oled_position+0x1>
     6d6:	98 2f       	mov	r25, r24
     6d8:	9f 70       	andi	r25, 0x0F	; 15
     6da:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     6de:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     6e2:	90 83       	st	Z, r25
     6e4:	82 95       	swap	r24
     6e6:	8f 70       	andi	r24, 0x0F	; 15
     6e8:	80 5f       	subi	r24, 0xF0	; 240
     6ea:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     6ee:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     6f2:	80 83       	st	Z, r24
     6f4:	08 95       	ret

000006f6 <oled_line_down>:
     6f6:	80 55       	subi	r24, 0x50	; 80
     6f8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     6fc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     700:	80 83       	st	Z, r24
     702:	08 95       	ret

00000704 <oled_pos_set>:
     704:	cf 93       	push	r28
     706:	c6 2f       	mov	r28, r22
     708:	0e 94 5f 03 	call	0x6be	; 0x6be <oled_sel_row>
     70c:	8c 2f       	mov	r24, r28
     70e:	0e 94 69 03 	call	0x6d2	; 0x6d2 <oled_sel_col>
     712:	cf 91       	pop	r28
     714:	08 95       	ret

00000716 <oled_home>:
     716:	60 e0       	ldi	r22, 0x00	; 0
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	0e 94 82 03 	call	0x704	; 0x704 <oled_pos_set>
     71e:	08 95       	ret

00000720 <oled_clear>:
     720:	1f 93       	push	r17
     722:	cf 93       	push	r28
     724:	df 93       	push	r29
     726:	10 e0       	ldi	r17, 0x00	; 0
     728:	c6 ea       	ldi	r28, 0xA6	; 166
     72a:	d0 e0       	ldi	r29, 0x00	; 0
     72c:	81 2f       	mov	r24, r17
     72e:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <oled_line_down>
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	0d c0       	rjmp	.+26     	; 0x750 <oled_clear+0x30>
     736:	84 91       	lpm	r24, Z
     738:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <oled_write_data>
     73c:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <oled_write_data+0x1>
     740:	8c 93       	st	X, r24
     742:	31 96       	adiw	r30, 0x01	; 1
     744:	ec 17       	cp	r30, r28
     746:	fd 07       	cpc	r31, r29
     748:	b1 f7       	brne	.-20     	; 0x736 <oled_clear+0x16>
     74a:	9f 5f       	subi	r25, 0xFF	; 255
     74c:	90 38       	cpi	r25, 0x80	; 128
     74e:	19 f0       	breq	.+6      	; 0x756 <oled_clear+0x36>
     750:	ee e9       	ldi	r30, 0x9E	; 158
     752:	f0 e0       	ldi	r31, 0x00	; 0
     754:	f0 cf       	rjmp	.-32     	; 0x736 <oled_clear+0x16>
     756:	1f 5f       	subi	r17, 0xFF	; 255
     758:	18 30       	cpi	r17, 0x08	; 8
     75a:	41 f7       	brne	.-48     	; 0x72c <oled_clear+0xc>
     75c:	0e 94 8b 03 	call	0x716	; 0x716 <oled_home>
     760:	df 91       	pop	r29
     762:	cf 91       	pop	r28
     764:	1f 91       	pop	r17
     766:	08 95       	ret

00000768 <OLED_init>:
     768:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     76c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     770:	8e ea       	ldi	r24, 0xAE	; 174
     772:	80 83       	st	Z, r24
     774:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     778:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     77c:	81 ea       	ldi	r24, 0xA1	; 161
     77e:	80 83       	st	Z, r24
     780:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     784:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     788:	8a ed       	ldi	r24, 0xDA	; 218
     78a:	80 83       	st	Z, r24
     78c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     790:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     794:	82 e1       	ldi	r24, 0x12	; 18
     796:	80 83       	st	Z, r24
     798:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     79c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7a0:	88 ec       	ldi	r24, 0xC8	; 200
     7a2:	80 83       	st	Z, r24
     7a4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7a8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7ac:	88 ea       	ldi	r24, 0xA8	; 168
     7ae:	80 83       	st	Z, r24
     7b0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7b4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7b8:	8f e3       	ldi	r24, 0x3F	; 63
     7ba:	80 83       	st	Z, r24
     7bc:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7c0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7c4:	85 ed       	ldi	r24, 0xD5	; 213
     7c6:	80 83       	st	Z, r24
     7c8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7cc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7d0:	80 e8       	ldi	r24, 0x80	; 128
     7d2:	80 83       	st	Z, r24
     7d4:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7d8:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7dc:	81 e8       	ldi	r24, 0x81	; 129
     7de:	80 83       	st	Z, r24
     7e0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7e4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7e8:	80 e5       	ldi	r24, 0x50	; 80
     7ea:	80 83       	st	Z, r24
     7ec:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7f0:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     7f4:	89 ed       	ldi	r24, 0xD9	; 217
     7f6:	80 83       	st	Z, r24
     7f8:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     7fc:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     800:	81 e2       	ldi	r24, 0x21	; 33
     802:	80 83       	st	Z, r24
     804:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     808:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     80c:	80 e2       	ldi	r24, 0x20	; 32
     80e:	80 83       	st	Z, r24
     810:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     814:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     818:	82 e0       	ldi	r24, 0x02	; 2
     81a:	80 83       	st	Z, r24
     81c:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     820:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     824:	8b ed       	ldi	r24, 0xDB	; 219
     826:	80 83       	st	Z, r24
     828:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     82c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     830:	80 e3       	ldi	r24, 0x30	; 48
     832:	80 83       	st	Z, r24
     834:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     838:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     83c:	8d ea       	ldi	r24, 0xAD	; 173
     83e:	80 83       	st	Z, r24
     840:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     844:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     848:	10 82       	st	Z, r1
     84a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     84e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     852:	84 ea       	ldi	r24, 0xA4	; 164
     854:	80 83       	st	Z, r24
     856:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     85a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     85e:	86 ea       	ldi	r24, 0xA6	; 166
     860:	80 83       	st	Z, r24
     862:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     866:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     86a:	8f ea       	ldi	r24, 0xAF	; 175
     86c:	80 83       	st	Z, r24
     86e:	0e 94 90 03 	call	0x720	; 0x720 <oled_clear>
     872:	0e 94 8b 03 	call	0x716	; 0x716 <oled_home>
     876:	08 95       	ret

00000878 <pos_read>:
#include <avr/io.h>
#include <stdio.h>
#include "pos_read.h"


void pos_read(position* pos){
     878:	8f 92       	push	r8
     87a:	9f 92       	push	r9
     87c:	af 92       	push	r10
     87e:	bf 92       	push	r11
     880:	cf 92       	push	r12
     882:	df 92       	push	r13
     884:	ef 92       	push	r14
     886:	ff 92       	push	r15
     888:	0f 93       	push	r16
     88a:	1f 93       	push	r17
     88c:	cf 93       	push	r28
     88e:	df 93       	push	r29
     890:	7c 01       	movw	r14, r24

    int ADC_Y = ADC_read(0);
     892:	80 e0       	ldi	r24, 0x00	; 0
     894:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     898:	c8 2f       	mov	r28, r24
     89a:	d0 e0       	ldi	r29, 0x00	; 0
    int ADC_X = ADC_read(1);
     89c:	81 e0       	ldi	r24, 0x01	; 1
     89e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     8a2:	68 2f       	mov	r22, r24
     8a4:	70 e0       	ldi	r23, 0x00	; 0

    // X read

    if((ADC_X >= (P_cal.center_X - 10)) && (ADC_X <= (P_cal.center_X + 10))){ //Deadspace for joystick
     8a6:	00 91 e0 01 	lds	r16, 0x01E0	; 0x8001e0 <P_cal>
     8aa:	10 91 e1 01 	lds	r17, 0x01E1	; 0x8001e1 <P_cal+0x1>
     8ae:	c8 01       	movw	r24, r16
     8b0:	0a 97       	sbiw	r24, 0x0a	; 10
     8b2:	68 17       	cp	r22, r24
     8b4:	79 07       	cpc	r23, r25
     8b6:	0c f4       	brge	.+2      	; 0x8ba <pos_read+0x42>
     8b8:	b4 c0       	rjmp	.+360    	; 0xa22 <pos_read+0x1aa>
     8ba:	44 96       	adiw	r24, 0x14	; 20
     8bc:	86 17       	cp	r24, r22
     8be:	97 07       	cpc	r25, r23
     8c0:	0c f0       	brlt	.+2      	; 0x8c4 <pos_read+0x4c>
     8c2:	4c c0       	rjmp	.+152    	; 0x95c <pos_read+0xe4>
        ADC_X = 0;
    }
    else if(ADC_X > (P_cal.center_X + 10)){
        ADC_X = (ADC_X - P_cal.center_X) * 100.0 / (255.0 - P_cal.center_X);  //
     8c4:	60 1b       	sub	r22, r16
     8c6:	71 0b       	sbc	r23, r17
     8c8:	07 2e       	mov	r0, r23
     8ca:	00 0c       	add	r0, r0
     8cc:	88 0b       	sbc	r24, r24
     8ce:	99 0b       	sbc	r25, r25
     8d0:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     8d4:	20 e0       	ldi	r18, 0x00	; 0
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	48 ec       	ldi	r20, 0xC8	; 200
     8da:	52 e4       	ldi	r21, 0x42	; 66
     8dc:	0e 94 e5 08 	call	0x11ca	; 0x11ca <__mulsf3>
     8e0:	4b 01       	movw	r8, r22
     8e2:	5c 01       	movw	r10, r24
     8e4:	b8 01       	movw	r22, r16
     8e6:	11 0f       	add	r17, r17
     8e8:	88 0b       	sbc	r24, r24
     8ea:	99 0b       	sbc	r25, r25
     8ec:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     8f0:	9b 01       	movw	r18, r22
     8f2:	ac 01       	movw	r20, r24
     8f4:	60 e0       	ldi	r22, 0x00	; 0
     8f6:	70 e0       	ldi	r23, 0x00	; 0
     8f8:	8f e7       	ldi	r24, 0x7F	; 127
     8fa:	93 e4       	ldi	r25, 0x43	; 67
     8fc:	0e 94 73 06 	call	0xce6	; 0xce6 <__subsf3>
     900:	9b 01       	movw	r18, r22
     902:	ac 01       	movw	r20, r24
     904:	c5 01       	movw	r24, r10
     906:	b4 01       	movw	r22, r8
     908:	0e 94 57 07 	call	0xeae	; 0xeae <__divsf3>
     90c:	0e 94 c9 07 	call	0xf92	; 0xf92 <__fixsfsi>
     910:	6b 01       	movw	r12, r22
     912:	26 c0       	rjmp	.+76     	; 0x960 <pos_read+0xe8>
    }

    else if (ADC_X < (P_cal.center_X - 10)){
        ADC_X = (ADC_X / ((float)P_cal.center_X)) * 100 - 100;   // // Scaling when value is larger then center value
     914:	07 2e       	mov	r0, r23
     916:	00 0c       	add	r0, r0
     918:	88 0b       	sbc	r24, r24
     91a:	99 0b       	sbc	r25, r25
     91c:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     920:	4b 01       	movw	r8, r22
     922:	5c 01       	movw	r10, r24
     924:	b8 01       	movw	r22, r16
     926:	11 0f       	add	r17, r17
     928:	88 0b       	sbc	r24, r24
     92a:	99 0b       	sbc	r25, r25
     92c:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     930:	9b 01       	movw	r18, r22
     932:	ac 01       	movw	r20, r24
     934:	c5 01       	movw	r24, r10
     936:	b4 01       	movw	r22, r8
     938:	0e 94 57 07 	call	0xeae	; 0xeae <__divsf3>
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	48 ec       	ldi	r20, 0xC8	; 200
     942:	52 e4       	ldi	r21, 0x42	; 66
     944:	0e 94 e5 08 	call	0x11ca	; 0x11ca <__mulsf3>
     948:	20 e0       	ldi	r18, 0x00	; 0
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	48 ec       	ldi	r20, 0xC8	; 200
     94e:	52 e4       	ldi	r21, 0x42	; 66
     950:	0e 94 73 06 	call	0xce6	; 0xce6 <__subsf3>
     954:	0e 94 c9 07 	call	0xf92	; 0xf92 <__fixsfsi>
     958:	6b 01       	movw	r12, r22
     95a:	02 c0       	rjmp	.+4      	; 0x960 <pos_read+0xe8>
    int ADC_X = ADC_read(1);

    // X read

    if((ADC_X >= (P_cal.center_X - 10)) && (ADC_X <= (P_cal.center_X + 10))){ //Deadspace for joystick
        ADC_X = 0;
     95c:	c1 2c       	mov	r12, r1
     95e:	d1 2c       	mov	r13, r1
        ADC_X = (ADC_X / ((float)P_cal.center_X)) * 100 - 100;   // // Scaling when value is larger then center value
    }

    // Y read

    if(ADC_Y >= (P_cal.center_Y - 10) && ADC_Y <= (P_cal.center_Y + 10)){  //Deadspace for joystick
     960:	00 91 e2 01 	lds	r16, 0x01E2	; 0x8001e2 <P_cal+0x2>
     964:	10 91 e3 01 	lds	r17, 0x01E3	; 0x8001e3 <P_cal+0x3>
     968:	c8 01       	movw	r24, r16
     96a:	0a 97       	sbiw	r24, 0x0a	; 10
     96c:	c8 17       	cp	r28, r24
     96e:	d9 07       	cpc	r29, r25
     970:	0c f4       	brge	.+2      	; 0x974 <pos_read+0xfc>
     972:	5e c0       	rjmp	.+188    	; 0xa30 <pos_read+0x1b8>
     974:	44 96       	adiw	r24, 0x14	; 20
     976:	8c 17       	cp	r24, r28
     978:	9d 07       	cpc	r25, r29
     97a:	0c f0       	brlt	.+2      	; 0x97e <pos_read+0x106>
     97c:	4a c0       	rjmp	.+148    	; 0xa12 <pos_read+0x19a>
        ADC_Y = 0;
    }
    else if(ADC_Y > (P_cal.center_Y + 10)){
        ADC_Y = (ADC_Y - (P_cal.center_Y)) * 100.0 / (255.0 - P_cal.center_Y);  // Scaling when value is larger then center value
     97e:	c0 1b       	sub	r28, r16
     980:	d1 0b       	sbc	r29, r17
     982:	be 01       	movw	r22, r28
     984:	dd 0f       	add	r29, r29
     986:	88 0b       	sbc	r24, r24
     988:	99 0b       	sbc	r25, r25
     98a:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     98e:	20 e0       	ldi	r18, 0x00	; 0
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	48 ec       	ldi	r20, 0xC8	; 200
     994:	52 e4       	ldi	r21, 0x42	; 66
     996:	0e 94 e5 08 	call	0x11ca	; 0x11ca <__mulsf3>
     99a:	4b 01       	movw	r8, r22
     99c:	5c 01       	movw	r10, r24
     99e:	b8 01       	movw	r22, r16
     9a0:	11 0f       	add	r17, r17
     9a2:	88 0b       	sbc	r24, r24
     9a4:	99 0b       	sbc	r25, r25
     9a6:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     9aa:	9b 01       	movw	r18, r22
     9ac:	ac 01       	movw	r20, r24
     9ae:	60 e0       	ldi	r22, 0x00	; 0
     9b0:	70 e0       	ldi	r23, 0x00	; 0
     9b2:	8f e7       	ldi	r24, 0x7F	; 127
     9b4:	93 e4       	ldi	r25, 0x43	; 67
     9b6:	0e 94 73 06 	call	0xce6	; 0xce6 <__subsf3>
     9ba:	9b 01       	movw	r18, r22
     9bc:	ac 01       	movw	r20, r24
     9be:	c5 01       	movw	r24, r10
     9c0:	b4 01       	movw	r22, r8
     9c2:	0e 94 57 07 	call	0xeae	; 0xeae <__divsf3>
     9c6:	0e 94 c9 07 	call	0xf92	; 0xf92 <__fixsfsi>
     9ca:	25 c0       	rjmp	.+74     	; 0xa16 <pos_read+0x19e>
    }

    else if (ADC_Y < (P_cal.center_Y - 10)){
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
     9cc:	be 01       	movw	r22, r28
     9ce:	dd 0f       	add	r29, r29
     9d0:	88 0b       	sbc	r24, r24
     9d2:	99 0b       	sbc	r25, r25
     9d4:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     9d8:	4b 01       	movw	r8, r22
     9da:	5c 01       	movw	r10, r24
     9dc:	b8 01       	movw	r22, r16
     9de:	11 0f       	add	r17, r17
     9e0:	88 0b       	sbc	r24, r24
     9e2:	99 0b       	sbc	r25, r25
     9e4:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     9e8:	9b 01       	movw	r18, r22
     9ea:	ac 01       	movw	r20, r24
     9ec:	c5 01       	movw	r24, r10
     9ee:	b4 01       	movw	r22, r8
     9f0:	0e 94 57 07 	call	0xeae	; 0xeae <__divsf3>
     9f4:	20 e0       	ldi	r18, 0x00	; 0
     9f6:	30 e0       	ldi	r19, 0x00	; 0
     9f8:	48 ec       	ldi	r20, 0xC8	; 200
     9fa:	52 e4       	ldi	r21, 0x42	; 66
     9fc:	0e 94 e5 08 	call	0x11ca	; 0x11ca <__mulsf3>
     a00:	20 e0       	ldi	r18, 0x00	; 0
     a02:	30 e0       	ldi	r19, 0x00	; 0
     a04:	48 ec       	ldi	r20, 0xC8	; 200
     a06:	52 e4       	ldi	r21, 0x42	; 66
     a08:	0e 94 73 06 	call	0xce6	; 0xce6 <__subsf3>
     a0c:	0e 94 c9 07 	call	0xf92	; 0xf92 <__fixsfsi>
     a10:	02 c0       	rjmp	.+4      	; 0xa16 <pos_read+0x19e>
    }

    // Y read

    if(ADC_Y >= (P_cal.center_Y - 10) && ADC_Y <= (P_cal.center_Y + 10)){  //Deadspace for joystick
        ADC_Y = 0;
     a12:	60 e0       	ldi	r22, 0x00	; 0
     a14:	70 e0       	ldi	r23, 0x00	; 0

    else if (ADC_Y < (P_cal.center_Y - 10)){
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
    }

    pos -> posX = ADC_X;
     a16:	f7 01       	movw	r30, r14
     a18:	d1 82       	std	Z+1, r13	; 0x01
     a1a:	c0 82       	st	Z, r12
    pos -> posY = ADC_Y;
     a1c:	73 83       	std	Z+3, r23	; 0x03
     a1e:	62 83       	std	Z+2, r22	; 0x02
}
     a20:	0d c0       	rjmp	.+26     	; 0xa3c <pos_read+0x1c4>
    // X read

    if((ADC_X >= (P_cal.center_X - 10)) && (ADC_X <= (P_cal.center_X + 10))){ //Deadspace for joystick
        ADC_X = 0;
    }
    else if(ADC_X > (P_cal.center_X + 10)){
     a22:	c8 01       	movw	r24, r16
     a24:	0a 96       	adiw	r24, 0x0a	; 10
     a26:	86 17       	cp	r24, r22
     a28:	97 07       	cpc	r25, r23
     a2a:	0c f4       	brge	.+2      	; 0xa2e <pos_read+0x1b6>
     a2c:	4b cf       	rjmp	.-362    	; 0x8c4 <pos_read+0x4c>
     a2e:	72 cf       	rjmp	.-284    	; 0x914 <pos_read+0x9c>
    // Y read

    if(ADC_Y >= (P_cal.center_Y - 10) && ADC_Y <= (P_cal.center_Y + 10)){  //Deadspace for joystick
        ADC_Y = 0;
    }
    else if(ADC_Y > (P_cal.center_Y + 10)){
     a30:	c8 01       	movw	r24, r16
     a32:	0a 96       	adiw	r24, 0x0a	; 10
     a34:	8c 17       	cp	r24, r28
     a36:	9d 07       	cpc	r25, r29
     a38:	4c f6       	brge	.-110    	; 0x9cc <pos_read+0x154>
     a3a:	a1 cf       	rjmp	.-190    	; 0x97e <pos_read+0x106>
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
    }

    pos -> posX = ADC_X;
    pos -> posY = ADC_Y;
}
     a3c:	df 91       	pop	r29
     a3e:	cf 91       	pop	r28
     a40:	1f 91       	pop	r17
     a42:	0f 91       	pop	r16
     a44:	ff 90       	pop	r15
     a46:	ef 90       	pop	r14
     a48:	df 90       	pop	r13
     a4a:	cf 90       	pop	r12
     a4c:	bf 90       	pop	r11
     a4e:	af 90       	pop	r10
     a50:	9f 90       	pop	r9
     a52:	8f 90       	pop	r8
     a54:	08 95       	ret

00000a56 <joystick_direction>:

DIRECTION joystick_direction(void){
     a56:	8f 92       	push	r8
     a58:	9f 92       	push	r9
     a5a:	af 92       	push	r10
     a5c:	bf 92       	push	r11
     a5e:	cf 92       	push	r12
     a60:	df 92       	push	r13
     a62:	ef 92       	push	r14
     a64:	ff 92       	push	r15
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29

    pos_read(&P_pos);
     a6a:	84 ee       	ldi	r24, 0xE4	; 228
     a6c:	91 e0       	ldi	r25, 0x01	; 1
     a6e:	0e 94 3c 04 	call	0x878	; 0x878 <pos_read>

    int angle = atan2(P_pos.posY, P_pos.posX);
     a72:	e4 ee       	ldi	r30, 0xE4	; 228
     a74:	f1 e0       	ldi	r31, 0x01	; 1
     a76:	e0 80       	ld	r14, Z
     a78:	f1 80       	ldd	r15, Z+1	; 0x01
     a7a:	c2 81       	ldd	r28, Z+2	; 0x02
     a7c:	d3 81       	ldd	r29, Z+3	; 0x03
     a7e:	b7 01       	movw	r22, r14
     a80:	0f 2c       	mov	r0, r15
     a82:	00 0c       	add	r0, r0
     a84:	88 0b       	sbc	r24, r24
     a86:	99 0b       	sbc	r25, r25
     a88:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     a8c:	4b 01       	movw	r8, r22
     a8e:	5c 01       	movw	r10, r24
     a90:	be 01       	movw	r22, r28
     a92:	0d 2e       	mov	r0, r29
     a94:	00 0c       	add	r0, r0
     a96:	88 0b       	sbc	r24, r24
     a98:	99 0b       	sbc	r25, r25
     a9a:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     a9e:	a5 01       	movw	r20, r10
     aa0:	94 01       	movw	r18, r8
     aa2:	0e 94 f3 06 	call	0xde6	; 0xde6 <atan2>

    if(!P_pos.posY & !P_pos.posX){
     aa6:	21 e0       	ldi	r18, 0x01	; 1
     aa8:	cd 2b       	or	r28, r29
     aaa:	09 f0       	breq	.+2      	; 0xaae <joystick_direction+0x58>
     aac:	20 e0       	ldi	r18, 0x00	; 0
     aae:	22 23       	and	r18, r18
     ab0:	31 f0       	breq	.+12     	; 0xabe <joystick_direction+0x68>
     ab2:	21 e0       	ldi	r18, 0x01	; 1
     ab4:	ef 28       	or	r14, r15
     ab6:	09 f0       	breq	.+2      	; 0xaba <joystick_direction+0x64>
     ab8:	20 e0       	ldi	r18, 0x00	; 0
     aba:	21 11       	cpse	r18, r1
     abc:	79 c0       	rjmp	.+242    	; 0xbb0 <joystick_direction+0x15a>
        return NEUTRAL;
    }

    else if(angle >= -PI / 4.0 & angle <= PI/4.0){
     abe:	0e 94 c9 07 	call	0xf92	; 0xf92 <__fixsfsi>
     ac2:	07 2e       	mov	r0, r23
     ac4:	00 0c       	add	r0, r0
     ac6:	88 0b       	sbc	r24, r24
     ac8:	99 0b       	sbc	r25, r25
     aca:	0e 94 01 08 	call	0x1002	; 0x1002 <__floatsisf>
     ace:	6b 01       	movw	r12, r22
     ad0:	7c 01       	movw	r14, r24
     ad2:	c1 e0       	ldi	r28, 0x01	; 1
     ad4:	2b ed       	ldi	r18, 0xDB	; 219
     ad6:	3f e0       	ldi	r19, 0x0F	; 15
     ad8:	49 e4       	ldi	r20, 0x49	; 73
     ada:	5f eb       	ldi	r21, 0xBF	; 191
     adc:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__gesf2>
     ae0:	88 23       	and	r24, r24
     ae2:	0c f4       	brge	.+2      	; 0xae6 <joystick_direction+0x90>
     ae4:	c0 e0       	ldi	r28, 0x00	; 0
     ae6:	cc 23       	and	r28, r28
     ae8:	71 f0       	breq	.+28     	; 0xb06 <joystick_direction+0xb0>
     aea:	c1 e0       	ldi	r28, 0x01	; 1
     aec:	2b ed       	ldi	r18, 0xDB	; 219
     aee:	3f e0       	ldi	r19, 0x0F	; 15
     af0:	49 e4       	ldi	r20, 0x49	; 73
     af2:	5f e3       	ldi	r21, 0x3F	; 63
     af4:	c7 01       	movw	r24, r14
     af6:	b6 01       	movw	r22, r12
     af8:	0e 94 52 07 	call	0xea4	; 0xea4 <__cmpsf2>
     afc:	18 16       	cp	r1, r24
     afe:	0c f4       	brge	.+2      	; 0xb02 <joystick_direction+0xac>
     b00:	c0 e0       	ldi	r28, 0x00	; 0
     b02:	c1 11       	cpse	r28, r1
     b04:	57 c0       	rjmp	.+174    	; 0xbb4 <joystick_direction+0x15e>
        return RIGHT;
    }

    else if(angle >= -3 * PI/4.0 & angle <= -PI / 4.0){
     b06:	c1 e0       	ldi	r28, 0x01	; 1
     b08:	24 ee       	ldi	r18, 0xE4	; 228
     b0a:	3b ec       	ldi	r19, 0xCB	; 203
     b0c:	46 e1       	ldi	r20, 0x16	; 22
     b0e:	50 ec       	ldi	r21, 0xC0	; 192
     b10:	c7 01       	movw	r24, r14
     b12:	b6 01       	movw	r22, r12
     b14:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__gesf2>
     b18:	88 23       	and	r24, r24
     b1a:	0c f4       	brge	.+2      	; 0xb1e <joystick_direction+0xc8>
     b1c:	c0 e0       	ldi	r28, 0x00	; 0
     b1e:	cc 23       	and	r28, r28
     b20:	71 f0       	breq	.+28     	; 0xb3e <joystick_direction+0xe8>
     b22:	c1 e0       	ldi	r28, 0x01	; 1
     b24:	2b ed       	ldi	r18, 0xDB	; 219
     b26:	3f e0       	ldi	r19, 0x0F	; 15
     b28:	49 e4       	ldi	r20, 0x49	; 73
     b2a:	5f eb       	ldi	r21, 0xBF	; 191
     b2c:	c7 01       	movw	r24, r14
     b2e:	b6 01       	movw	r22, r12
     b30:	0e 94 52 07 	call	0xea4	; 0xea4 <__cmpsf2>
     b34:	18 16       	cp	r1, r24
     b36:	0c f4       	brge	.+2      	; 0xb3a <joystick_direction+0xe4>
     b38:	c0 e0       	ldi	r28, 0x00	; 0
     b3a:	c1 11       	cpse	r28, r1
     b3c:	3d c0       	rjmp	.+122    	; 0xbb8 <joystick_direction+0x162>
        return DOWN;
    }

    else if(angle >= 3 * PI/4 | angle <= -3* PI / 4.0){
     b3e:	c1 e0       	ldi	r28, 0x01	; 1
     b40:	24 ee       	ldi	r18, 0xE4	; 228
     b42:	3b ec       	ldi	r19, 0xCB	; 203
     b44:	46 e1       	ldi	r20, 0x16	; 22
     b46:	50 e4       	ldi	r21, 0x40	; 64
     b48:	c7 01       	movw	r24, r14
     b4a:	b6 01       	movw	r22, r12
     b4c:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__gesf2>
     b50:	88 23       	and	r24, r24
     b52:	0c f4       	brge	.+2      	; 0xb56 <joystick_direction+0x100>
     b54:	c0 e0       	ldi	r28, 0x00	; 0
     b56:	c1 11       	cpse	r28, r1
     b58:	31 c0       	rjmp	.+98     	; 0xbbc <joystick_direction+0x166>
     b5a:	c1 e0       	ldi	r28, 0x01	; 1
     b5c:	24 ee       	ldi	r18, 0xE4	; 228
     b5e:	3b ec       	ldi	r19, 0xCB	; 203
     b60:	46 e1       	ldi	r20, 0x16	; 22
     b62:	50 ec       	ldi	r21, 0xC0	; 192
     b64:	c7 01       	movw	r24, r14
     b66:	b6 01       	movw	r22, r12
     b68:	0e 94 52 07 	call	0xea4	; 0xea4 <__cmpsf2>
     b6c:	18 16       	cp	r1, r24
     b6e:	0c f4       	brge	.+2      	; 0xb72 <joystick_direction+0x11c>
     b70:	c0 e0       	ldi	r28, 0x00	; 0
     b72:	c1 11       	cpse	r28, r1
     b74:	23 c0       	rjmp	.+70     	; 0xbbc <joystick_direction+0x166>
        return LEFT;
    }

    else if(angle >= PI / 4 & angle <= 3*PI / 4.0){
     b76:	c1 e0       	ldi	r28, 0x01	; 1
     b78:	2b ed       	ldi	r18, 0xDB	; 219
     b7a:	3f e0       	ldi	r19, 0x0F	; 15
     b7c:	49 e4       	ldi	r20, 0x49	; 73
     b7e:	5f e3       	ldi	r21, 0x3F	; 63
     b80:	c7 01       	movw	r24, r14
     b82:	b6 01       	movw	r22, r12
     b84:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <__gesf2>
     b88:	88 23       	and	r24, r24
     b8a:	0c f4       	brge	.+2      	; 0xb8e <joystick_direction+0x138>
     b8c:	c0 e0       	ldi	r28, 0x00	; 0
     b8e:	cc 23       	and	r28, r28
     b90:	71 f0       	breq	.+28     	; 0xbae <joystick_direction+0x158>
     b92:	c1 e0       	ldi	r28, 0x01	; 1
     b94:	24 ee       	ldi	r18, 0xE4	; 228
     b96:	3b ec       	ldi	r19, 0xCB	; 203
     b98:	46 e1       	ldi	r20, 0x16	; 22
     b9a:	50 e4       	ldi	r21, 0x40	; 64
     b9c:	c7 01       	movw	r24, r14
     b9e:	b6 01       	movw	r22, r12
     ba0:	0e 94 52 07 	call	0xea4	; 0xea4 <__cmpsf2>
     ba4:	18 16       	cp	r1, r24
     ba6:	0c f4       	brge	.+2      	; 0xbaa <joystick_direction+0x154>
     ba8:	c0 e0       	ldi	r28, 0x00	; 0
     baa:	c1 11       	cpse	r28, r1
     bac:	09 c0       	rjmp	.+18     	; 0xbc0 <joystick_direction+0x16a>
        return UP;
    }
}
     bae:	09 c0       	rjmp	.+18     	; 0xbc2 <joystick_direction+0x16c>
    pos_read(&P_pos);

    int angle = atan2(P_pos.posY, P_pos.posX);

    if(!P_pos.posY & !P_pos.posX){
        return NEUTRAL;
     bb0:	84 e0       	ldi	r24, 0x04	; 4
     bb2:	07 c0       	rjmp	.+14     	; 0xbc2 <joystick_direction+0x16c>
    }

    else if(angle >= -PI / 4.0 & angle <= PI/4.0){
        return RIGHT;
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	05 c0       	rjmp	.+10     	; 0xbc2 <joystick_direction+0x16c>
    }

    else if(angle >= -3 * PI/4.0 & angle <= -PI / 4.0){
        return DOWN;
     bb8:	83 e0       	ldi	r24, 0x03	; 3
     bba:	03 c0       	rjmp	.+6      	; 0xbc2 <joystick_direction+0x16c>
    }

    else if(angle >= 3 * PI/4 | angle <= -3* PI / 4.0){
        return LEFT;
     bbc:	80 e0       	ldi	r24, 0x00	; 0
     bbe:	01 c0       	rjmp	.+2      	; 0xbc2 <joystick_direction+0x16c>
    }

    else if(angle >= PI / 4 & angle <= 3*PI / 4.0){
        return UP;
     bc0:	82 e0       	ldi	r24, 0x02	; 2
    }
}
     bc2:	df 91       	pop	r29
     bc4:	cf 91       	pop	r28
     bc6:	ff 90       	pop	r15
     bc8:	ef 90       	pop	r14
     bca:	df 90       	pop	r13
     bcc:	cf 90       	pop	r12
     bce:	bf 90       	pop	r11
     bd0:	af 90       	pop	r10
     bd2:	9f 90       	pop	r9
     bd4:	8f 90       	pop	r8
     bd6:	08 95       	ret

00000bd8 <pos_readSettings>:

void pos_readSettings(void){
DDRB &= ~(1 << PB1);
     bd8:	b9 98       	cbi	0x17, 1	; 23
DDRD &= ~(1 << PD4);
     bda:	8c 98       	cbi	0x11, 4	; 17
DDRD &= ~(1 << PD5);
     bdc:	8d 98       	cbi	0x11, 5	; 17

PORTB |= (1 << PB1); // internal pull up enable
     bde:	c1 9a       	sbi	0x18, 1	; 24
     be0:	08 95       	ret

00000be2 <usb_button_pushed>:

uint8_t usb_button_pushed(USB_BUTTON BUTTON){

    uint8_t pressed;

    if(BUTTON == LEFT_BUTTON){
     be2:	81 30       	cpi	r24, 0x01	; 1
     be4:	19 f4       	brne	.+6      	; 0xbec <usb_button_pushed+0xa>

//        DDRD &= ~(1 << PD4);

        pressed = (PIND & (1 << PD4) );
     be6:	80 b3       	in	r24, 0x10	; 16
     be8:	80 71       	andi	r24, 0x10	; 16
     bea:	08 95       	ret

    }

    if(BUTTON == RIGHT_BUTTON){
     bec:	81 11       	cpse	r24, r1
     bee:	03 c0       	rjmp	.+6      	; 0xbf6 <usb_button_pushed+0x14>

//        DDRD &= ~(1 << PD5);

        pressed =  (PIND & (1 << PD5) );
     bf0:	80 b3       	in	r24, 0x10	; 16
     bf2:	80 72       	andi	r24, 0x20	; 32
     bf4:	08 95       	ret
    }

    if(BUTTON == JOYSTICK_BUTTON){
     bf6:	82 30       	cpi	r24, 0x02	; 2
     bf8:	31 f4       	brne	.+12     	; 0xc06 <usb_button_pushed+0x24>

        pressed =  (PINB & (1 << PB1) );
     bfa:	86 b3       	in	r24, 0x16	; 22
        return !pressed;
     bfc:	86 95       	lsr	r24
     bfe:	81 70       	andi	r24, 0x01	; 1
     c00:	91 e0       	ldi	r25, 0x01	; 1
     c02:	89 27       	eor	r24, r25
     c04:	08 95       	ret
     c06:	80 e0       	ldi	r24, 0x00	; 0
     }


    return pressed;
}
     c08:	08 95       	ret

00000c0a <main>:


int main(void)
{
    
    SRAM_init();
     c0a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <SRAM_init>
    ADC_timer_init();
     c0e:	0e 94 0a 02 	call	0x414	; 0x414 <ADC_timer_init>
    USART_init();
     c12:	0e 94 63 06 	call	0xcc6	; 0xcc6 <USART_init>
    fdevopen(USART_send, USART_receive);
     c16:	6b e6       	ldi	r22, 0x6B	; 107
     c18:	76 e0       	ldi	r23, 0x06	; 6
     c1a:	8f e6       	ldi	r24, 0x6F	; 111
     c1c:	96 e0       	ldi	r25, 0x06	; 6
     c1e:	0e 94 56 09 	call	0x12ac	; 0x12ac <fdevopen>
    ADC_calibrate(&P_cal);
     c22:	80 ee       	ldi	r24, 0xE0	; 224
     c24:	91 e0       	ldi	r25, 0x01	; 1
     c26:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <ADC_calibrate>
    OLED_init();
     c2a:	0e 94 b4 03 	call	0x768	; 0x768 <OLED_init>
    pos_readSettings();
     c2e:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <pos_readSettings>
    oled_clear();
     c32:	0e 94 90 03 	call	0x720	; 0x720 <oled_clear>
    //menu();
    //CAN_init(MODE_LOOPBACK);
    //CAN_communication_test();
    //mcp_init(MODE_LOOPBACK);
    //uint8_t r;
    CAN_init(MODE_NORMAL);
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	0e 94 17 02 	call	0x42e	; 0x42e <CAN_init>
    test_message.data[1] = 'E';
    test_message.data[2] = 'I';
    test_message.data_length = 3;
    
    CAN_message_t revieve_message;
    printf("Initiating node 1 \n\r");
     c3c:	83 e8       	ldi	r24, 0x83	; 131
     c3e:	91 e0       	ldi	r25, 0x01	; 1
     c40:	9f 93       	push	r25
     c42:	8f 93       	push	r24
     c44:	0e 94 a1 09 	call	0x1342	; 0x1342 <printf>
     c48:	0f 90       	pop	r0
     c4a:	0f 90       	pop	r0
        //    char test = spi_read();
        //    printf("test is:  %d \n \r", test);

        
        //printf("Right button pressed: %d , Left button pressed: %d  joy button pressed: %d \r", usb_button_pushed(RIGHT_BUTTON), usb_button_pushed(LEFT_BUTTON), usb_button_pushed(JOYSTICK_BUTTON) );
        printf("Pos X val is %4d , Pos Y is %4d, sliderX is %4d,  sliderY is %4d  \n \r", P_pos.posX, P_pos.posY, sliderX, sliderY);
     c4c:	c4 ee       	ldi	r28, 0xE4	; 228
     c4e:	d1 e0       	ldi	r29, 0x01	; 1
     c50:	08 e9       	ldi	r16, 0x98	; 152
     c52:	11 e0       	ldi	r17, 0x01	; 1
       //uint8_t joyButton = usb_button_pushed(JOYSTICK_BUTTON);
       //uint8_t joyDirection = joystick_direction(); 
       //pos_read(&P_pos);
       //printf("X = %d Y = %d, joybutton = %d, joydirection = %d \n\r", P_pos.posX, P_pos.posY, joyButton, joyDirection);
       //printf("Bro");
	   joyStick_Can_Message();
     c54:	0e 94 85 02 	call	0x50a	; 0x50a <joyStick_Can_Message>
        
        //printf("Lengden er : %d\n\r Dataen er: %d\n\r ID'en er: %d\n\r", revieve_message.data_length, revieve_message.data[0], revieve_message.data_length);
        
        //pos_read(&P_pos);
        //
        uint8_t sliderX = ADC_read(3);
     c58:	83 e0       	ldi	r24, 0x03	; 3
     c5a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     c5e:	f8 2e       	mov	r15, r24
        uint8_t sliderY = ADC_read(2);
     c60:	82 e0       	ldi	r24, 0x02	; 2
     c62:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
        //    char test = spi_read();
        //    printf("test is:  %d \n \r", test);

        
        //printf("Right button pressed: %d , Left button pressed: %d  joy button pressed: %d \r", usb_button_pushed(RIGHT_BUTTON), usb_button_pushed(LEFT_BUTTON), usb_button_pushed(JOYSTICK_BUTTON) );
        printf("Pos X val is %4d , Pos Y is %4d, sliderX is %4d,  sliderY is %4d  \n \r", P_pos.posX, P_pos.posY, sliderX, sliderY);
     c66:	1f 92       	push	r1
     c68:	8f 93       	push	r24
     c6a:	1f 92       	push	r1
     c6c:	ff 92       	push	r15
     c6e:	8b 81       	ldd	r24, Y+3	; 0x03
     c70:	8f 93       	push	r24
     c72:	8a 81       	ldd	r24, Y+2	; 0x02
     c74:	8f 93       	push	r24
     c76:	89 81       	ldd	r24, Y+1	; 0x01
     c78:	8f 93       	push	r24
     c7a:	88 81       	ld	r24, Y
     c7c:	8f 93       	push	r24
     c7e:	1f 93       	push	r17
     c80:	0f 93       	push	r16
     c82:	0e 94 a1 09 	call	0x1342	; 0x1342 <printf>
     c86:	8d b7       	in	r24, 0x3d	; 61
     c88:	9e b7       	in	r25, 0x3e	; 62
     c8a:	0a 96       	adiw	r24, 0x0a	; 10
     c8c:	0f b6       	in	r0, 0x3f	; 63
     c8e:	f8 94       	cli
     c90:	9e bf       	out	0x3e, r25	; 62
     c92:	0f be       	out	0x3f, r0	; 63
     c94:	8d bf       	out	0x3d, r24	; 61
     c96:	de cf       	rjmp	.-68     	; 0xc54 <main+0x4a>

00000c98 <spi_write>:
     c98:	8f b9       	out	0x0f, r24	; 15
     c9a:	77 9b       	sbis	0x0e, 7	; 14
     c9c:	fe cf       	rjmp	.-4      	; 0xc9a <spi_write+0x2>
     c9e:	08 95       	ret

00000ca0 <spi_read>:
     ca0:	86 e5       	ldi	r24, 0x56	; 86
     ca2:	0e 94 4c 06 	call	0xc98	; 0xc98 <spi_write>
     ca6:	8f b1       	in	r24, 0x0f	; 15
     ca8:	08 95       	ret

00000caa <spi_init>:
     caa:	87 b3       	in	r24, 0x17	; 23
     cac:	80 6b       	ori	r24, 0xB0	; 176
     cae:	87 bb       	out	0x17, r24	; 23
     cb0:	8d b1       	in	r24, 0x0d	; 13
     cb2:	81 65       	ori	r24, 0x51	; 81
     cb4:	8d b9       	out	0x0d, r24	; 13
     cb6:	08 95       	ret

00000cb8 <SRAM_init>:
     cb8:	85 b7       	in	r24, 0x35	; 53
     cba:	80 68       	ori	r24, 0x80	; 128
     cbc:	85 bf       	out	0x35, r24	; 53
     cbe:	80 b7       	in	r24, 0x30	; 48
     cc0:	80 62       	ori	r24, 0x20	; 32
     cc2:	80 bf       	out	0x30, r24	; 48
     cc4:	08 95       	ret

00000cc6 <USART_init>:
     cc6:	8f e1       	ldi	r24, 0x1F	; 31
     cc8:	89 b9       	out	0x09, r24	; 9
     cca:	10 bc       	out	0x20, r1	; 32
     ccc:	88 e1       	ldi	r24, 0x18	; 24
     cce:	8a b9       	out	0x0a, r24	; 10
     cd0:	8e e8       	ldi	r24, 0x8E	; 142
     cd2:	80 bd       	out	0x20, r24	; 32
     cd4:	08 95       	ret

00000cd6 <USART_receive>:
     cd6:	5f 9b       	sbis	0x0b, 7	; 11
     cd8:	fe cf       	rjmp	.-4      	; 0xcd6 <USART_receive>
     cda:	8c b1       	in	r24, 0x0c	; 12
     cdc:	08 95       	ret

00000cde <USART_send>:
     cde:	5d 9b       	sbis	0x0b, 5	; 11
     ce0:	fe cf       	rjmp	.-4      	; 0xcde <USART_send>
     ce2:	8c b9       	out	0x0c, r24	; 12
     ce4:	08 95       	ret

00000ce6 <__subsf3>:
     ce6:	50 58       	subi	r21, 0x80	; 128

00000ce8 <__addsf3>:
     ce8:	bb 27       	eor	r27, r27
     cea:	aa 27       	eor	r26, r26
     cec:	0e 94 8b 06 	call	0xd16	; 0xd16 <__addsf3x>
     cf0:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__fp_round>
     cf4:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_pscA>
     cf8:	38 f0       	brcs	.+14     	; 0xd08 <__addsf3+0x20>
     cfa:	0e 94 97 08 	call	0x112e	; 0x112e <__fp_pscB>
     cfe:	20 f0       	brcs	.+8      	; 0xd08 <__addsf3+0x20>
     d00:	39 f4       	brne	.+14     	; 0xd10 <__addsf3+0x28>
     d02:	9f 3f       	cpi	r25, 0xFF	; 255
     d04:	19 f4       	brne	.+6      	; 0xd0c <__addsf3+0x24>
     d06:	26 f4       	brtc	.+8      	; 0xd10 <__addsf3+0x28>
     d08:	0c 94 66 08 	jmp	0x10cc	; 0x10cc <__fp_nan>
     d0c:	0e f4       	brtc	.+2      	; 0xd10 <__addsf3+0x28>
     d0e:	e0 95       	com	r30
     d10:	e7 fb       	bst	r30, 7
     d12:	0c 94 60 08 	jmp	0x10c0	; 0x10c0 <__fp_inf>

00000d16 <__addsf3x>:
     d16:	e9 2f       	mov	r30, r25
     d18:	0e 94 af 08 	call	0x115e	; 0x115e <__fp_split3>
     d1c:	58 f3       	brcs	.-42     	; 0xcf4 <__addsf3+0xc>
     d1e:	ba 17       	cp	r27, r26
     d20:	62 07       	cpc	r22, r18
     d22:	73 07       	cpc	r23, r19
     d24:	84 07       	cpc	r24, r20
     d26:	95 07       	cpc	r25, r21
     d28:	20 f0       	brcs	.+8      	; 0xd32 <__addsf3x+0x1c>
     d2a:	79 f4       	brne	.+30     	; 0xd4a <__addsf3x+0x34>
     d2c:	a6 f5       	brtc	.+104    	; 0xd96 <__addsf3x+0x80>
     d2e:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__fp_zero>
     d32:	0e f4       	brtc	.+2      	; 0xd36 <__addsf3x+0x20>
     d34:	e0 95       	com	r30
     d36:	0b 2e       	mov	r0, r27
     d38:	ba 2f       	mov	r27, r26
     d3a:	a0 2d       	mov	r26, r0
     d3c:	0b 01       	movw	r0, r22
     d3e:	b9 01       	movw	r22, r18
     d40:	90 01       	movw	r18, r0
     d42:	0c 01       	movw	r0, r24
     d44:	ca 01       	movw	r24, r20
     d46:	a0 01       	movw	r20, r0
     d48:	11 24       	eor	r1, r1
     d4a:	ff 27       	eor	r31, r31
     d4c:	59 1b       	sub	r21, r25
     d4e:	99 f0       	breq	.+38     	; 0xd76 <__addsf3x+0x60>
     d50:	59 3f       	cpi	r21, 0xF9	; 249
     d52:	50 f4       	brcc	.+20     	; 0xd68 <__addsf3x+0x52>
     d54:	50 3e       	cpi	r21, 0xE0	; 224
     d56:	68 f1       	brcs	.+90     	; 0xdb2 <__addsf3x+0x9c>
     d58:	1a 16       	cp	r1, r26
     d5a:	f0 40       	sbci	r31, 0x00	; 0
     d5c:	a2 2f       	mov	r26, r18
     d5e:	23 2f       	mov	r18, r19
     d60:	34 2f       	mov	r19, r20
     d62:	44 27       	eor	r20, r20
     d64:	58 5f       	subi	r21, 0xF8	; 248
     d66:	f3 cf       	rjmp	.-26     	; 0xd4e <__addsf3x+0x38>
     d68:	46 95       	lsr	r20
     d6a:	37 95       	ror	r19
     d6c:	27 95       	ror	r18
     d6e:	a7 95       	ror	r26
     d70:	f0 40       	sbci	r31, 0x00	; 0
     d72:	53 95       	inc	r21
     d74:	c9 f7       	brne	.-14     	; 0xd68 <__addsf3x+0x52>
     d76:	7e f4       	brtc	.+30     	; 0xd96 <__addsf3x+0x80>
     d78:	1f 16       	cp	r1, r31
     d7a:	ba 0b       	sbc	r27, r26
     d7c:	62 0b       	sbc	r22, r18
     d7e:	73 0b       	sbc	r23, r19
     d80:	84 0b       	sbc	r24, r20
     d82:	ba f0       	brmi	.+46     	; 0xdb2 <__addsf3x+0x9c>
     d84:	91 50       	subi	r25, 0x01	; 1
     d86:	a1 f0       	breq	.+40     	; 0xdb0 <__addsf3x+0x9a>
     d88:	ff 0f       	add	r31, r31
     d8a:	bb 1f       	adc	r27, r27
     d8c:	66 1f       	adc	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	88 1f       	adc	r24, r24
     d92:	c2 f7       	brpl	.-16     	; 0xd84 <__addsf3x+0x6e>
     d94:	0e c0       	rjmp	.+28     	; 0xdb2 <__addsf3x+0x9c>
     d96:	ba 0f       	add	r27, r26
     d98:	62 1f       	adc	r22, r18
     d9a:	73 1f       	adc	r23, r19
     d9c:	84 1f       	adc	r24, r20
     d9e:	48 f4       	brcc	.+18     	; 0xdb2 <__addsf3x+0x9c>
     da0:	87 95       	ror	r24
     da2:	77 95       	ror	r23
     da4:	67 95       	ror	r22
     da6:	b7 95       	ror	r27
     da8:	f7 95       	ror	r31
     daa:	9e 3f       	cpi	r25, 0xFE	; 254
     dac:	08 f0       	brcs	.+2      	; 0xdb0 <__addsf3x+0x9a>
     dae:	b0 cf       	rjmp	.-160    	; 0xd10 <__addsf3+0x28>
     db0:	93 95       	inc	r25
     db2:	88 0f       	add	r24, r24
     db4:	08 f0       	brcs	.+2      	; 0xdb8 <__addsf3x+0xa2>
     db6:	99 27       	eor	r25, r25
     db8:	ee 0f       	add	r30, r30
     dba:	97 95       	ror	r25
     dbc:	87 95       	ror	r24
     dbe:	08 95       	ret
     dc0:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_pscA>
     dc4:	60 f0       	brcs	.+24     	; 0xdde <__addsf3x+0xc8>
     dc6:	80 e8       	ldi	r24, 0x80	; 128
     dc8:	91 e0       	ldi	r25, 0x01	; 1
     dca:	09 f4       	brne	.+2      	; 0xdce <__addsf3x+0xb8>
     dcc:	9e ef       	ldi	r25, 0xFE	; 254
     dce:	0e 94 97 08 	call	0x112e	; 0x112e <__fp_pscB>
     dd2:	28 f0       	brcs	.+10     	; 0xdde <__addsf3x+0xc8>
     dd4:	40 e8       	ldi	r20, 0x80	; 128
     dd6:	51 e0       	ldi	r21, 0x01	; 1
     dd8:	71 f4       	brne	.+28     	; 0xdf6 <atan2+0x10>
     dda:	5e ef       	ldi	r21, 0xFE	; 254
     ddc:	0c c0       	rjmp	.+24     	; 0xdf6 <atan2+0x10>
     dde:	0c 94 66 08 	jmp	0x10cc	; 0x10cc <__fp_nan>
     de2:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__fp_zero>

00000de6 <atan2>:
     de6:	e9 2f       	mov	r30, r25
     de8:	e0 78       	andi	r30, 0x80	; 128
     dea:	0e 94 af 08 	call	0x115e	; 0x115e <__fp_split3>
     dee:	40 f3       	brcs	.-48     	; 0xdc0 <__addsf3x+0xaa>
     df0:	09 2e       	mov	r0, r25
     df2:	05 2a       	or	r0, r21
     df4:	b1 f3       	breq	.-20     	; 0xde2 <__addsf3x+0xcc>
     df6:	26 17       	cp	r18, r22
     df8:	37 07       	cpc	r19, r23
     dfa:	48 07       	cpc	r20, r24
     dfc:	59 07       	cpc	r21, r25
     dfe:	38 f0       	brcs	.+14     	; 0xe0e <atan2+0x28>
     e00:	0e 2e       	mov	r0, r30
     e02:	07 f8       	bld	r0, 7
     e04:	e0 25       	eor	r30, r0
     e06:	69 f0       	breq	.+26     	; 0xe22 <atan2+0x3c>
     e08:	e0 25       	eor	r30, r0
     e0a:	e0 64       	ori	r30, 0x40	; 64
     e0c:	0a c0       	rjmp	.+20     	; 0xe22 <atan2+0x3c>
     e0e:	ef 63       	ori	r30, 0x3F	; 63
     e10:	07 f8       	bld	r0, 7
     e12:	00 94       	com	r0
     e14:	07 fa       	bst	r0, 7
     e16:	db 01       	movw	r26, r22
     e18:	b9 01       	movw	r22, r18
     e1a:	9d 01       	movw	r18, r26
     e1c:	dc 01       	movw	r26, r24
     e1e:	ca 01       	movw	r24, r20
     e20:	ad 01       	movw	r20, r26
     e22:	ef 93       	push	r30
     e24:	0e 94 6e 07 	call	0xedc	; 0xedc <__divsf3_pse>
     e28:	0e 94 9e 08 	call	0x113c	; 0x113c <__fp_round>
     e2c:	0e 94 23 07 	call	0xe46	; 0xe46 <atan>
     e30:	5f 91       	pop	r21
     e32:	55 23       	and	r21, r21
     e34:	39 f0       	breq	.+14     	; 0xe44 <atan2+0x5e>
     e36:	2b ed       	ldi	r18, 0xDB	; 219
     e38:	3f e0       	ldi	r19, 0x0F	; 15
     e3a:	49 e4       	ldi	r20, 0x49	; 73
     e3c:	50 fd       	sbrc	r21, 0
     e3e:	49 ec       	ldi	r20, 0xC9	; 201
     e40:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__addsf3>
     e44:	08 95       	ret

00000e46 <atan>:
     e46:	df 93       	push	r29
     e48:	dd 27       	eor	r29, r29
     e4a:	b9 2f       	mov	r27, r25
     e4c:	bf 77       	andi	r27, 0x7F	; 127
     e4e:	40 e8       	ldi	r20, 0x80	; 128
     e50:	5f e3       	ldi	r21, 0x3F	; 63
     e52:	16 16       	cp	r1, r22
     e54:	17 06       	cpc	r1, r23
     e56:	48 07       	cpc	r20, r24
     e58:	5b 07       	cpc	r21, r27
     e5a:	18 f4       	brcc	.+6      	; 0xe62 <atan+0x1c>
     e5c:	d9 2f       	mov	r29, r25
     e5e:	0e 94 dd 08 	call	0x11ba	; 0x11ba <inverse>
     e62:	9f 93       	push	r25
     e64:	8f 93       	push	r24
     e66:	7f 93       	push	r23
     e68:	6f 93       	push	r22
     e6a:	0e 94 52 09 	call	0x12a4	; 0x12a4 <square>
     e6e:	e0 e7       	ldi	r30, 0x70	; 112
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	0e 94 69 08 	call	0x10d2	; 0x10d2 <__fp_powser>
     e76:	0e 94 9e 08 	call	0x113c	; 0x113c <__fp_round>
     e7a:	2f 91       	pop	r18
     e7c:	3f 91       	pop	r19
     e7e:	4f 91       	pop	r20
     e80:	5f 91       	pop	r21
     e82:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__mulsf3x>
     e86:	dd 23       	and	r29, r29
     e88:	51 f0       	breq	.+20     	; 0xe9e <atan+0x58>
     e8a:	90 58       	subi	r25, 0x80	; 128
     e8c:	a2 ea       	ldi	r26, 0xA2	; 162
     e8e:	2a ed       	ldi	r18, 0xDA	; 218
     e90:	3f e0       	ldi	r19, 0x0F	; 15
     e92:	49 ec       	ldi	r20, 0xC9	; 201
     e94:	5f e3       	ldi	r21, 0x3F	; 63
     e96:	d0 78       	andi	r29, 0x80	; 128
     e98:	5d 27       	eor	r21, r29
     e9a:	0e 94 8b 06 	call	0xd16	; 0xd16 <__addsf3x>
     e9e:	df 91       	pop	r29
     ea0:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__fp_round>

00000ea4 <__cmpsf2>:
     ea4:	0e 94 3c 08 	call	0x1078	; 0x1078 <__fp_cmp>
     ea8:	08 f4       	brcc	.+2      	; 0xeac <__cmpsf2+0x8>
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	08 95       	ret

00000eae <__divsf3>:
     eae:	0e 94 6b 07 	call	0xed6	; 0xed6 <__divsf3x>
     eb2:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__fp_round>
     eb6:	0e 94 97 08 	call	0x112e	; 0x112e <__fp_pscB>
     eba:	58 f0       	brcs	.+22     	; 0xed2 <__divsf3+0x24>
     ebc:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_pscA>
     ec0:	40 f0       	brcs	.+16     	; 0xed2 <__divsf3+0x24>
     ec2:	29 f4       	brne	.+10     	; 0xece <__divsf3+0x20>
     ec4:	5f 3f       	cpi	r21, 0xFF	; 255
     ec6:	29 f0       	breq	.+10     	; 0xed2 <__divsf3+0x24>
     ec8:	0c 94 60 08 	jmp	0x10c0	; 0x10c0 <__fp_inf>
     ecc:	51 11       	cpse	r21, r1
     ece:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <__fp_szero>
     ed2:	0c 94 66 08 	jmp	0x10cc	; 0x10cc <__fp_nan>

00000ed6 <__divsf3x>:
     ed6:	0e 94 af 08 	call	0x115e	; 0x115e <__fp_split3>
     eda:	68 f3       	brcs	.-38     	; 0xeb6 <__divsf3+0x8>

00000edc <__divsf3_pse>:
     edc:	99 23       	and	r25, r25
     ede:	b1 f3       	breq	.-20     	; 0xecc <__divsf3+0x1e>
     ee0:	55 23       	and	r21, r21
     ee2:	91 f3       	breq	.-28     	; 0xec8 <__divsf3+0x1a>
     ee4:	95 1b       	sub	r25, r21
     ee6:	55 0b       	sbc	r21, r21
     ee8:	bb 27       	eor	r27, r27
     eea:	aa 27       	eor	r26, r26
     eec:	62 17       	cp	r22, r18
     eee:	73 07       	cpc	r23, r19
     ef0:	84 07       	cpc	r24, r20
     ef2:	38 f0       	brcs	.+14     	; 0xf02 <__divsf3_pse+0x26>
     ef4:	9f 5f       	subi	r25, 0xFF	; 255
     ef6:	5f 4f       	sbci	r21, 0xFF	; 255
     ef8:	22 0f       	add	r18, r18
     efa:	33 1f       	adc	r19, r19
     efc:	44 1f       	adc	r20, r20
     efe:	aa 1f       	adc	r26, r26
     f00:	a9 f3       	breq	.-22     	; 0xeec <__divsf3_pse+0x10>
     f02:	35 d0       	rcall	.+106    	; 0xf6e <__divsf3_pse+0x92>
     f04:	0e 2e       	mov	r0, r30
     f06:	3a f0       	brmi	.+14     	; 0xf16 <__divsf3_pse+0x3a>
     f08:	e0 e8       	ldi	r30, 0x80	; 128
     f0a:	32 d0       	rcall	.+100    	; 0xf70 <__divsf3_pse+0x94>
     f0c:	91 50       	subi	r25, 0x01	; 1
     f0e:	50 40       	sbci	r21, 0x00	; 0
     f10:	e6 95       	lsr	r30
     f12:	00 1c       	adc	r0, r0
     f14:	ca f7       	brpl	.-14     	; 0xf08 <__divsf3_pse+0x2c>
     f16:	2b d0       	rcall	.+86     	; 0xf6e <__divsf3_pse+0x92>
     f18:	fe 2f       	mov	r31, r30
     f1a:	29 d0       	rcall	.+82     	; 0xf6e <__divsf3_pse+0x92>
     f1c:	66 0f       	add	r22, r22
     f1e:	77 1f       	adc	r23, r23
     f20:	88 1f       	adc	r24, r24
     f22:	bb 1f       	adc	r27, r27
     f24:	26 17       	cp	r18, r22
     f26:	37 07       	cpc	r19, r23
     f28:	48 07       	cpc	r20, r24
     f2a:	ab 07       	cpc	r26, r27
     f2c:	b0 e8       	ldi	r27, 0x80	; 128
     f2e:	09 f0       	breq	.+2      	; 0xf32 <__divsf3_pse+0x56>
     f30:	bb 0b       	sbc	r27, r27
     f32:	80 2d       	mov	r24, r0
     f34:	bf 01       	movw	r22, r30
     f36:	ff 27       	eor	r31, r31
     f38:	93 58       	subi	r25, 0x83	; 131
     f3a:	5f 4f       	sbci	r21, 0xFF	; 255
     f3c:	3a f0       	brmi	.+14     	; 0xf4c <__divsf3_pse+0x70>
     f3e:	9e 3f       	cpi	r25, 0xFE	; 254
     f40:	51 05       	cpc	r21, r1
     f42:	78 f0       	brcs	.+30     	; 0xf62 <__divsf3_pse+0x86>
     f44:	0c 94 60 08 	jmp	0x10c0	; 0x10c0 <__fp_inf>
     f48:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <__fp_szero>
     f4c:	5f 3f       	cpi	r21, 0xFF	; 255
     f4e:	e4 f3       	brlt	.-8      	; 0xf48 <__divsf3_pse+0x6c>
     f50:	98 3e       	cpi	r25, 0xE8	; 232
     f52:	d4 f3       	brlt	.-12     	; 0xf48 <__divsf3_pse+0x6c>
     f54:	86 95       	lsr	r24
     f56:	77 95       	ror	r23
     f58:	67 95       	ror	r22
     f5a:	b7 95       	ror	r27
     f5c:	f7 95       	ror	r31
     f5e:	9f 5f       	subi	r25, 0xFF	; 255
     f60:	c9 f7       	brne	.-14     	; 0xf54 <__divsf3_pse+0x78>
     f62:	88 0f       	add	r24, r24
     f64:	91 1d       	adc	r25, r1
     f66:	96 95       	lsr	r25
     f68:	87 95       	ror	r24
     f6a:	97 f9       	bld	r25, 7
     f6c:	08 95       	ret
     f6e:	e1 e0       	ldi	r30, 0x01	; 1
     f70:	66 0f       	add	r22, r22
     f72:	77 1f       	adc	r23, r23
     f74:	88 1f       	adc	r24, r24
     f76:	bb 1f       	adc	r27, r27
     f78:	62 17       	cp	r22, r18
     f7a:	73 07       	cpc	r23, r19
     f7c:	84 07       	cpc	r24, r20
     f7e:	ba 07       	cpc	r27, r26
     f80:	20 f0       	brcs	.+8      	; 0xf8a <__divsf3_pse+0xae>
     f82:	62 1b       	sub	r22, r18
     f84:	73 0b       	sbc	r23, r19
     f86:	84 0b       	sbc	r24, r20
     f88:	ba 0b       	sbc	r27, r26
     f8a:	ee 1f       	adc	r30, r30
     f8c:	88 f7       	brcc	.-30     	; 0xf70 <__divsf3_pse+0x94>
     f8e:	e0 95       	com	r30
     f90:	08 95       	ret

00000f92 <__fixsfsi>:
     f92:	0e 94 d0 07 	call	0xfa0	; 0xfa0 <__fixunssfsi>
     f96:	68 94       	set
     f98:	b1 11       	cpse	r27, r1
     f9a:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <__fp_szero>
     f9e:	08 95       	ret

00000fa0 <__fixunssfsi>:
     fa0:	0e 94 b7 08 	call	0x116e	; 0x116e <__fp_splitA>
     fa4:	88 f0       	brcs	.+34     	; 0xfc8 <__fixunssfsi+0x28>
     fa6:	9f 57       	subi	r25, 0x7F	; 127
     fa8:	98 f0       	brcs	.+38     	; 0xfd0 <__fixunssfsi+0x30>
     faa:	b9 2f       	mov	r27, r25
     fac:	99 27       	eor	r25, r25
     fae:	b7 51       	subi	r27, 0x17	; 23
     fb0:	b0 f0       	brcs	.+44     	; 0xfde <__fixunssfsi+0x3e>
     fb2:	e1 f0       	breq	.+56     	; 0xfec <__fixunssfsi+0x4c>
     fb4:	66 0f       	add	r22, r22
     fb6:	77 1f       	adc	r23, r23
     fb8:	88 1f       	adc	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	1a f0       	brmi	.+6      	; 0xfc4 <__fixunssfsi+0x24>
     fbe:	ba 95       	dec	r27
     fc0:	c9 f7       	brne	.-14     	; 0xfb4 <__fixunssfsi+0x14>
     fc2:	14 c0       	rjmp	.+40     	; 0xfec <__fixunssfsi+0x4c>
     fc4:	b1 30       	cpi	r27, 0x01	; 1
     fc6:	91 f0       	breq	.+36     	; 0xfec <__fixunssfsi+0x4c>
     fc8:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <__fp_zero>
     fcc:	b1 e0       	ldi	r27, 0x01	; 1
     fce:	08 95       	ret
     fd0:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__fp_zero>
     fd4:	67 2f       	mov	r22, r23
     fd6:	78 2f       	mov	r23, r24
     fd8:	88 27       	eor	r24, r24
     fda:	b8 5f       	subi	r27, 0xF8	; 248
     fdc:	39 f0       	breq	.+14     	; 0xfec <__fixunssfsi+0x4c>
     fde:	b9 3f       	cpi	r27, 0xF9	; 249
     fe0:	cc f3       	brlt	.-14     	; 0xfd4 <__fixunssfsi+0x34>
     fe2:	86 95       	lsr	r24
     fe4:	77 95       	ror	r23
     fe6:	67 95       	ror	r22
     fe8:	b3 95       	inc	r27
     fea:	d9 f7       	brne	.-10     	; 0xfe2 <__fixunssfsi+0x42>
     fec:	3e f4       	brtc	.+14     	; 0xffc <__fixunssfsi+0x5c>
     fee:	90 95       	com	r25
     ff0:	80 95       	com	r24
     ff2:	70 95       	com	r23
     ff4:	61 95       	neg	r22
     ff6:	7f 4f       	sbci	r23, 0xFF	; 255
     ff8:	8f 4f       	sbci	r24, 0xFF	; 255
     ffa:	9f 4f       	sbci	r25, 0xFF	; 255
     ffc:	08 95       	ret

00000ffe <__floatunsisf>:
     ffe:	e8 94       	clt
    1000:	09 c0       	rjmp	.+18     	; 0x1014 <__floatsisf+0x12>

00001002 <__floatsisf>:
    1002:	97 fb       	bst	r25, 7
    1004:	3e f4       	brtc	.+14     	; 0x1014 <__floatsisf+0x12>
    1006:	90 95       	com	r25
    1008:	80 95       	com	r24
    100a:	70 95       	com	r23
    100c:	61 95       	neg	r22
    100e:	7f 4f       	sbci	r23, 0xFF	; 255
    1010:	8f 4f       	sbci	r24, 0xFF	; 255
    1012:	9f 4f       	sbci	r25, 0xFF	; 255
    1014:	99 23       	and	r25, r25
    1016:	a9 f0       	breq	.+42     	; 0x1042 <__floatsisf+0x40>
    1018:	f9 2f       	mov	r31, r25
    101a:	96 e9       	ldi	r25, 0x96	; 150
    101c:	bb 27       	eor	r27, r27
    101e:	93 95       	inc	r25
    1020:	f6 95       	lsr	r31
    1022:	87 95       	ror	r24
    1024:	77 95       	ror	r23
    1026:	67 95       	ror	r22
    1028:	b7 95       	ror	r27
    102a:	f1 11       	cpse	r31, r1
    102c:	f8 cf       	rjmp	.-16     	; 0x101e <__floatsisf+0x1c>
    102e:	fa f4       	brpl	.+62     	; 0x106e <__floatsisf+0x6c>
    1030:	bb 0f       	add	r27, r27
    1032:	11 f4       	brne	.+4      	; 0x1038 <__floatsisf+0x36>
    1034:	60 ff       	sbrs	r22, 0
    1036:	1b c0       	rjmp	.+54     	; 0x106e <__floatsisf+0x6c>
    1038:	6f 5f       	subi	r22, 0xFF	; 255
    103a:	7f 4f       	sbci	r23, 0xFF	; 255
    103c:	8f 4f       	sbci	r24, 0xFF	; 255
    103e:	9f 4f       	sbci	r25, 0xFF	; 255
    1040:	16 c0       	rjmp	.+44     	; 0x106e <__floatsisf+0x6c>
    1042:	88 23       	and	r24, r24
    1044:	11 f0       	breq	.+4      	; 0x104a <__floatsisf+0x48>
    1046:	96 e9       	ldi	r25, 0x96	; 150
    1048:	11 c0       	rjmp	.+34     	; 0x106c <__floatsisf+0x6a>
    104a:	77 23       	and	r23, r23
    104c:	21 f0       	breq	.+8      	; 0x1056 <__floatsisf+0x54>
    104e:	9e e8       	ldi	r25, 0x8E	; 142
    1050:	87 2f       	mov	r24, r23
    1052:	76 2f       	mov	r23, r22
    1054:	05 c0       	rjmp	.+10     	; 0x1060 <__floatsisf+0x5e>
    1056:	66 23       	and	r22, r22
    1058:	71 f0       	breq	.+28     	; 0x1076 <__floatsisf+0x74>
    105a:	96 e8       	ldi	r25, 0x86	; 134
    105c:	86 2f       	mov	r24, r22
    105e:	70 e0       	ldi	r23, 0x00	; 0
    1060:	60 e0       	ldi	r22, 0x00	; 0
    1062:	2a f0       	brmi	.+10     	; 0x106e <__floatsisf+0x6c>
    1064:	9a 95       	dec	r25
    1066:	66 0f       	add	r22, r22
    1068:	77 1f       	adc	r23, r23
    106a:	88 1f       	adc	r24, r24
    106c:	da f7       	brpl	.-10     	; 0x1064 <__floatsisf+0x62>
    106e:	88 0f       	add	r24, r24
    1070:	96 95       	lsr	r25
    1072:	87 95       	ror	r24
    1074:	97 f9       	bld	r25, 7
    1076:	08 95       	ret

00001078 <__fp_cmp>:
    1078:	99 0f       	add	r25, r25
    107a:	00 08       	sbc	r0, r0
    107c:	55 0f       	add	r21, r21
    107e:	aa 0b       	sbc	r26, r26
    1080:	e0 e8       	ldi	r30, 0x80	; 128
    1082:	fe ef       	ldi	r31, 0xFE	; 254
    1084:	16 16       	cp	r1, r22
    1086:	17 06       	cpc	r1, r23
    1088:	e8 07       	cpc	r30, r24
    108a:	f9 07       	cpc	r31, r25
    108c:	c0 f0       	brcs	.+48     	; 0x10be <__fp_cmp+0x46>
    108e:	12 16       	cp	r1, r18
    1090:	13 06       	cpc	r1, r19
    1092:	e4 07       	cpc	r30, r20
    1094:	f5 07       	cpc	r31, r21
    1096:	98 f0       	brcs	.+38     	; 0x10be <__fp_cmp+0x46>
    1098:	62 1b       	sub	r22, r18
    109a:	73 0b       	sbc	r23, r19
    109c:	84 0b       	sbc	r24, r20
    109e:	95 0b       	sbc	r25, r21
    10a0:	39 f4       	brne	.+14     	; 0x10b0 <__fp_cmp+0x38>
    10a2:	0a 26       	eor	r0, r26
    10a4:	61 f0       	breq	.+24     	; 0x10be <__fp_cmp+0x46>
    10a6:	23 2b       	or	r18, r19
    10a8:	24 2b       	or	r18, r20
    10aa:	25 2b       	or	r18, r21
    10ac:	21 f4       	brne	.+8      	; 0x10b6 <__fp_cmp+0x3e>
    10ae:	08 95       	ret
    10b0:	0a 26       	eor	r0, r26
    10b2:	09 f4       	brne	.+2      	; 0x10b6 <__fp_cmp+0x3e>
    10b4:	a1 40       	sbci	r26, 0x01	; 1
    10b6:	a6 95       	lsr	r26
    10b8:	8f ef       	ldi	r24, 0xFF	; 255
    10ba:	81 1d       	adc	r24, r1
    10bc:	81 1d       	adc	r24, r1
    10be:	08 95       	ret

000010c0 <__fp_inf>:
    10c0:	97 f9       	bld	r25, 7
    10c2:	9f 67       	ori	r25, 0x7F	; 127
    10c4:	80 e8       	ldi	r24, 0x80	; 128
    10c6:	70 e0       	ldi	r23, 0x00	; 0
    10c8:	60 e0       	ldi	r22, 0x00	; 0
    10ca:	08 95       	ret

000010cc <__fp_nan>:
    10cc:	9f ef       	ldi	r25, 0xFF	; 255
    10ce:	80 ec       	ldi	r24, 0xC0	; 192
    10d0:	08 95       	ret

000010d2 <__fp_powser>:
    10d2:	df 93       	push	r29
    10d4:	cf 93       	push	r28
    10d6:	1f 93       	push	r17
    10d8:	0f 93       	push	r16
    10da:	ff 92       	push	r15
    10dc:	ef 92       	push	r14
    10de:	df 92       	push	r13
    10e0:	7b 01       	movw	r14, r22
    10e2:	8c 01       	movw	r16, r24
    10e4:	68 94       	set
    10e6:	06 c0       	rjmp	.+12     	; 0x10f4 <__fp_powser+0x22>
    10e8:	da 2e       	mov	r13, r26
    10ea:	ef 01       	movw	r28, r30
    10ec:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__mulsf3x>
    10f0:	fe 01       	movw	r30, r28
    10f2:	e8 94       	clt
    10f4:	a5 91       	lpm	r26, Z+
    10f6:	25 91       	lpm	r18, Z+
    10f8:	35 91       	lpm	r19, Z+
    10fa:	45 91       	lpm	r20, Z+
    10fc:	55 91       	lpm	r21, Z+
    10fe:	a6 f3       	brts	.-24     	; 0x10e8 <__fp_powser+0x16>
    1100:	ef 01       	movw	r28, r30
    1102:	0e 94 8b 06 	call	0xd16	; 0xd16 <__addsf3x>
    1106:	fe 01       	movw	r30, r28
    1108:	97 01       	movw	r18, r14
    110a:	a8 01       	movw	r20, r16
    110c:	da 94       	dec	r13
    110e:	69 f7       	brne	.-38     	; 0x10ea <__fp_powser+0x18>
    1110:	df 90       	pop	r13
    1112:	ef 90       	pop	r14
    1114:	ff 90       	pop	r15
    1116:	0f 91       	pop	r16
    1118:	1f 91       	pop	r17
    111a:	cf 91       	pop	r28
    111c:	df 91       	pop	r29
    111e:	08 95       	ret

00001120 <__fp_pscA>:
    1120:	00 24       	eor	r0, r0
    1122:	0a 94       	dec	r0
    1124:	16 16       	cp	r1, r22
    1126:	17 06       	cpc	r1, r23
    1128:	18 06       	cpc	r1, r24
    112a:	09 06       	cpc	r0, r25
    112c:	08 95       	ret

0000112e <__fp_pscB>:
    112e:	00 24       	eor	r0, r0
    1130:	0a 94       	dec	r0
    1132:	12 16       	cp	r1, r18
    1134:	13 06       	cpc	r1, r19
    1136:	14 06       	cpc	r1, r20
    1138:	05 06       	cpc	r0, r21
    113a:	08 95       	ret

0000113c <__fp_round>:
    113c:	09 2e       	mov	r0, r25
    113e:	03 94       	inc	r0
    1140:	00 0c       	add	r0, r0
    1142:	11 f4       	brne	.+4      	; 0x1148 <__fp_round+0xc>
    1144:	88 23       	and	r24, r24
    1146:	52 f0       	brmi	.+20     	; 0x115c <__fp_round+0x20>
    1148:	bb 0f       	add	r27, r27
    114a:	40 f4       	brcc	.+16     	; 0x115c <__fp_round+0x20>
    114c:	bf 2b       	or	r27, r31
    114e:	11 f4       	brne	.+4      	; 0x1154 <__fp_round+0x18>
    1150:	60 ff       	sbrs	r22, 0
    1152:	04 c0       	rjmp	.+8      	; 0x115c <__fp_round+0x20>
    1154:	6f 5f       	subi	r22, 0xFF	; 255
    1156:	7f 4f       	sbci	r23, 0xFF	; 255
    1158:	8f 4f       	sbci	r24, 0xFF	; 255
    115a:	9f 4f       	sbci	r25, 0xFF	; 255
    115c:	08 95       	ret

0000115e <__fp_split3>:
    115e:	57 fd       	sbrc	r21, 7
    1160:	90 58       	subi	r25, 0x80	; 128
    1162:	44 0f       	add	r20, r20
    1164:	55 1f       	adc	r21, r21
    1166:	59 f0       	breq	.+22     	; 0x117e <__fp_splitA+0x10>
    1168:	5f 3f       	cpi	r21, 0xFF	; 255
    116a:	71 f0       	breq	.+28     	; 0x1188 <__fp_splitA+0x1a>
    116c:	47 95       	ror	r20

0000116e <__fp_splitA>:
    116e:	88 0f       	add	r24, r24
    1170:	97 fb       	bst	r25, 7
    1172:	99 1f       	adc	r25, r25
    1174:	61 f0       	breq	.+24     	; 0x118e <__fp_splitA+0x20>
    1176:	9f 3f       	cpi	r25, 0xFF	; 255
    1178:	79 f0       	breq	.+30     	; 0x1198 <__fp_splitA+0x2a>
    117a:	87 95       	ror	r24
    117c:	08 95       	ret
    117e:	12 16       	cp	r1, r18
    1180:	13 06       	cpc	r1, r19
    1182:	14 06       	cpc	r1, r20
    1184:	55 1f       	adc	r21, r21
    1186:	f2 cf       	rjmp	.-28     	; 0x116c <__fp_split3+0xe>
    1188:	46 95       	lsr	r20
    118a:	f1 df       	rcall	.-30     	; 0x116e <__fp_splitA>
    118c:	08 c0       	rjmp	.+16     	; 0x119e <__fp_splitA+0x30>
    118e:	16 16       	cp	r1, r22
    1190:	17 06       	cpc	r1, r23
    1192:	18 06       	cpc	r1, r24
    1194:	99 1f       	adc	r25, r25
    1196:	f1 cf       	rjmp	.-30     	; 0x117a <__fp_splitA+0xc>
    1198:	86 95       	lsr	r24
    119a:	71 05       	cpc	r23, r1
    119c:	61 05       	cpc	r22, r1
    119e:	08 94       	sec
    11a0:	08 95       	ret

000011a2 <__fp_zero>:
    11a2:	e8 94       	clt

000011a4 <__fp_szero>:
    11a4:	bb 27       	eor	r27, r27
    11a6:	66 27       	eor	r22, r22
    11a8:	77 27       	eor	r23, r23
    11aa:	cb 01       	movw	r24, r22
    11ac:	97 f9       	bld	r25, 7
    11ae:	08 95       	ret

000011b0 <__gesf2>:
    11b0:	0e 94 3c 08 	call	0x1078	; 0x1078 <__fp_cmp>
    11b4:	08 f4       	brcc	.+2      	; 0x11b8 <__gesf2+0x8>
    11b6:	8f ef       	ldi	r24, 0xFF	; 255
    11b8:	08 95       	ret

000011ba <inverse>:
    11ba:	9b 01       	movw	r18, r22
    11bc:	ac 01       	movw	r20, r24
    11be:	60 e0       	ldi	r22, 0x00	; 0
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	80 e8       	ldi	r24, 0x80	; 128
    11c4:	9f e3       	ldi	r25, 0x3F	; 63
    11c6:	0c 94 57 07 	jmp	0xeae	; 0xeae <__divsf3>

000011ca <__mulsf3>:
    11ca:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__mulsf3x>
    11ce:	0c 94 9e 08 	jmp	0x113c	; 0x113c <__fp_round>
    11d2:	0e 94 90 08 	call	0x1120	; 0x1120 <__fp_pscA>
    11d6:	38 f0       	brcs	.+14     	; 0x11e6 <__mulsf3+0x1c>
    11d8:	0e 94 97 08 	call	0x112e	; 0x112e <__fp_pscB>
    11dc:	20 f0       	brcs	.+8      	; 0x11e6 <__mulsf3+0x1c>
    11de:	95 23       	and	r25, r21
    11e0:	11 f0       	breq	.+4      	; 0x11e6 <__mulsf3+0x1c>
    11e2:	0c 94 60 08 	jmp	0x10c0	; 0x10c0 <__fp_inf>
    11e6:	0c 94 66 08 	jmp	0x10cc	; 0x10cc <__fp_nan>
    11ea:	11 24       	eor	r1, r1
    11ec:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <__fp_szero>

000011f0 <__mulsf3x>:
    11f0:	0e 94 af 08 	call	0x115e	; 0x115e <__fp_split3>
    11f4:	70 f3       	brcs	.-36     	; 0x11d2 <__mulsf3+0x8>

000011f6 <__mulsf3_pse>:
    11f6:	95 9f       	mul	r25, r21
    11f8:	c1 f3       	breq	.-16     	; 0x11ea <__mulsf3+0x20>
    11fa:	95 0f       	add	r25, r21
    11fc:	50 e0       	ldi	r21, 0x00	; 0
    11fe:	55 1f       	adc	r21, r21
    1200:	62 9f       	mul	r22, r18
    1202:	f0 01       	movw	r30, r0
    1204:	72 9f       	mul	r23, r18
    1206:	bb 27       	eor	r27, r27
    1208:	f0 0d       	add	r31, r0
    120a:	b1 1d       	adc	r27, r1
    120c:	63 9f       	mul	r22, r19
    120e:	aa 27       	eor	r26, r26
    1210:	f0 0d       	add	r31, r0
    1212:	b1 1d       	adc	r27, r1
    1214:	aa 1f       	adc	r26, r26
    1216:	64 9f       	mul	r22, r20
    1218:	66 27       	eor	r22, r22
    121a:	b0 0d       	add	r27, r0
    121c:	a1 1d       	adc	r26, r1
    121e:	66 1f       	adc	r22, r22
    1220:	82 9f       	mul	r24, r18
    1222:	22 27       	eor	r18, r18
    1224:	b0 0d       	add	r27, r0
    1226:	a1 1d       	adc	r26, r1
    1228:	62 1f       	adc	r22, r18
    122a:	73 9f       	mul	r23, r19
    122c:	b0 0d       	add	r27, r0
    122e:	a1 1d       	adc	r26, r1
    1230:	62 1f       	adc	r22, r18
    1232:	83 9f       	mul	r24, r19
    1234:	a0 0d       	add	r26, r0
    1236:	61 1d       	adc	r22, r1
    1238:	22 1f       	adc	r18, r18
    123a:	74 9f       	mul	r23, r20
    123c:	33 27       	eor	r19, r19
    123e:	a0 0d       	add	r26, r0
    1240:	61 1d       	adc	r22, r1
    1242:	23 1f       	adc	r18, r19
    1244:	84 9f       	mul	r24, r20
    1246:	60 0d       	add	r22, r0
    1248:	21 1d       	adc	r18, r1
    124a:	82 2f       	mov	r24, r18
    124c:	76 2f       	mov	r23, r22
    124e:	6a 2f       	mov	r22, r26
    1250:	11 24       	eor	r1, r1
    1252:	9f 57       	subi	r25, 0x7F	; 127
    1254:	50 40       	sbci	r21, 0x00	; 0
    1256:	9a f0       	brmi	.+38     	; 0x127e <__mulsf3_pse+0x88>
    1258:	f1 f0       	breq	.+60     	; 0x1296 <__mulsf3_pse+0xa0>
    125a:	88 23       	and	r24, r24
    125c:	4a f0       	brmi	.+18     	; 0x1270 <__mulsf3_pse+0x7a>
    125e:	ee 0f       	add	r30, r30
    1260:	ff 1f       	adc	r31, r31
    1262:	bb 1f       	adc	r27, r27
    1264:	66 1f       	adc	r22, r22
    1266:	77 1f       	adc	r23, r23
    1268:	88 1f       	adc	r24, r24
    126a:	91 50       	subi	r25, 0x01	; 1
    126c:	50 40       	sbci	r21, 0x00	; 0
    126e:	a9 f7       	brne	.-22     	; 0x125a <__mulsf3_pse+0x64>
    1270:	9e 3f       	cpi	r25, 0xFE	; 254
    1272:	51 05       	cpc	r21, r1
    1274:	80 f0       	brcs	.+32     	; 0x1296 <__mulsf3_pse+0xa0>
    1276:	0c 94 60 08 	jmp	0x10c0	; 0x10c0 <__fp_inf>
    127a:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <__fp_szero>
    127e:	5f 3f       	cpi	r21, 0xFF	; 255
    1280:	e4 f3       	brlt	.-8      	; 0x127a <__mulsf3_pse+0x84>
    1282:	98 3e       	cpi	r25, 0xE8	; 232
    1284:	d4 f3       	brlt	.-12     	; 0x127a <__mulsf3_pse+0x84>
    1286:	86 95       	lsr	r24
    1288:	77 95       	ror	r23
    128a:	67 95       	ror	r22
    128c:	b7 95       	ror	r27
    128e:	f7 95       	ror	r31
    1290:	e7 95       	ror	r30
    1292:	9f 5f       	subi	r25, 0xFF	; 255
    1294:	c1 f7       	brne	.-16     	; 0x1286 <__mulsf3_pse+0x90>
    1296:	fe 2b       	or	r31, r30
    1298:	88 0f       	add	r24, r24
    129a:	91 1d       	adc	r25, r1
    129c:	96 95       	lsr	r25
    129e:	87 95       	ror	r24
    12a0:	97 f9       	bld	r25, 7
    12a2:	08 95       	ret

000012a4 <square>:
    12a4:	9b 01       	movw	r18, r22
    12a6:	ac 01       	movw	r20, r24
    12a8:	0c 94 e5 08 	jmp	0x11ca	; 0x11ca <__mulsf3>

000012ac <fdevopen>:
    12ac:	0f 93       	push	r16
    12ae:	1f 93       	push	r17
    12b0:	cf 93       	push	r28
    12b2:	df 93       	push	r29
    12b4:	00 97       	sbiw	r24, 0x00	; 0
    12b6:	31 f4       	brne	.+12     	; 0x12c4 <fdevopen+0x18>
    12b8:	61 15       	cp	r22, r1
    12ba:	71 05       	cpc	r23, r1
    12bc:	19 f4       	brne	.+6      	; 0x12c4 <fdevopen+0x18>
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	3a c0       	rjmp	.+116    	; 0x1338 <fdevopen+0x8c>
    12c4:	8b 01       	movw	r16, r22
    12c6:	ec 01       	movw	r28, r24
    12c8:	6e e0       	ldi	r22, 0x0E	; 14
    12ca:	70 e0       	ldi	r23, 0x00	; 0
    12cc:	81 e0       	ldi	r24, 0x01	; 1
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	0e 94 c8 0b 	call	0x1790	; 0x1790 <calloc>
    12d4:	fc 01       	movw	r30, r24
    12d6:	89 2b       	or	r24, r25
    12d8:	91 f3       	breq	.-28     	; 0x12be <fdevopen+0x12>
    12da:	80 e8       	ldi	r24, 0x80	; 128
    12dc:	83 83       	std	Z+3, r24	; 0x03
    12de:	01 15       	cp	r16, r1
    12e0:	11 05       	cpc	r17, r1
    12e2:	71 f0       	breq	.+28     	; 0x1300 <fdevopen+0x54>
    12e4:	13 87       	std	Z+11, r17	; 0x0b
    12e6:	02 87       	std	Z+10, r16	; 0x0a
    12e8:	81 e8       	ldi	r24, 0x81	; 129
    12ea:	83 83       	std	Z+3, r24	; 0x03
    12ec:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <__iob>
    12f0:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <__iob+0x1>
    12f4:	89 2b       	or	r24, r25
    12f6:	21 f4       	brne	.+8      	; 0x1300 <fdevopen+0x54>
    12f8:	f0 93 eb 01 	sts	0x01EB, r31	; 0x8001eb <__iob+0x1>
    12fc:	e0 93 ea 01 	sts	0x01EA, r30	; 0x8001ea <__iob>
    1300:	20 97       	sbiw	r28, 0x00	; 0
    1302:	c9 f0       	breq	.+50     	; 0x1336 <fdevopen+0x8a>
    1304:	d1 87       	std	Z+9, r29	; 0x09
    1306:	c0 87       	std	Z+8, r28	; 0x08
    1308:	83 81       	ldd	r24, Z+3	; 0x03
    130a:	82 60       	ori	r24, 0x02	; 2
    130c:	83 83       	std	Z+3, r24	; 0x03
    130e:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <__iob+0x2>
    1312:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <__iob+0x3>
    1316:	89 2b       	or	r24, r25
    1318:	71 f4       	brne	.+28     	; 0x1336 <fdevopen+0x8a>
    131a:	f0 93 ed 01 	sts	0x01ED, r31	; 0x8001ed <__iob+0x3>
    131e:	e0 93 ec 01 	sts	0x01EC, r30	; 0x8001ec <__iob+0x2>
    1322:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <__iob+0x4>
    1326:	90 91 ef 01 	lds	r25, 0x01EF	; 0x8001ef <__iob+0x5>
    132a:	89 2b       	or	r24, r25
    132c:	21 f4       	brne	.+8      	; 0x1336 <fdevopen+0x8a>
    132e:	f0 93 ef 01 	sts	0x01EF, r31	; 0x8001ef <__iob+0x5>
    1332:	e0 93 ee 01 	sts	0x01EE, r30	; 0x8001ee <__iob+0x4>
    1336:	cf 01       	movw	r24, r30
    1338:	df 91       	pop	r29
    133a:	cf 91       	pop	r28
    133c:	1f 91       	pop	r17
    133e:	0f 91       	pop	r16
    1340:	08 95       	ret

00001342 <printf>:
    1342:	a0 e0       	ldi	r26, 0x00	; 0
    1344:	b0 e0       	ldi	r27, 0x00	; 0
    1346:	e7 ea       	ldi	r30, 0xA7	; 167
    1348:	f9 e0       	ldi	r31, 0x09	; 9
    134a:	0c 94 cc 0d 	jmp	0x1b98	; 0x1b98 <__prologue_saves__+0x20>
    134e:	ae 01       	movw	r20, r28
    1350:	4b 5f       	subi	r20, 0xFB	; 251
    1352:	5f 4f       	sbci	r21, 0xFF	; 255
    1354:	fa 01       	movw	r30, r20
    1356:	61 91       	ld	r22, Z+
    1358:	71 91       	ld	r23, Z+
    135a:	af 01       	movw	r20, r30
    135c:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <__iob+0x2>
    1360:	90 91 ed 01 	lds	r25, 0x01ED	; 0x8001ed <__iob+0x3>
    1364:	0e 94 e7 09 	call	0x13ce	; 0x13ce <vfprintf>
    1368:	e2 e0       	ldi	r30, 0x02	; 2
    136a:	0c 94 e8 0d 	jmp	0x1bd0	; 0x1bd0 <__epilogue_restores__+0x20>

0000136e <puts>:
    136e:	0f 93       	push	r16
    1370:	1f 93       	push	r17
    1372:	cf 93       	push	r28
    1374:	df 93       	push	r29
    1376:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <__iob+0x2>
    137a:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <__iob+0x3>
    137e:	23 81       	ldd	r18, Z+3	; 0x03
    1380:	21 ff       	sbrs	r18, 1
    1382:	1b c0       	rjmp	.+54     	; 0x13ba <puts+0x4c>
    1384:	8c 01       	movw	r16, r24
    1386:	d0 e0       	ldi	r29, 0x00	; 0
    1388:	c0 e0       	ldi	r28, 0x00	; 0
    138a:	f8 01       	movw	r30, r16
    138c:	81 91       	ld	r24, Z+
    138e:	8f 01       	movw	r16, r30
    1390:	60 91 ec 01 	lds	r22, 0x01EC	; 0x8001ec <__iob+0x2>
    1394:	70 91 ed 01 	lds	r23, 0x01ED	; 0x8001ed <__iob+0x3>
    1398:	db 01       	movw	r26, r22
    139a:	18 96       	adiw	r26, 0x08	; 8
    139c:	ed 91       	ld	r30, X+
    139e:	fc 91       	ld	r31, X
    13a0:	19 97       	sbiw	r26, 0x09	; 9
    13a2:	88 23       	and	r24, r24
    13a4:	31 f0       	breq	.+12     	; 0x13b2 <puts+0x44>
    13a6:	09 95       	icall
    13a8:	89 2b       	or	r24, r25
    13aa:	79 f3       	breq	.-34     	; 0x138a <puts+0x1c>
    13ac:	df ef       	ldi	r29, 0xFF	; 255
    13ae:	cf ef       	ldi	r28, 0xFF	; 255
    13b0:	ec cf       	rjmp	.-40     	; 0x138a <puts+0x1c>
    13b2:	8a e0       	ldi	r24, 0x0A	; 10
    13b4:	09 95       	icall
    13b6:	89 2b       	or	r24, r25
    13b8:	19 f0       	breq	.+6      	; 0x13c0 <puts+0x52>
    13ba:	8f ef       	ldi	r24, 0xFF	; 255
    13bc:	9f ef       	ldi	r25, 0xFF	; 255
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <puts+0x56>
    13c0:	8d 2f       	mov	r24, r29
    13c2:	9c 2f       	mov	r25, r28
    13c4:	df 91       	pop	r29
    13c6:	cf 91       	pop	r28
    13c8:	1f 91       	pop	r17
    13ca:	0f 91       	pop	r16
    13cc:	08 95       	ret

000013ce <vfprintf>:
    13ce:	ab e0       	ldi	r26, 0x0B	; 11
    13d0:	b0 e0       	ldi	r27, 0x00	; 0
    13d2:	ed ee       	ldi	r30, 0xED	; 237
    13d4:	f9 e0       	ldi	r31, 0x09	; 9
    13d6:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <__prologue_saves__>
    13da:	6c 01       	movw	r12, r24
    13dc:	7b 01       	movw	r14, r22
    13de:	8a 01       	movw	r16, r20
    13e0:	fc 01       	movw	r30, r24
    13e2:	17 82       	std	Z+7, r1	; 0x07
    13e4:	16 82       	std	Z+6, r1	; 0x06
    13e6:	83 81       	ldd	r24, Z+3	; 0x03
    13e8:	81 ff       	sbrs	r24, 1
    13ea:	cc c1       	rjmp	.+920    	; 0x1784 <vfprintf+0x3b6>
    13ec:	ce 01       	movw	r24, r28
    13ee:	01 96       	adiw	r24, 0x01	; 1
    13f0:	3c 01       	movw	r6, r24
    13f2:	f6 01       	movw	r30, r12
    13f4:	93 81       	ldd	r25, Z+3	; 0x03
    13f6:	f7 01       	movw	r30, r14
    13f8:	93 fd       	sbrc	r25, 3
    13fa:	85 91       	lpm	r24, Z+
    13fc:	93 ff       	sbrs	r25, 3
    13fe:	81 91       	ld	r24, Z+
    1400:	7f 01       	movw	r14, r30
    1402:	88 23       	and	r24, r24
    1404:	09 f4       	brne	.+2      	; 0x1408 <vfprintf+0x3a>
    1406:	ba c1       	rjmp	.+884    	; 0x177c <vfprintf+0x3ae>
    1408:	85 32       	cpi	r24, 0x25	; 37
    140a:	39 f4       	brne	.+14     	; 0x141a <vfprintf+0x4c>
    140c:	93 fd       	sbrc	r25, 3
    140e:	85 91       	lpm	r24, Z+
    1410:	93 ff       	sbrs	r25, 3
    1412:	81 91       	ld	r24, Z+
    1414:	7f 01       	movw	r14, r30
    1416:	85 32       	cpi	r24, 0x25	; 37
    1418:	29 f4       	brne	.+10     	; 0x1424 <vfprintf+0x56>
    141a:	b6 01       	movw	r22, r12
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    1422:	e7 cf       	rjmp	.-50     	; 0x13f2 <vfprintf+0x24>
    1424:	91 2c       	mov	r9, r1
    1426:	21 2c       	mov	r2, r1
    1428:	31 2c       	mov	r3, r1
    142a:	ff e1       	ldi	r31, 0x1F	; 31
    142c:	f3 15       	cp	r31, r3
    142e:	d8 f0       	brcs	.+54     	; 0x1466 <vfprintf+0x98>
    1430:	8b 32       	cpi	r24, 0x2B	; 43
    1432:	79 f0       	breq	.+30     	; 0x1452 <vfprintf+0x84>
    1434:	38 f4       	brcc	.+14     	; 0x1444 <vfprintf+0x76>
    1436:	80 32       	cpi	r24, 0x20	; 32
    1438:	79 f0       	breq	.+30     	; 0x1458 <vfprintf+0x8a>
    143a:	83 32       	cpi	r24, 0x23	; 35
    143c:	a1 f4       	brne	.+40     	; 0x1466 <vfprintf+0x98>
    143e:	23 2d       	mov	r18, r3
    1440:	20 61       	ori	r18, 0x10	; 16
    1442:	1d c0       	rjmp	.+58     	; 0x147e <vfprintf+0xb0>
    1444:	8d 32       	cpi	r24, 0x2D	; 45
    1446:	61 f0       	breq	.+24     	; 0x1460 <vfprintf+0x92>
    1448:	80 33       	cpi	r24, 0x30	; 48
    144a:	69 f4       	brne	.+26     	; 0x1466 <vfprintf+0x98>
    144c:	23 2d       	mov	r18, r3
    144e:	21 60       	ori	r18, 0x01	; 1
    1450:	16 c0       	rjmp	.+44     	; 0x147e <vfprintf+0xb0>
    1452:	83 2d       	mov	r24, r3
    1454:	82 60       	ori	r24, 0x02	; 2
    1456:	38 2e       	mov	r3, r24
    1458:	e3 2d       	mov	r30, r3
    145a:	e4 60       	ori	r30, 0x04	; 4
    145c:	3e 2e       	mov	r3, r30
    145e:	2a c0       	rjmp	.+84     	; 0x14b4 <vfprintf+0xe6>
    1460:	f3 2d       	mov	r31, r3
    1462:	f8 60       	ori	r31, 0x08	; 8
    1464:	1d c0       	rjmp	.+58     	; 0x14a0 <vfprintf+0xd2>
    1466:	37 fc       	sbrc	r3, 7
    1468:	2d c0       	rjmp	.+90     	; 0x14c4 <vfprintf+0xf6>
    146a:	20 ed       	ldi	r18, 0xD0	; 208
    146c:	28 0f       	add	r18, r24
    146e:	2a 30       	cpi	r18, 0x0A	; 10
    1470:	40 f0       	brcs	.+16     	; 0x1482 <vfprintf+0xb4>
    1472:	8e 32       	cpi	r24, 0x2E	; 46
    1474:	b9 f4       	brne	.+46     	; 0x14a4 <vfprintf+0xd6>
    1476:	36 fc       	sbrc	r3, 6
    1478:	81 c1       	rjmp	.+770    	; 0x177c <vfprintf+0x3ae>
    147a:	23 2d       	mov	r18, r3
    147c:	20 64       	ori	r18, 0x40	; 64
    147e:	32 2e       	mov	r3, r18
    1480:	19 c0       	rjmp	.+50     	; 0x14b4 <vfprintf+0xe6>
    1482:	36 fe       	sbrs	r3, 6
    1484:	06 c0       	rjmp	.+12     	; 0x1492 <vfprintf+0xc4>
    1486:	8a e0       	ldi	r24, 0x0A	; 10
    1488:	98 9e       	mul	r9, r24
    148a:	20 0d       	add	r18, r0
    148c:	11 24       	eor	r1, r1
    148e:	92 2e       	mov	r9, r18
    1490:	11 c0       	rjmp	.+34     	; 0x14b4 <vfprintf+0xe6>
    1492:	ea e0       	ldi	r30, 0x0A	; 10
    1494:	2e 9e       	mul	r2, r30
    1496:	20 0d       	add	r18, r0
    1498:	11 24       	eor	r1, r1
    149a:	22 2e       	mov	r2, r18
    149c:	f3 2d       	mov	r31, r3
    149e:	f0 62       	ori	r31, 0x20	; 32
    14a0:	3f 2e       	mov	r3, r31
    14a2:	08 c0       	rjmp	.+16     	; 0x14b4 <vfprintf+0xe6>
    14a4:	8c 36       	cpi	r24, 0x6C	; 108
    14a6:	21 f4       	brne	.+8      	; 0x14b0 <vfprintf+0xe2>
    14a8:	83 2d       	mov	r24, r3
    14aa:	80 68       	ori	r24, 0x80	; 128
    14ac:	38 2e       	mov	r3, r24
    14ae:	02 c0       	rjmp	.+4      	; 0x14b4 <vfprintf+0xe6>
    14b0:	88 36       	cpi	r24, 0x68	; 104
    14b2:	41 f4       	brne	.+16     	; 0x14c4 <vfprintf+0xf6>
    14b4:	f7 01       	movw	r30, r14
    14b6:	93 fd       	sbrc	r25, 3
    14b8:	85 91       	lpm	r24, Z+
    14ba:	93 ff       	sbrs	r25, 3
    14bc:	81 91       	ld	r24, Z+
    14be:	7f 01       	movw	r14, r30
    14c0:	81 11       	cpse	r24, r1
    14c2:	b3 cf       	rjmp	.-154    	; 0x142a <vfprintf+0x5c>
    14c4:	98 2f       	mov	r25, r24
    14c6:	9f 7d       	andi	r25, 0xDF	; 223
    14c8:	95 54       	subi	r25, 0x45	; 69
    14ca:	93 30       	cpi	r25, 0x03	; 3
    14cc:	28 f4       	brcc	.+10     	; 0x14d8 <vfprintf+0x10a>
    14ce:	0c 5f       	subi	r16, 0xFC	; 252
    14d0:	1f 4f       	sbci	r17, 0xFF	; 255
    14d2:	9f e3       	ldi	r25, 0x3F	; 63
    14d4:	99 83       	std	Y+1, r25	; 0x01
    14d6:	0d c0       	rjmp	.+26     	; 0x14f2 <vfprintf+0x124>
    14d8:	83 36       	cpi	r24, 0x63	; 99
    14da:	31 f0       	breq	.+12     	; 0x14e8 <vfprintf+0x11a>
    14dc:	83 37       	cpi	r24, 0x73	; 115
    14de:	71 f0       	breq	.+28     	; 0x14fc <vfprintf+0x12e>
    14e0:	83 35       	cpi	r24, 0x53	; 83
    14e2:	09 f0       	breq	.+2      	; 0x14e6 <vfprintf+0x118>
    14e4:	59 c0       	rjmp	.+178    	; 0x1598 <vfprintf+0x1ca>
    14e6:	21 c0       	rjmp	.+66     	; 0x152a <vfprintf+0x15c>
    14e8:	f8 01       	movw	r30, r16
    14ea:	80 81       	ld	r24, Z
    14ec:	89 83       	std	Y+1, r24	; 0x01
    14ee:	0e 5f       	subi	r16, 0xFE	; 254
    14f0:	1f 4f       	sbci	r17, 0xFF	; 255
    14f2:	88 24       	eor	r8, r8
    14f4:	83 94       	inc	r8
    14f6:	91 2c       	mov	r9, r1
    14f8:	53 01       	movw	r10, r6
    14fa:	13 c0       	rjmp	.+38     	; 0x1522 <vfprintf+0x154>
    14fc:	28 01       	movw	r4, r16
    14fe:	f2 e0       	ldi	r31, 0x02	; 2
    1500:	4f 0e       	add	r4, r31
    1502:	51 1c       	adc	r5, r1
    1504:	f8 01       	movw	r30, r16
    1506:	a0 80       	ld	r10, Z
    1508:	b1 80       	ldd	r11, Z+1	; 0x01
    150a:	36 fe       	sbrs	r3, 6
    150c:	03 c0       	rjmp	.+6      	; 0x1514 <vfprintf+0x146>
    150e:	69 2d       	mov	r22, r9
    1510:	70 e0       	ldi	r23, 0x00	; 0
    1512:	02 c0       	rjmp	.+4      	; 0x1518 <vfprintf+0x14a>
    1514:	6f ef       	ldi	r22, 0xFF	; 255
    1516:	7f ef       	ldi	r23, 0xFF	; 255
    1518:	c5 01       	movw	r24, r10
    151a:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <strnlen>
    151e:	4c 01       	movw	r8, r24
    1520:	82 01       	movw	r16, r4
    1522:	f3 2d       	mov	r31, r3
    1524:	ff 77       	andi	r31, 0x7F	; 127
    1526:	3f 2e       	mov	r3, r31
    1528:	16 c0       	rjmp	.+44     	; 0x1556 <vfprintf+0x188>
    152a:	28 01       	movw	r4, r16
    152c:	22 e0       	ldi	r18, 0x02	; 2
    152e:	42 0e       	add	r4, r18
    1530:	51 1c       	adc	r5, r1
    1532:	f8 01       	movw	r30, r16
    1534:	a0 80       	ld	r10, Z
    1536:	b1 80       	ldd	r11, Z+1	; 0x01
    1538:	36 fe       	sbrs	r3, 6
    153a:	03 c0       	rjmp	.+6      	; 0x1542 <vfprintf+0x174>
    153c:	69 2d       	mov	r22, r9
    153e:	70 e0       	ldi	r23, 0x00	; 0
    1540:	02 c0       	rjmp	.+4      	; 0x1546 <vfprintf+0x178>
    1542:	6f ef       	ldi	r22, 0xFF	; 255
    1544:	7f ef       	ldi	r23, 0xFF	; 255
    1546:	c5 01       	movw	r24, r10
    1548:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <strnlen_P>
    154c:	4c 01       	movw	r8, r24
    154e:	f3 2d       	mov	r31, r3
    1550:	f0 68       	ori	r31, 0x80	; 128
    1552:	3f 2e       	mov	r3, r31
    1554:	82 01       	movw	r16, r4
    1556:	33 fc       	sbrc	r3, 3
    1558:	1b c0       	rjmp	.+54     	; 0x1590 <vfprintf+0x1c2>
    155a:	82 2d       	mov	r24, r2
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	88 16       	cp	r8, r24
    1560:	99 06       	cpc	r9, r25
    1562:	b0 f4       	brcc	.+44     	; 0x1590 <vfprintf+0x1c2>
    1564:	b6 01       	movw	r22, r12
    1566:	80 e2       	ldi	r24, 0x20	; 32
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    156e:	2a 94       	dec	r2
    1570:	f4 cf       	rjmp	.-24     	; 0x155a <vfprintf+0x18c>
    1572:	f5 01       	movw	r30, r10
    1574:	37 fc       	sbrc	r3, 7
    1576:	85 91       	lpm	r24, Z+
    1578:	37 fe       	sbrs	r3, 7
    157a:	81 91       	ld	r24, Z+
    157c:	5f 01       	movw	r10, r30
    157e:	b6 01       	movw	r22, r12
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    1586:	21 10       	cpse	r2, r1
    1588:	2a 94       	dec	r2
    158a:	21 e0       	ldi	r18, 0x01	; 1
    158c:	82 1a       	sub	r8, r18
    158e:	91 08       	sbc	r9, r1
    1590:	81 14       	cp	r8, r1
    1592:	91 04       	cpc	r9, r1
    1594:	71 f7       	brne	.-36     	; 0x1572 <vfprintf+0x1a4>
    1596:	e8 c0       	rjmp	.+464    	; 0x1768 <vfprintf+0x39a>
    1598:	84 36       	cpi	r24, 0x64	; 100
    159a:	11 f0       	breq	.+4      	; 0x15a0 <vfprintf+0x1d2>
    159c:	89 36       	cpi	r24, 0x69	; 105
    159e:	41 f5       	brne	.+80     	; 0x15f0 <vfprintf+0x222>
    15a0:	f8 01       	movw	r30, r16
    15a2:	37 fe       	sbrs	r3, 7
    15a4:	07 c0       	rjmp	.+14     	; 0x15b4 <vfprintf+0x1e6>
    15a6:	60 81       	ld	r22, Z
    15a8:	71 81       	ldd	r23, Z+1	; 0x01
    15aa:	82 81       	ldd	r24, Z+2	; 0x02
    15ac:	93 81       	ldd	r25, Z+3	; 0x03
    15ae:	0c 5f       	subi	r16, 0xFC	; 252
    15b0:	1f 4f       	sbci	r17, 0xFF	; 255
    15b2:	08 c0       	rjmp	.+16     	; 0x15c4 <vfprintf+0x1f6>
    15b4:	60 81       	ld	r22, Z
    15b6:	71 81       	ldd	r23, Z+1	; 0x01
    15b8:	07 2e       	mov	r0, r23
    15ba:	00 0c       	add	r0, r0
    15bc:	88 0b       	sbc	r24, r24
    15be:	99 0b       	sbc	r25, r25
    15c0:	0e 5f       	subi	r16, 0xFE	; 254
    15c2:	1f 4f       	sbci	r17, 0xFF	; 255
    15c4:	f3 2d       	mov	r31, r3
    15c6:	ff 76       	andi	r31, 0x6F	; 111
    15c8:	3f 2e       	mov	r3, r31
    15ca:	97 ff       	sbrs	r25, 7
    15cc:	09 c0       	rjmp	.+18     	; 0x15e0 <vfprintf+0x212>
    15ce:	90 95       	com	r25
    15d0:	80 95       	com	r24
    15d2:	70 95       	com	r23
    15d4:	61 95       	neg	r22
    15d6:	7f 4f       	sbci	r23, 0xFF	; 255
    15d8:	8f 4f       	sbci	r24, 0xFF	; 255
    15da:	9f 4f       	sbci	r25, 0xFF	; 255
    15dc:	f0 68       	ori	r31, 0x80	; 128
    15de:	3f 2e       	mov	r3, r31
    15e0:	2a e0       	ldi	r18, 0x0A	; 10
    15e2:	30 e0       	ldi	r19, 0x00	; 0
    15e4:	a3 01       	movw	r20, r6
    15e6:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__ultoa_invert>
    15ea:	88 2e       	mov	r8, r24
    15ec:	86 18       	sub	r8, r6
    15ee:	45 c0       	rjmp	.+138    	; 0x167a <vfprintf+0x2ac>
    15f0:	85 37       	cpi	r24, 0x75	; 117
    15f2:	31 f4       	brne	.+12     	; 0x1600 <vfprintf+0x232>
    15f4:	23 2d       	mov	r18, r3
    15f6:	2f 7e       	andi	r18, 0xEF	; 239
    15f8:	b2 2e       	mov	r11, r18
    15fa:	2a e0       	ldi	r18, 0x0A	; 10
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	25 c0       	rjmp	.+74     	; 0x164a <vfprintf+0x27c>
    1600:	93 2d       	mov	r25, r3
    1602:	99 7f       	andi	r25, 0xF9	; 249
    1604:	b9 2e       	mov	r11, r25
    1606:	8f 36       	cpi	r24, 0x6F	; 111
    1608:	c1 f0       	breq	.+48     	; 0x163a <vfprintf+0x26c>
    160a:	18 f4       	brcc	.+6      	; 0x1612 <vfprintf+0x244>
    160c:	88 35       	cpi	r24, 0x58	; 88
    160e:	79 f0       	breq	.+30     	; 0x162e <vfprintf+0x260>
    1610:	b5 c0       	rjmp	.+362    	; 0x177c <vfprintf+0x3ae>
    1612:	80 37       	cpi	r24, 0x70	; 112
    1614:	19 f0       	breq	.+6      	; 0x161c <vfprintf+0x24e>
    1616:	88 37       	cpi	r24, 0x78	; 120
    1618:	21 f0       	breq	.+8      	; 0x1622 <vfprintf+0x254>
    161a:	b0 c0       	rjmp	.+352    	; 0x177c <vfprintf+0x3ae>
    161c:	e9 2f       	mov	r30, r25
    161e:	e0 61       	ori	r30, 0x10	; 16
    1620:	be 2e       	mov	r11, r30
    1622:	b4 fe       	sbrs	r11, 4
    1624:	0d c0       	rjmp	.+26     	; 0x1640 <vfprintf+0x272>
    1626:	fb 2d       	mov	r31, r11
    1628:	f4 60       	ori	r31, 0x04	; 4
    162a:	bf 2e       	mov	r11, r31
    162c:	09 c0       	rjmp	.+18     	; 0x1640 <vfprintf+0x272>
    162e:	34 fe       	sbrs	r3, 4
    1630:	0a c0       	rjmp	.+20     	; 0x1646 <vfprintf+0x278>
    1632:	29 2f       	mov	r18, r25
    1634:	26 60       	ori	r18, 0x06	; 6
    1636:	b2 2e       	mov	r11, r18
    1638:	06 c0       	rjmp	.+12     	; 0x1646 <vfprintf+0x278>
    163a:	28 e0       	ldi	r18, 0x08	; 8
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	05 c0       	rjmp	.+10     	; 0x164a <vfprintf+0x27c>
    1640:	20 e1       	ldi	r18, 0x10	; 16
    1642:	30 e0       	ldi	r19, 0x00	; 0
    1644:	02 c0       	rjmp	.+4      	; 0x164a <vfprintf+0x27c>
    1646:	20 e1       	ldi	r18, 0x10	; 16
    1648:	32 e0       	ldi	r19, 0x02	; 2
    164a:	f8 01       	movw	r30, r16
    164c:	b7 fe       	sbrs	r11, 7
    164e:	07 c0       	rjmp	.+14     	; 0x165e <vfprintf+0x290>
    1650:	60 81       	ld	r22, Z
    1652:	71 81       	ldd	r23, Z+1	; 0x01
    1654:	82 81       	ldd	r24, Z+2	; 0x02
    1656:	93 81       	ldd	r25, Z+3	; 0x03
    1658:	0c 5f       	subi	r16, 0xFC	; 252
    165a:	1f 4f       	sbci	r17, 0xFF	; 255
    165c:	06 c0       	rjmp	.+12     	; 0x166a <vfprintf+0x29c>
    165e:	60 81       	ld	r22, Z
    1660:	71 81       	ldd	r23, Z+1	; 0x01
    1662:	80 e0       	ldi	r24, 0x00	; 0
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	0e 5f       	subi	r16, 0xFE	; 254
    1668:	1f 4f       	sbci	r17, 0xFF	; 255
    166a:	a3 01       	movw	r20, r6
    166c:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <__ultoa_invert>
    1670:	88 2e       	mov	r8, r24
    1672:	86 18       	sub	r8, r6
    1674:	fb 2d       	mov	r31, r11
    1676:	ff 77       	andi	r31, 0x7F	; 127
    1678:	3f 2e       	mov	r3, r31
    167a:	36 fe       	sbrs	r3, 6
    167c:	0d c0       	rjmp	.+26     	; 0x1698 <vfprintf+0x2ca>
    167e:	23 2d       	mov	r18, r3
    1680:	2e 7f       	andi	r18, 0xFE	; 254
    1682:	a2 2e       	mov	r10, r18
    1684:	89 14       	cp	r8, r9
    1686:	58 f4       	brcc	.+22     	; 0x169e <vfprintf+0x2d0>
    1688:	34 fe       	sbrs	r3, 4
    168a:	0b c0       	rjmp	.+22     	; 0x16a2 <vfprintf+0x2d4>
    168c:	32 fc       	sbrc	r3, 2
    168e:	09 c0       	rjmp	.+18     	; 0x16a2 <vfprintf+0x2d4>
    1690:	83 2d       	mov	r24, r3
    1692:	8e 7e       	andi	r24, 0xEE	; 238
    1694:	a8 2e       	mov	r10, r24
    1696:	05 c0       	rjmp	.+10     	; 0x16a2 <vfprintf+0x2d4>
    1698:	b8 2c       	mov	r11, r8
    169a:	a3 2c       	mov	r10, r3
    169c:	03 c0       	rjmp	.+6      	; 0x16a4 <vfprintf+0x2d6>
    169e:	b8 2c       	mov	r11, r8
    16a0:	01 c0       	rjmp	.+2      	; 0x16a4 <vfprintf+0x2d6>
    16a2:	b9 2c       	mov	r11, r9
    16a4:	a4 fe       	sbrs	r10, 4
    16a6:	0f c0       	rjmp	.+30     	; 0x16c6 <vfprintf+0x2f8>
    16a8:	fe 01       	movw	r30, r28
    16aa:	e8 0d       	add	r30, r8
    16ac:	f1 1d       	adc	r31, r1
    16ae:	80 81       	ld	r24, Z
    16b0:	80 33       	cpi	r24, 0x30	; 48
    16b2:	21 f4       	brne	.+8      	; 0x16bc <vfprintf+0x2ee>
    16b4:	9a 2d       	mov	r25, r10
    16b6:	99 7e       	andi	r25, 0xE9	; 233
    16b8:	a9 2e       	mov	r10, r25
    16ba:	09 c0       	rjmp	.+18     	; 0x16ce <vfprintf+0x300>
    16bc:	a2 fe       	sbrs	r10, 2
    16be:	06 c0       	rjmp	.+12     	; 0x16cc <vfprintf+0x2fe>
    16c0:	b3 94       	inc	r11
    16c2:	b3 94       	inc	r11
    16c4:	04 c0       	rjmp	.+8      	; 0x16ce <vfprintf+0x300>
    16c6:	8a 2d       	mov	r24, r10
    16c8:	86 78       	andi	r24, 0x86	; 134
    16ca:	09 f0       	breq	.+2      	; 0x16ce <vfprintf+0x300>
    16cc:	b3 94       	inc	r11
    16ce:	a3 fc       	sbrc	r10, 3
    16d0:	11 c0       	rjmp	.+34     	; 0x16f4 <vfprintf+0x326>
    16d2:	a0 fe       	sbrs	r10, 0
    16d4:	06 c0       	rjmp	.+12     	; 0x16e2 <vfprintf+0x314>
    16d6:	b2 14       	cp	r11, r2
    16d8:	88 f4       	brcc	.+34     	; 0x16fc <vfprintf+0x32e>
    16da:	28 0c       	add	r2, r8
    16dc:	92 2c       	mov	r9, r2
    16de:	9b 18       	sub	r9, r11
    16e0:	0e c0       	rjmp	.+28     	; 0x16fe <vfprintf+0x330>
    16e2:	b2 14       	cp	r11, r2
    16e4:	60 f4       	brcc	.+24     	; 0x16fe <vfprintf+0x330>
    16e6:	b6 01       	movw	r22, r12
    16e8:	80 e2       	ldi	r24, 0x20	; 32
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    16f0:	b3 94       	inc	r11
    16f2:	f7 cf       	rjmp	.-18     	; 0x16e2 <vfprintf+0x314>
    16f4:	b2 14       	cp	r11, r2
    16f6:	18 f4       	brcc	.+6      	; 0x16fe <vfprintf+0x330>
    16f8:	2b 18       	sub	r2, r11
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <vfprintf+0x332>
    16fc:	98 2c       	mov	r9, r8
    16fe:	21 2c       	mov	r2, r1
    1700:	a4 fe       	sbrs	r10, 4
    1702:	10 c0       	rjmp	.+32     	; 0x1724 <vfprintf+0x356>
    1704:	b6 01       	movw	r22, r12
    1706:	80 e3       	ldi	r24, 0x30	; 48
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    170e:	a2 fe       	sbrs	r10, 2
    1710:	17 c0       	rjmp	.+46     	; 0x1740 <vfprintf+0x372>
    1712:	a1 fc       	sbrc	r10, 1
    1714:	03 c0       	rjmp	.+6      	; 0x171c <vfprintf+0x34e>
    1716:	88 e7       	ldi	r24, 0x78	; 120
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	02 c0       	rjmp	.+4      	; 0x1720 <vfprintf+0x352>
    171c:	88 e5       	ldi	r24, 0x58	; 88
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	b6 01       	movw	r22, r12
    1722:	0c c0       	rjmp	.+24     	; 0x173c <vfprintf+0x36e>
    1724:	8a 2d       	mov	r24, r10
    1726:	86 78       	andi	r24, 0x86	; 134
    1728:	59 f0       	breq	.+22     	; 0x1740 <vfprintf+0x372>
    172a:	a1 fe       	sbrs	r10, 1
    172c:	02 c0       	rjmp	.+4      	; 0x1732 <vfprintf+0x364>
    172e:	8b e2       	ldi	r24, 0x2B	; 43
    1730:	01 c0       	rjmp	.+2      	; 0x1734 <vfprintf+0x366>
    1732:	80 e2       	ldi	r24, 0x20	; 32
    1734:	a7 fc       	sbrc	r10, 7
    1736:	8d e2       	ldi	r24, 0x2D	; 45
    1738:	b6 01       	movw	r22, r12
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    1740:	89 14       	cp	r8, r9
    1742:	38 f4       	brcc	.+14     	; 0x1752 <vfprintf+0x384>
    1744:	b6 01       	movw	r22, r12
    1746:	80 e3       	ldi	r24, 0x30	; 48
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    174e:	9a 94       	dec	r9
    1750:	f7 cf       	rjmp	.-18     	; 0x1740 <vfprintf+0x372>
    1752:	8a 94       	dec	r8
    1754:	f3 01       	movw	r30, r6
    1756:	e8 0d       	add	r30, r8
    1758:	f1 1d       	adc	r31, r1
    175a:	80 81       	ld	r24, Z
    175c:	b6 01       	movw	r22, r12
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    1764:	81 10       	cpse	r8, r1
    1766:	f5 cf       	rjmp	.-22     	; 0x1752 <vfprintf+0x384>
    1768:	22 20       	and	r2, r2
    176a:	09 f4       	brne	.+2      	; 0x176e <vfprintf+0x3a0>
    176c:	42 ce       	rjmp	.-892    	; 0x13f2 <vfprintf+0x24>
    176e:	b6 01       	movw	r22, r12
    1770:	80 e2       	ldi	r24, 0x20	; 32
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <fputc>
    1778:	2a 94       	dec	r2
    177a:	f6 cf       	rjmp	.-20     	; 0x1768 <vfprintf+0x39a>
    177c:	f6 01       	movw	r30, r12
    177e:	86 81       	ldd	r24, Z+6	; 0x06
    1780:	97 81       	ldd	r25, Z+7	; 0x07
    1782:	02 c0       	rjmp	.+4      	; 0x1788 <vfprintf+0x3ba>
    1784:	8f ef       	ldi	r24, 0xFF	; 255
    1786:	9f ef       	ldi	r25, 0xFF	; 255
    1788:	2b 96       	adiw	r28, 0x0b	; 11
    178a:	e2 e1       	ldi	r30, 0x12	; 18
    178c:	0c 94 d8 0d 	jmp	0x1bb0	; 0x1bb0 <__epilogue_restores__>

00001790 <calloc>:
    1790:	0f 93       	push	r16
    1792:	1f 93       	push	r17
    1794:	cf 93       	push	r28
    1796:	df 93       	push	r29
    1798:	86 9f       	mul	r24, r22
    179a:	80 01       	movw	r16, r0
    179c:	87 9f       	mul	r24, r23
    179e:	10 0d       	add	r17, r0
    17a0:	96 9f       	mul	r25, r22
    17a2:	10 0d       	add	r17, r0
    17a4:	11 24       	eor	r1, r1
    17a6:	c8 01       	movw	r24, r16
    17a8:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <malloc>
    17ac:	ec 01       	movw	r28, r24
    17ae:	00 97       	sbiw	r24, 0x00	; 0
    17b0:	29 f0       	breq	.+10     	; 0x17bc <calloc+0x2c>
    17b2:	a8 01       	movw	r20, r16
    17b4:	60 e0       	ldi	r22, 0x00	; 0
    17b6:	70 e0       	ldi	r23, 0x00	; 0
    17b8:	0e 94 10 0d 	call	0x1a20	; 0x1a20 <memset>
    17bc:	ce 01       	movw	r24, r28
    17be:	df 91       	pop	r29
    17c0:	cf 91       	pop	r28
    17c2:	1f 91       	pop	r17
    17c4:	0f 91       	pop	r16
    17c6:	08 95       	ret

000017c8 <malloc>:
    17c8:	0f 93       	push	r16
    17ca:	1f 93       	push	r17
    17cc:	cf 93       	push	r28
    17ce:	df 93       	push	r29
    17d0:	82 30       	cpi	r24, 0x02	; 2
    17d2:	91 05       	cpc	r25, r1
    17d4:	10 f4       	brcc	.+4      	; 0x17da <malloc+0x12>
    17d6:	82 e0       	ldi	r24, 0x02	; 2
    17d8:	90 e0       	ldi	r25, 0x00	; 0
    17da:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <__flp>
    17de:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <__flp+0x1>
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	a0 e0       	ldi	r26, 0x00	; 0
    17e8:	b0 e0       	ldi	r27, 0x00	; 0
    17ea:	30 97       	sbiw	r30, 0x00	; 0
    17ec:	19 f1       	breq	.+70     	; 0x1834 <malloc+0x6c>
    17ee:	40 81       	ld	r20, Z
    17f0:	51 81       	ldd	r21, Z+1	; 0x01
    17f2:	02 81       	ldd	r16, Z+2	; 0x02
    17f4:	13 81       	ldd	r17, Z+3	; 0x03
    17f6:	48 17       	cp	r20, r24
    17f8:	59 07       	cpc	r21, r25
    17fa:	c8 f0       	brcs	.+50     	; 0x182e <malloc+0x66>
    17fc:	84 17       	cp	r24, r20
    17fe:	95 07       	cpc	r25, r21
    1800:	69 f4       	brne	.+26     	; 0x181c <malloc+0x54>
    1802:	10 97       	sbiw	r26, 0x00	; 0
    1804:	31 f0       	breq	.+12     	; 0x1812 <malloc+0x4a>
    1806:	12 96       	adiw	r26, 0x02	; 2
    1808:	0c 93       	st	X, r16
    180a:	12 97       	sbiw	r26, 0x02	; 2
    180c:	13 96       	adiw	r26, 0x03	; 3
    180e:	1c 93       	st	X, r17
    1810:	27 c0       	rjmp	.+78     	; 0x1860 <malloc+0x98>
    1812:	00 93 f2 01 	sts	0x01F2, r16	; 0x8001f2 <__flp>
    1816:	10 93 f3 01 	sts	0x01F3, r17	; 0x8001f3 <__flp+0x1>
    181a:	22 c0       	rjmp	.+68     	; 0x1860 <malloc+0x98>
    181c:	21 15       	cp	r18, r1
    181e:	31 05       	cpc	r19, r1
    1820:	19 f0       	breq	.+6      	; 0x1828 <malloc+0x60>
    1822:	42 17       	cp	r20, r18
    1824:	53 07       	cpc	r21, r19
    1826:	18 f4       	brcc	.+6      	; 0x182e <malloc+0x66>
    1828:	9a 01       	movw	r18, r20
    182a:	bd 01       	movw	r22, r26
    182c:	ef 01       	movw	r28, r30
    182e:	df 01       	movw	r26, r30
    1830:	f8 01       	movw	r30, r16
    1832:	db cf       	rjmp	.-74     	; 0x17ea <malloc+0x22>
    1834:	21 15       	cp	r18, r1
    1836:	31 05       	cpc	r19, r1
    1838:	f9 f0       	breq	.+62     	; 0x1878 <malloc+0xb0>
    183a:	28 1b       	sub	r18, r24
    183c:	39 0b       	sbc	r19, r25
    183e:	24 30       	cpi	r18, 0x04	; 4
    1840:	31 05       	cpc	r19, r1
    1842:	80 f4       	brcc	.+32     	; 0x1864 <malloc+0x9c>
    1844:	8a 81       	ldd	r24, Y+2	; 0x02
    1846:	9b 81       	ldd	r25, Y+3	; 0x03
    1848:	61 15       	cp	r22, r1
    184a:	71 05       	cpc	r23, r1
    184c:	21 f0       	breq	.+8      	; 0x1856 <malloc+0x8e>
    184e:	fb 01       	movw	r30, r22
    1850:	93 83       	std	Z+3, r25	; 0x03
    1852:	82 83       	std	Z+2, r24	; 0x02
    1854:	04 c0       	rjmp	.+8      	; 0x185e <malloc+0x96>
    1856:	90 93 f3 01 	sts	0x01F3, r25	; 0x8001f3 <__flp+0x1>
    185a:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <__flp>
    185e:	fe 01       	movw	r30, r28
    1860:	32 96       	adiw	r30, 0x02	; 2
    1862:	44 c0       	rjmp	.+136    	; 0x18ec <malloc+0x124>
    1864:	fe 01       	movw	r30, r28
    1866:	e2 0f       	add	r30, r18
    1868:	f3 1f       	adc	r31, r19
    186a:	81 93       	st	Z+, r24
    186c:	91 93       	st	Z+, r25
    186e:	22 50       	subi	r18, 0x02	; 2
    1870:	31 09       	sbc	r19, r1
    1872:	39 83       	std	Y+1, r19	; 0x01
    1874:	28 83       	st	Y, r18
    1876:	3a c0       	rjmp	.+116    	; 0x18ec <malloc+0x124>
    1878:	20 91 f0 01 	lds	r18, 0x01F0	; 0x8001f0 <__brkval>
    187c:	30 91 f1 01 	lds	r19, 0x01F1	; 0x8001f1 <__brkval+0x1>
    1880:	23 2b       	or	r18, r19
    1882:	41 f4       	brne	.+16     	; 0x1894 <malloc+0xcc>
    1884:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1888:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    188c:	30 93 f1 01 	sts	0x01F1, r19	; 0x8001f1 <__brkval+0x1>
    1890:	20 93 f0 01 	sts	0x01F0, r18	; 0x8001f0 <__brkval>
    1894:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1898:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    189c:	21 15       	cp	r18, r1
    189e:	31 05       	cpc	r19, r1
    18a0:	41 f4       	brne	.+16     	; 0x18b2 <malloc+0xea>
    18a2:	2d b7       	in	r18, 0x3d	; 61
    18a4:	3e b7       	in	r19, 0x3e	; 62
    18a6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    18aa:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    18ae:	24 1b       	sub	r18, r20
    18b0:	35 0b       	sbc	r19, r21
    18b2:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <__brkval>
    18b6:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <__brkval+0x1>
    18ba:	e2 17       	cp	r30, r18
    18bc:	f3 07       	cpc	r31, r19
    18be:	a0 f4       	brcc	.+40     	; 0x18e8 <malloc+0x120>
    18c0:	2e 1b       	sub	r18, r30
    18c2:	3f 0b       	sbc	r19, r31
    18c4:	28 17       	cp	r18, r24
    18c6:	39 07       	cpc	r19, r25
    18c8:	78 f0       	brcs	.+30     	; 0x18e8 <malloc+0x120>
    18ca:	ac 01       	movw	r20, r24
    18cc:	4e 5f       	subi	r20, 0xFE	; 254
    18ce:	5f 4f       	sbci	r21, 0xFF	; 255
    18d0:	24 17       	cp	r18, r20
    18d2:	35 07       	cpc	r19, r21
    18d4:	48 f0       	brcs	.+18     	; 0x18e8 <malloc+0x120>
    18d6:	4e 0f       	add	r20, r30
    18d8:	5f 1f       	adc	r21, r31
    18da:	50 93 f1 01 	sts	0x01F1, r21	; 0x8001f1 <__brkval+0x1>
    18de:	40 93 f0 01 	sts	0x01F0, r20	; 0x8001f0 <__brkval>
    18e2:	81 93       	st	Z+, r24
    18e4:	91 93       	st	Z+, r25
    18e6:	02 c0       	rjmp	.+4      	; 0x18ec <malloc+0x124>
    18e8:	e0 e0       	ldi	r30, 0x00	; 0
    18ea:	f0 e0       	ldi	r31, 0x00	; 0
    18ec:	cf 01       	movw	r24, r30
    18ee:	df 91       	pop	r29
    18f0:	cf 91       	pop	r28
    18f2:	1f 91       	pop	r17
    18f4:	0f 91       	pop	r16
    18f6:	08 95       	ret

000018f8 <free>:
    18f8:	cf 93       	push	r28
    18fa:	df 93       	push	r29
    18fc:	00 97       	sbiw	r24, 0x00	; 0
    18fe:	09 f4       	brne	.+2      	; 0x1902 <free+0xa>
    1900:	81 c0       	rjmp	.+258    	; 0x1a04 <free+0x10c>
    1902:	fc 01       	movw	r30, r24
    1904:	32 97       	sbiw	r30, 0x02	; 2
    1906:	13 82       	std	Z+3, r1	; 0x03
    1908:	12 82       	std	Z+2, r1	; 0x02
    190a:	a0 91 f2 01 	lds	r26, 0x01F2	; 0x8001f2 <__flp>
    190e:	b0 91 f3 01 	lds	r27, 0x01F3	; 0x8001f3 <__flp+0x1>
    1912:	10 97       	sbiw	r26, 0x00	; 0
    1914:	81 f4       	brne	.+32     	; 0x1936 <free+0x3e>
    1916:	20 81       	ld	r18, Z
    1918:	31 81       	ldd	r19, Z+1	; 0x01
    191a:	82 0f       	add	r24, r18
    191c:	93 1f       	adc	r25, r19
    191e:	20 91 f0 01 	lds	r18, 0x01F0	; 0x8001f0 <__brkval>
    1922:	30 91 f1 01 	lds	r19, 0x01F1	; 0x8001f1 <__brkval+0x1>
    1926:	28 17       	cp	r18, r24
    1928:	39 07       	cpc	r19, r25
    192a:	51 f5       	brne	.+84     	; 0x1980 <free+0x88>
    192c:	f0 93 f1 01 	sts	0x01F1, r31	; 0x8001f1 <__brkval+0x1>
    1930:	e0 93 f0 01 	sts	0x01F0, r30	; 0x8001f0 <__brkval>
    1934:	67 c0       	rjmp	.+206    	; 0x1a04 <free+0x10c>
    1936:	ed 01       	movw	r28, r26
    1938:	20 e0       	ldi	r18, 0x00	; 0
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	ce 17       	cp	r28, r30
    193e:	df 07       	cpc	r29, r31
    1940:	40 f4       	brcc	.+16     	; 0x1952 <free+0x5a>
    1942:	4a 81       	ldd	r20, Y+2	; 0x02
    1944:	5b 81       	ldd	r21, Y+3	; 0x03
    1946:	9e 01       	movw	r18, r28
    1948:	41 15       	cp	r20, r1
    194a:	51 05       	cpc	r21, r1
    194c:	f1 f0       	breq	.+60     	; 0x198a <free+0x92>
    194e:	ea 01       	movw	r28, r20
    1950:	f5 cf       	rjmp	.-22     	; 0x193c <free+0x44>
    1952:	d3 83       	std	Z+3, r29	; 0x03
    1954:	c2 83       	std	Z+2, r28	; 0x02
    1956:	40 81       	ld	r20, Z
    1958:	51 81       	ldd	r21, Z+1	; 0x01
    195a:	84 0f       	add	r24, r20
    195c:	95 1f       	adc	r25, r21
    195e:	c8 17       	cp	r28, r24
    1960:	d9 07       	cpc	r29, r25
    1962:	59 f4       	brne	.+22     	; 0x197a <free+0x82>
    1964:	88 81       	ld	r24, Y
    1966:	99 81       	ldd	r25, Y+1	; 0x01
    1968:	84 0f       	add	r24, r20
    196a:	95 1f       	adc	r25, r21
    196c:	02 96       	adiw	r24, 0x02	; 2
    196e:	91 83       	std	Z+1, r25	; 0x01
    1970:	80 83       	st	Z, r24
    1972:	8a 81       	ldd	r24, Y+2	; 0x02
    1974:	9b 81       	ldd	r25, Y+3	; 0x03
    1976:	93 83       	std	Z+3, r25	; 0x03
    1978:	82 83       	std	Z+2, r24	; 0x02
    197a:	21 15       	cp	r18, r1
    197c:	31 05       	cpc	r19, r1
    197e:	29 f4       	brne	.+10     	; 0x198a <free+0x92>
    1980:	f0 93 f3 01 	sts	0x01F3, r31	; 0x8001f3 <__flp+0x1>
    1984:	e0 93 f2 01 	sts	0x01F2, r30	; 0x8001f2 <__flp>
    1988:	3d c0       	rjmp	.+122    	; 0x1a04 <free+0x10c>
    198a:	e9 01       	movw	r28, r18
    198c:	fb 83       	std	Y+3, r31	; 0x03
    198e:	ea 83       	std	Y+2, r30	; 0x02
    1990:	49 91       	ld	r20, Y+
    1992:	59 91       	ld	r21, Y+
    1994:	c4 0f       	add	r28, r20
    1996:	d5 1f       	adc	r29, r21
    1998:	ec 17       	cp	r30, r28
    199a:	fd 07       	cpc	r31, r29
    199c:	61 f4       	brne	.+24     	; 0x19b6 <free+0xbe>
    199e:	80 81       	ld	r24, Z
    19a0:	91 81       	ldd	r25, Z+1	; 0x01
    19a2:	84 0f       	add	r24, r20
    19a4:	95 1f       	adc	r25, r21
    19a6:	02 96       	adiw	r24, 0x02	; 2
    19a8:	e9 01       	movw	r28, r18
    19aa:	99 83       	std	Y+1, r25	; 0x01
    19ac:	88 83       	st	Y, r24
    19ae:	82 81       	ldd	r24, Z+2	; 0x02
    19b0:	93 81       	ldd	r25, Z+3	; 0x03
    19b2:	9b 83       	std	Y+3, r25	; 0x03
    19b4:	8a 83       	std	Y+2, r24	; 0x02
    19b6:	e0 e0       	ldi	r30, 0x00	; 0
    19b8:	f0 e0       	ldi	r31, 0x00	; 0
    19ba:	12 96       	adiw	r26, 0x02	; 2
    19bc:	8d 91       	ld	r24, X+
    19be:	9c 91       	ld	r25, X
    19c0:	13 97       	sbiw	r26, 0x03	; 3
    19c2:	00 97       	sbiw	r24, 0x00	; 0
    19c4:	19 f0       	breq	.+6      	; 0x19cc <free+0xd4>
    19c6:	fd 01       	movw	r30, r26
    19c8:	dc 01       	movw	r26, r24
    19ca:	f7 cf       	rjmp	.-18     	; 0x19ba <free+0xc2>
    19cc:	8d 91       	ld	r24, X+
    19ce:	9c 91       	ld	r25, X
    19d0:	11 97       	sbiw	r26, 0x01	; 1
    19d2:	9d 01       	movw	r18, r26
    19d4:	2e 5f       	subi	r18, 0xFE	; 254
    19d6:	3f 4f       	sbci	r19, 0xFF	; 255
    19d8:	82 0f       	add	r24, r18
    19da:	93 1f       	adc	r25, r19
    19dc:	20 91 f0 01 	lds	r18, 0x01F0	; 0x8001f0 <__brkval>
    19e0:	30 91 f1 01 	lds	r19, 0x01F1	; 0x8001f1 <__brkval+0x1>
    19e4:	28 17       	cp	r18, r24
    19e6:	39 07       	cpc	r19, r25
    19e8:	69 f4       	brne	.+26     	; 0x1a04 <free+0x10c>
    19ea:	30 97       	sbiw	r30, 0x00	; 0
    19ec:	29 f4       	brne	.+10     	; 0x19f8 <free+0x100>
    19ee:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <__flp+0x1>
    19f2:	10 92 f2 01 	sts	0x01F2, r1	; 0x8001f2 <__flp>
    19f6:	02 c0       	rjmp	.+4      	; 0x19fc <free+0x104>
    19f8:	13 82       	std	Z+3, r1	; 0x03
    19fa:	12 82       	std	Z+2, r1	; 0x02
    19fc:	b0 93 f1 01 	sts	0x01F1, r27	; 0x8001f1 <__brkval+0x1>
    1a00:	a0 93 f0 01 	sts	0x01F0, r26	; 0x8001f0 <__brkval>
    1a04:	df 91       	pop	r29
    1a06:	cf 91       	pop	r28
    1a08:	08 95       	ret

00001a0a <strnlen_P>:
    1a0a:	fc 01       	movw	r30, r24
    1a0c:	05 90       	lpm	r0, Z+
    1a0e:	61 50       	subi	r22, 0x01	; 1
    1a10:	70 40       	sbci	r23, 0x00	; 0
    1a12:	01 10       	cpse	r0, r1
    1a14:	d8 f7       	brcc	.-10     	; 0x1a0c <strnlen_P+0x2>
    1a16:	80 95       	com	r24
    1a18:	90 95       	com	r25
    1a1a:	8e 0f       	add	r24, r30
    1a1c:	9f 1f       	adc	r25, r31
    1a1e:	08 95       	ret

00001a20 <memset>:
    1a20:	dc 01       	movw	r26, r24
    1a22:	01 c0       	rjmp	.+2      	; 0x1a26 <memset+0x6>
    1a24:	6d 93       	st	X+, r22
    1a26:	41 50       	subi	r20, 0x01	; 1
    1a28:	50 40       	sbci	r21, 0x00	; 0
    1a2a:	e0 f7       	brcc	.-8      	; 0x1a24 <memset+0x4>
    1a2c:	08 95       	ret

00001a2e <strnlen>:
    1a2e:	fc 01       	movw	r30, r24
    1a30:	61 50       	subi	r22, 0x01	; 1
    1a32:	70 40       	sbci	r23, 0x00	; 0
    1a34:	01 90       	ld	r0, Z+
    1a36:	01 10       	cpse	r0, r1
    1a38:	d8 f7       	brcc	.-10     	; 0x1a30 <strnlen+0x2>
    1a3a:	80 95       	com	r24
    1a3c:	90 95       	com	r25
    1a3e:	8e 0f       	add	r24, r30
    1a40:	9f 1f       	adc	r25, r31
    1a42:	08 95       	ret

00001a44 <fputc>:
    1a44:	0f 93       	push	r16
    1a46:	1f 93       	push	r17
    1a48:	cf 93       	push	r28
    1a4a:	df 93       	push	r29
    1a4c:	fb 01       	movw	r30, r22
    1a4e:	23 81       	ldd	r18, Z+3	; 0x03
    1a50:	21 fd       	sbrc	r18, 1
    1a52:	03 c0       	rjmp	.+6      	; 0x1a5a <fputc+0x16>
    1a54:	8f ef       	ldi	r24, 0xFF	; 255
    1a56:	9f ef       	ldi	r25, 0xFF	; 255
    1a58:	2c c0       	rjmp	.+88     	; 0x1ab2 <fputc+0x6e>
    1a5a:	22 ff       	sbrs	r18, 2
    1a5c:	16 c0       	rjmp	.+44     	; 0x1a8a <fputc+0x46>
    1a5e:	46 81       	ldd	r20, Z+6	; 0x06
    1a60:	57 81       	ldd	r21, Z+7	; 0x07
    1a62:	24 81       	ldd	r18, Z+4	; 0x04
    1a64:	35 81       	ldd	r19, Z+5	; 0x05
    1a66:	42 17       	cp	r20, r18
    1a68:	53 07       	cpc	r21, r19
    1a6a:	44 f4       	brge	.+16     	; 0x1a7c <fputc+0x38>
    1a6c:	a0 81       	ld	r26, Z
    1a6e:	b1 81       	ldd	r27, Z+1	; 0x01
    1a70:	9d 01       	movw	r18, r26
    1a72:	2f 5f       	subi	r18, 0xFF	; 255
    1a74:	3f 4f       	sbci	r19, 0xFF	; 255
    1a76:	31 83       	std	Z+1, r19	; 0x01
    1a78:	20 83       	st	Z, r18
    1a7a:	8c 93       	st	X, r24
    1a7c:	26 81       	ldd	r18, Z+6	; 0x06
    1a7e:	37 81       	ldd	r19, Z+7	; 0x07
    1a80:	2f 5f       	subi	r18, 0xFF	; 255
    1a82:	3f 4f       	sbci	r19, 0xFF	; 255
    1a84:	37 83       	std	Z+7, r19	; 0x07
    1a86:	26 83       	std	Z+6, r18	; 0x06
    1a88:	14 c0       	rjmp	.+40     	; 0x1ab2 <fputc+0x6e>
    1a8a:	8b 01       	movw	r16, r22
    1a8c:	ec 01       	movw	r28, r24
    1a8e:	fb 01       	movw	r30, r22
    1a90:	00 84       	ldd	r0, Z+8	; 0x08
    1a92:	f1 85       	ldd	r31, Z+9	; 0x09
    1a94:	e0 2d       	mov	r30, r0
    1a96:	09 95       	icall
    1a98:	89 2b       	or	r24, r25
    1a9a:	e1 f6       	brne	.-72     	; 0x1a54 <fputc+0x10>
    1a9c:	d8 01       	movw	r26, r16
    1a9e:	16 96       	adiw	r26, 0x06	; 6
    1aa0:	8d 91       	ld	r24, X+
    1aa2:	9c 91       	ld	r25, X
    1aa4:	17 97       	sbiw	r26, 0x07	; 7
    1aa6:	01 96       	adiw	r24, 0x01	; 1
    1aa8:	17 96       	adiw	r26, 0x07	; 7
    1aaa:	9c 93       	st	X, r25
    1aac:	8e 93       	st	-X, r24
    1aae:	16 97       	sbiw	r26, 0x06	; 6
    1ab0:	ce 01       	movw	r24, r28
    1ab2:	df 91       	pop	r29
    1ab4:	cf 91       	pop	r28
    1ab6:	1f 91       	pop	r17
    1ab8:	0f 91       	pop	r16
    1aba:	08 95       	ret

00001abc <__ultoa_invert>:
    1abc:	fa 01       	movw	r30, r20
    1abe:	aa 27       	eor	r26, r26
    1ac0:	28 30       	cpi	r18, 0x08	; 8
    1ac2:	51 f1       	breq	.+84     	; 0x1b18 <__ultoa_invert+0x5c>
    1ac4:	20 31       	cpi	r18, 0x10	; 16
    1ac6:	81 f1       	breq	.+96     	; 0x1b28 <__ultoa_invert+0x6c>
    1ac8:	e8 94       	clt
    1aca:	6f 93       	push	r22
    1acc:	6e 7f       	andi	r22, 0xFE	; 254
    1ace:	6e 5f       	subi	r22, 0xFE	; 254
    1ad0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ad2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ad4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad6:	af 4f       	sbci	r26, 0xFF	; 255
    1ad8:	b1 e0       	ldi	r27, 0x01	; 1
    1ada:	3e d0       	rcall	.+124    	; 0x1b58 <__ultoa_invert+0x9c>
    1adc:	b4 e0       	ldi	r27, 0x04	; 4
    1ade:	3c d0       	rcall	.+120    	; 0x1b58 <__ultoa_invert+0x9c>
    1ae0:	67 0f       	add	r22, r23
    1ae2:	78 1f       	adc	r23, r24
    1ae4:	89 1f       	adc	r24, r25
    1ae6:	9a 1f       	adc	r25, r26
    1ae8:	a1 1d       	adc	r26, r1
    1aea:	68 0f       	add	r22, r24
    1aec:	79 1f       	adc	r23, r25
    1aee:	8a 1f       	adc	r24, r26
    1af0:	91 1d       	adc	r25, r1
    1af2:	a1 1d       	adc	r26, r1
    1af4:	6a 0f       	add	r22, r26
    1af6:	71 1d       	adc	r23, r1
    1af8:	81 1d       	adc	r24, r1
    1afa:	91 1d       	adc	r25, r1
    1afc:	a1 1d       	adc	r26, r1
    1afe:	20 d0       	rcall	.+64     	; 0x1b40 <__ultoa_invert+0x84>
    1b00:	09 f4       	brne	.+2      	; 0x1b04 <__ultoa_invert+0x48>
    1b02:	68 94       	set
    1b04:	3f 91       	pop	r19
    1b06:	2a e0       	ldi	r18, 0x0A	; 10
    1b08:	26 9f       	mul	r18, r22
    1b0a:	11 24       	eor	r1, r1
    1b0c:	30 19       	sub	r19, r0
    1b0e:	30 5d       	subi	r19, 0xD0	; 208
    1b10:	31 93       	st	Z+, r19
    1b12:	de f6       	brtc	.-74     	; 0x1aca <__ultoa_invert+0xe>
    1b14:	cf 01       	movw	r24, r30
    1b16:	08 95       	ret
    1b18:	46 2f       	mov	r20, r22
    1b1a:	47 70       	andi	r20, 0x07	; 7
    1b1c:	40 5d       	subi	r20, 0xD0	; 208
    1b1e:	41 93       	st	Z+, r20
    1b20:	b3 e0       	ldi	r27, 0x03	; 3
    1b22:	0f d0       	rcall	.+30     	; 0x1b42 <__ultoa_invert+0x86>
    1b24:	c9 f7       	brne	.-14     	; 0x1b18 <__ultoa_invert+0x5c>
    1b26:	f6 cf       	rjmp	.-20     	; 0x1b14 <__ultoa_invert+0x58>
    1b28:	46 2f       	mov	r20, r22
    1b2a:	4f 70       	andi	r20, 0x0F	; 15
    1b2c:	40 5d       	subi	r20, 0xD0	; 208
    1b2e:	4a 33       	cpi	r20, 0x3A	; 58
    1b30:	18 f0       	brcs	.+6      	; 0x1b38 <__ultoa_invert+0x7c>
    1b32:	49 5d       	subi	r20, 0xD9	; 217
    1b34:	31 fd       	sbrc	r19, 1
    1b36:	40 52       	subi	r20, 0x20	; 32
    1b38:	41 93       	st	Z+, r20
    1b3a:	02 d0       	rcall	.+4      	; 0x1b40 <__ultoa_invert+0x84>
    1b3c:	a9 f7       	brne	.-22     	; 0x1b28 <__ultoa_invert+0x6c>
    1b3e:	ea cf       	rjmp	.-44     	; 0x1b14 <__ultoa_invert+0x58>
    1b40:	b4 e0       	ldi	r27, 0x04	; 4
    1b42:	a6 95       	lsr	r26
    1b44:	97 95       	ror	r25
    1b46:	87 95       	ror	r24
    1b48:	77 95       	ror	r23
    1b4a:	67 95       	ror	r22
    1b4c:	ba 95       	dec	r27
    1b4e:	c9 f7       	brne	.-14     	; 0x1b42 <__ultoa_invert+0x86>
    1b50:	00 97       	sbiw	r24, 0x00	; 0
    1b52:	61 05       	cpc	r22, r1
    1b54:	71 05       	cpc	r23, r1
    1b56:	08 95       	ret
    1b58:	9b 01       	movw	r18, r22
    1b5a:	ac 01       	movw	r20, r24
    1b5c:	0a 2e       	mov	r0, r26
    1b5e:	06 94       	lsr	r0
    1b60:	57 95       	ror	r21
    1b62:	47 95       	ror	r20
    1b64:	37 95       	ror	r19
    1b66:	27 95       	ror	r18
    1b68:	ba 95       	dec	r27
    1b6a:	c9 f7       	brne	.-14     	; 0x1b5e <__ultoa_invert+0xa2>
    1b6c:	62 0f       	add	r22, r18
    1b6e:	73 1f       	adc	r23, r19
    1b70:	84 1f       	adc	r24, r20
    1b72:	95 1f       	adc	r25, r21
    1b74:	a0 1d       	adc	r26, r0
    1b76:	08 95       	ret

00001b78 <__prologue_saves__>:
    1b78:	2f 92       	push	r2
    1b7a:	3f 92       	push	r3
    1b7c:	4f 92       	push	r4
    1b7e:	5f 92       	push	r5
    1b80:	6f 92       	push	r6
    1b82:	7f 92       	push	r7
    1b84:	8f 92       	push	r8
    1b86:	9f 92       	push	r9
    1b88:	af 92       	push	r10
    1b8a:	bf 92       	push	r11
    1b8c:	cf 92       	push	r12
    1b8e:	df 92       	push	r13
    1b90:	ef 92       	push	r14
    1b92:	ff 92       	push	r15
    1b94:	0f 93       	push	r16
    1b96:	1f 93       	push	r17
    1b98:	cf 93       	push	r28
    1b9a:	df 93       	push	r29
    1b9c:	cd b7       	in	r28, 0x3d	; 61
    1b9e:	de b7       	in	r29, 0x3e	; 62
    1ba0:	ca 1b       	sub	r28, r26
    1ba2:	db 0b       	sbc	r29, r27
    1ba4:	0f b6       	in	r0, 0x3f	; 63
    1ba6:	f8 94       	cli
    1ba8:	de bf       	out	0x3e, r29	; 62
    1baa:	0f be       	out	0x3f, r0	; 63
    1bac:	cd bf       	out	0x3d, r28	; 61
    1bae:	09 94       	ijmp

00001bb0 <__epilogue_restores__>:
    1bb0:	2a 88       	ldd	r2, Y+18	; 0x12
    1bb2:	39 88       	ldd	r3, Y+17	; 0x11
    1bb4:	48 88       	ldd	r4, Y+16	; 0x10
    1bb6:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bb8:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bba:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bbc:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bbe:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bc0:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bc2:	b9 84       	ldd	r11, Y+9	; 0x09
    1bc4:	c8 84       	ldd	r12, Y+8	; 0x08
    1bc6:	df 80       	ldd	r13, Y+7	; 0x07
    1bc8:	ee 80       	ldd	r14, Y+6	; 0x06
    1bca:	fd 80       	ldd	r15, Y+5	; 0x05
    1bcc:	0c 81       	ldd	r16, Y+4	; 0x04
    1bce:	1b 81       	ldd	r17, Y+3	; 0x03
    1bd0:	aa 81       	ldd	r26, Y+2	; 0x02
    1bd2:	b9 81       	ldd	r27, Y+1	; 0x01
    1bd4:	ce 0f       	add	r28, r30
    1bd6:	d1 1d       	adc	r29, r1
    1bd8:	0f b6       	in	r0, 0x3f	; 63
    1bda:	f8 94       	cli
    1bdc:	de bf       	out	0x3e, r29	; 62
    1bde:	0f be       	out	0x3f, r0	; 63
    1be0:	cd bf       	out	0x3d, r28	; 61
    1be2:	ed 01       	movw	r28, r26
    1be4:	08 95       	ret

00001be6 <_exit>:
    1be6:	f8 94       	cli

00001be8 <__stop_program>:
    1be8:	ff cf       	rjmp	.-2      	; 0x1be8 <__stop_program>
