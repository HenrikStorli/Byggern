
TestYolo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000164  00800100  00002356  000023ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002356  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009c  00800264  00800264  0000254e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000254e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000025ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000308  00000000  00000000  000025e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003705  00000000  00000000  000028f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001541  00000000  00000000  00005ff5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001902  00000000  00000000  00007536  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000848  00000000  00000000  00008e38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cad  00000000  00000000  00009680  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000020c9  00000000  00000000  0000a32d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000288  00000000  00000000  0000c3f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cb 01 	jmp	0x396	; 0x396 <__ctors_end>
       4:	0c 94 3c 02 	jmp	0x478	; 0x478 <__vector_1>
       8:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
       c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      10:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      14:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      18:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      1c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      20:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      24:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      28:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      2c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      30:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      34:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      38:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      3c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      40:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      44:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      48:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      4c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      50:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      54:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      58:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      5c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      60:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      64:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      68:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      6c:	0c 94 e8 01 	jmp	0x3d0	; 0x3d0 <__bad_interrupt>
      70:	08 4a       	sbci	r16, 0xA8	; 168
      72:	d7 3b       	cpi	r29, 0xB7	; 183
      74:	3b ce       	rjmp	.-906    	; 0xfffffcec <__eeprom_end+0xff7efcec>
      76:	01 6e       	ori	r16, 0xE1	; 225
      78:	84 bc       	out	0x24, r8	; 36
      7a:	bf fd       	.word	0xfdbf	; ????
      7c:	c1 2f       	mov	r28, r17
      7e:	3d 6c       	ori	r19, 0xCD	; 205
      80:	74 31       	cpi	r23, 0x14	; 20
      82:	9a bd       	out	0x2a, r25	; 42
      84:	56 83       	std	Z+6, r21	; 0x06
      86:	3d da       	rcall	.-2950   	; 0xfffff502 <__eeprom_end+0xff7ef502>
      88:	3d 00       	.word	0x003d	; ????
      8a:	c7 7f       	andi	r28, 0xF7	; 247
      8c:	11 be       	out	0x31, r1	; 49
      8e:	d9 e4       	ldi	r29, 0x49	; 73
      90:	bb 4c       	sbci	r27, 0xCB	; 203
      92:	3e 91       	ld	r19, -X
      94:	6b aa       	std	Y+51, r6	; 0x33
      96:	aa be       	out	0x3a, r10	; 58
      98:	00 00       	nop
      9a:	00 80       	ld	r0, Z
      9c:	3f 00       	.word	0x003f	; ????

0000009e <__trampolines_end>:
	...
      a6:	00 06       	cpc	r0, r16
      a8:	5f 5f       	subi	r21, 0xFF	; 255
      aa:	06 00       	.word	0x0006	; ????
      ac:	00 00       	nop
      ae:	00 07       	cpc	r16, r16
      b0:	07 00       	.word	0x0007	; ????
      b2:	07 07       	cpc	r16, r23
      b4:	00 00       	nop
      b6:	14 7f       	andi	r17, 0xF4	; 244
      b8:	7f 14       	cp	r7, r15
      ba:	7f 7f       	andi	r23, 0xFF	; 255
      bc:	14 00       	.word	0x0014	; ????
      be:	24 2e       	mov	r2, r20
      c0:	6b 6b       	ori	r22, 0xBB	; 187
      c2:	3a 12       	cpse	r3, r26
      c4:	00 00       	nop
      c6:	46 66       	ori	r20, 0x66	; 102
      c8:	30 18       	sub	r3, r0
      ca:	0c 66       	ori	r16, 0x6C	; 108
      cc:	62 00       	.word	0x0062	; ????
      ce:	30 7a       	andi	r19, 0xA0	; 160
      d0:	4f 5d       	subi	r20, 0xDF	; 223
      d2:	37 7a       	andi	r19, 0xA7	; 167
      d4:	48 00       	.word	0x0048	; ????
      d6:	04 07       	cpc	r16, r20
      d8:	03 00       	.word	0x0003	; ????
      da:	00 00       	nop
      dc:	00 00       	nop
      de:	00 1c       	adc	r0, r0
      e0:	3e 63       	ori	r19, 0x3E	; 62
      e2:	41 00       	.word	0x0041	; ????
      e4:	00 00       	nop
      e6:	00 41       	sbci	r16, 0x10	; 16
      e8:	63 3e       	cpi	r22, 0xE3	; 227
      ea:	1c 00       	.word	0x001c	; ????
      ec:	00 00       	nop
      ee:	08 2a       	or	r0, r24
      f0:	3e 1c       	adc	r3, r14
      f2:	1c 3e       	cpi	r17, 0xEC	; 236
      f4:	2a 08       	sbc	r2, r10
      f6:	08 08       	sbc	r0, r8
      f8:	3e 3e       	cpi	r19, 0xEE	; 238
      fa:	08 08       	sbc	r0, r8
      fc:	00 00       	nop
      fe:	00 a0       	ldd	r0, Z+32	; 0x20
     100:	e0 60       	ori	r30, 0x00	; 0
     102:	00 00       	nop
     104:	00 00       	nop
     106:	08 08       	sbc	r0, r8
     108:	08 08       	sbc	r0, r8
     10a:	08 08       	sbc	r0, r8
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	60 60       	ori	r22, 0x00	; 0
     112:	00 00       	nop
     114:	00 00       	nop
     116:	60 30       	cpi	r22, 0x00	; 0
     118:	18 0c       	add	r1, r8
     11a:	06 03       	mulsu	r16, r22
     11c:	01 00       	.word	0x0001	; ????
     11e:	3e 7f       	andi	r19, 0xFE	; 254
     120:	59 4d       	sbci	r21, 0xD9	; 217
     122:	7f 3e       	cpi	r23, 0xEF	; 239
     124:	00 00       	nop
     126:	42 42       	sbci	r20, 0x22	; 34
     128:	7f 7f       	andi	r23, 0xFF	; 255
     12a:	40 40       	sbci	r20, 0x00	; 0
     12c:	00 00       	nop
     12e:	62 73       	andi	r22, 0x32	; 50
     130:	59 49       	sbci	r21, 0x99	; 153
     132:	6f 66       	ori	r22, 0x6F	; 111
     134:	00 00       	nop
     136:	22 63       	ori	r18, 0x32	; 50
     138:	49 49       	sbci	r20, 0x99	; 153
     13a:	7f 36       	cpi	r23, 0x6F	; 111
     13c:	00 00       	nop
     13e:	18 1c       	adc	r1, r8
     140:	16 13       	cpse	r17, r22
     142:	7f 7f       	andi	r23, 0xFF	; 255
     144:	10 00       	.word	0x0010	; ????
     146:	27 67       	ori	r18, 0x77	; 119
     148:	45 45       	sbci	r20, 0x55	; 85
     14a:	7d 39       	cpi	r23, 0x9D	; 157
     14c:	00 00       	nop
     14e:	3c 7e       	andi	r19, 0xEC	; 236
     150:	4b 49       	sbci	r20, 0x9B	; 155
     152:	79 30       	cpi	r23, 0x09	; 9
     154:	00 00       	nop
     156:	03 63       	ori	r16, 0x33	; 51
     158:	71 19       	sub	r23, r1
     15a:	0f 07       	cpc	r16, r31
     15c:	00 00       	nop
     15e:	36 7f       	andi	r19, 0xF6	; 246
     160:	49 49       	sbci	r20, 0x99	; 153
     162:	7f 36       	cpi	r23, 0x6F	; 111
     164:	00 00       	nop
     166:	06 4f       	sbci	r16, 0xF6	; 246
     168:	49 69       	ori	r20, 0x99	; 153
     16a:	3f 1e       	adc	r3, r31
     16c:	00 00       	nop
     16e:	00 00       	nop
     170:	6c 6c       	ori	r22, 0xCC	; 204
     172:	00 00       	nop
     174:	00 00       	nop
     176:	00 a0       	ldd	r0, Z+32	; 0x20
     178:	ec 6c       	ori	r30, 0xCC	; 204
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	08 1c       	adc	r0, r8
     180:	36 63       	ori	r19, 0x36	; 54
     182:	41 00       	.word	0x0041	; ????
     184:	00 00       	nop
     186:	14 14       	cp	r1, r4
     188:	14 14       	cp	r1, r4
     18a:	14 14       	cp	r1, r4
     18c:	00 00       	nop
     18e:	00 41       	sbci	r16, 0x10	; 16
     190:	63 36       	cpi	r22, 0x63	; 99
     192:	1c 08       	sbc	r1, r12
     194:	00 00       	nop
     196:	02 03       	mulsu	r16, r18
     198:	51 59       	subi	r21, 0x91	; 145
     19a:	0f 06       	cpc	r0, r31
     19c:	00 00       	nop
     19e:	3e 7f       	andi	r19, 0xFE	; 254
     1a0:	41 5d       	subi	r20, 0xD1	; 209
     1a2:	5d 1f       	adc	r21, r29
     1a4:	1e 00       	.word	0x001e	; ????
     1a6:	7c 7e       	andi	r23, 0xEC	; 236
     1a8:	13 13       	cpse	r17, r19
     1aa:	7e 7c       	andi	r23, 0xCE	; 206
     1ac:	00 00       	nop
     1ae:	41 7f       	andi	r20, 0xF1	; 241
     1b0:	7f 49       	sbci	r23, 0x9F	; 159
     1b2:	49 7f       	andi	r20, 0xF9	; 249
     1b4:	36 00       	.word	0x0036	; ????
     1b6:	1c 3e       	cpi	r17, 0xEC	; 236
     1b8:	63 41       	sbci	r22, 0x13	; 19
     1ba:	41 63       	ori	r20, 0x31	; 49
     1bc:	22 00       	.word	0x0022	; ????
     1be:	41 7f       	andi	r20, 0xF1	; 241
     1c0:	7f 41       	sbci	r23, 0x1F	; 31
     1c2:	63 7f       	andi	r22, 0xF3	; 243
     1c4:	1c 00       	.word	0x001c	; ????
     1c6:	41 7f       	andi	r20, 0xF1	; 241
     1c8:	7f 49       	sbci	r23, 0x9F	; 159
     1ca:	5d 41       	sbci	r21, 0x1D	; 29
     1cc:	63 00       	.word	0x0063	; ????
     1ce:	41 7f       	andi	r20, 0xF1	; 241
     1d0:	7f 49       	sbci	r23, 0x9F	; 159
     1d2:	1d 01       	movw	r2, r26
     1d4:	03 00       	.word	0x0003	; ????
     1d6:	1c 3e       	cpi	r17, 0xEC	; 236
     1d8:	63 41       	sbci	r22, 0x13	; 19
     1da:	51 73       	andi	r21, 0x31	; 49
     1dc:	72 00       	.word	0x0072	; ????
     1de:	7f 7f       	andi	r23, 0xFF	; 255
     1e0:	08 08       	sbc	r0, r8
     1e2:	7f 7f       	andi	r23, 0xFF	; 255
     1e4:	00 00       	nop
     1e6:	00 41       	sbci	r16, 0x10	; 16
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	41 00       	.word	0x0041	; ????
     1ec:	00 00       	nop
     1ee:	30 70       	andi	r19, 0x00	; 0
     1f0:	40 41       	sbci	r20, 0x10	; 16
     1f2:	7f 3f       	cpi	r23, 0xFF	; 255
     1f4:	01 00       	.word	0x0001	; ????
     1f6:	41 7f       	andi	r20, 0xF1	; 241
     1f8:	7f 08       	sbc	r7, r15
     1fa:	1c 77       	andi	r17, 0x7C	; 124
     1fc:	63 00       	.word	0x0063	; ????
     1fe:	41 7f       	andi	r20, 0xF1	; 241
     200:	7f 41       	sbci	r23, 0x1F	; 31
     202:	40 60       	ori	r20, 0x00	; 0
     204:	70 00       	.word	0x0070	; ????
     206:	7f 7f       	andi	r23, 0xFF	; 255
     208:	06 0c       	add	r0, r6
     20a:	06 7f       	andi	r16, 0xF6	; 246
     20c:	7f 00       	.word	0x007f	; ????
     20e:	7f 7f       	andi	r23, 0xFF	; 255
     210:	06 0c       	add	r0, r6
     212:	18 7f       	andi	r17, 0xF8	; 248
     214:	7f 00       	.word	0x007f	; ????
     216:	1c 3e       	cpi	r17, 0xEC	; 236
     218:	63 41       	sbci	r22, 0x13	; 19
     21a:	63 3e       	cpi	r22, 0xE3	; 227
     21c:	1c 00       	.word	0x001c	; ????
     21e:	41 7f       	andi	r20, 0xF1	; 241
     220:	7f 49       	sbci	r23, 0x9F	; 159
     222:	09 0f       	add	r16, r25
     224:	06 00       	.word	0x0006	; ????
     226:	1e 3f       	cpi	r17, 0xFE	; 254
     228:	21 71       	andi	r18, 0x11	; 17
     22a:	7f 5e       	subi	r23, 0xEF	; 239
     22c:	00 00       	nop
     22e:	41 7f       	andi	r20, 0xF1	; 241
     230:	7f 19       	sub	r23, r15
     232:	39 6f       	ori	r19, 0xF9	; 249
     234:	46 00       	.word	0x0046	; ????
     236:	26 67       	ori	r18, 0x76	; 118
     238:	4d 59       	subi	r20, 0x9D	; 157
     23a:	7b 32       	cpi	r23, 0x2B	; 43
     23c:	00 00       	nop
     23e:	03 41       	sbci	r16, 0x13	; 19
     240:	7f 7f       	andi	r23, 0xFF	; 255
     242:	41 03       	mulsu	r20, r17
     244:	00 00       	nop
     246:	7f 7f       	andi	r23, 0xFF	; 255
     248:	40 40       	sbci	r20, 0x00	; 0
     24a:	7f 7f       	andi	r23, 0xFF	; 255
     24c:	00 00       	nop
     24e:	1f 3f       	cpi	r17, 0xFF	; 255
     250:	60 60       	ori	r22, 0x00	; 0
     252:	3f 1f       	adc	r19, r31
     254:	00 00       	nop
     256:	7f 7f       	andi	r23, 0xFF	; 255
     258:	30 18       	sub	r3, r0
     25a:	30 7f       	andi	r19, 0xF0	; 240
     25c:	7f 00       	.word	0x007f	; ????
     25e:	63 77       	andi	r22, 0x73	; 115
     260:	1c 08       	sbc	r1, r12
     262:	1c 77       	andi	r17, 0x7C	; 124
     264:	63 00       	.word	0x0063	; ????
     266:	07 4f       	sbci	r16, 0xF7	; 247
     268:	78 78       	andi	r23, 0x88	; 136
     26a:	4f 07       	cpc	r20, r31
     26c:	00 00       	nop
     26e:	67 73       	andi	r22, 0x37	; 55
     270:	59 4d       	sbci	r21, 0xD9	; 217
     272:	47 63       	ori	r20, 0x37	; 55
     274:	71 00       	.word	0x0071	; ????
     276:	00 7f       	andi	r16, 0xF0	; 240
     278:	7f 41       	sbci	r23, 0x1F	; 31
     27a:	41 00       	.word	0x0041	; ????
     27c:	00 00       	nop
     27e:	01 03       	mulsu	r16, r17
     280:	06 0c       	add	r0, r6
     282:	18 30       	cpi	r17, 0x08	; 8
     284:	60 00       	.word	0x0060	; ????
     286:	00 41       	sbci	r16, 0x10	; 16
     288:	41 7f       	andi	r20, 0xF1	; 241
     28a:	7f 00       	.word	0x007f	; ????
     28c:	00 00       	nop
     28e:	08 0c       	add	r0, r8
     290:	06 03       	mulsu	r16, r22
     292:	06 0c       	add	r0, r6
     294:	08 00       	.word	0x0008	; ????
     296:	80 80       	ld	r8, Z
     298:	80 80       	ld	r8, Z
     29a:	80 80       	ld	r8, Z
     29c:	80 80       	ld	r8, Z
     29e:	00 00       	nop
     2a0:	03 07       	cpc	r16, r19
     2a2:	04 00       	.word	0x0004	; ????
     2a4:	00 00       	nop
     2a6:	20 74       	andi	r18, 0x40	; 64
     2a8:	54 54       	subi	r21, 0x44	; 68
     2aa:	3c 78       	andi	r19, 0x8C	; 140
     2ac:	40 00       	.word	0x0040	; ????
     2ae:	41 3f       	cpi	r20, 0xF1	; 241
     2b0:	7f 44       	sbci	r23, 0x4F	; 79
     2b2:	44 7c       	andi	r20, 0xC4	; 196
     2b4:	38 00       	.word	0x0038	; ????
     2b6:	38 7c       	andi	r19, 0xC8	; 200
     2b8:	44 44       	sbci	r20, 0x44	; 68
     2ba:	6c 28       	or	r6, r12
     2bc:	00 00       	nop
     2be:	30 78       	andi	r19, 0x80	; 128
     2c0:	48 49       	sbci	r20, 0x98	; 152
     2c2:	3f 7f       	andi	r19, 0xFF	; 255
     2c4:	40 00       	.word	0x0040	; ????
     2c6:	38 7c       	andi	r19, 0xC8	; 200
     2c8:	54 54       	subi	r21, 0x44	; 68
     2ca:	5c 18       	sub	r5, r12
     2cc:	00 00       	nop
     2ce:	48 7e       	andi	r20, 0xE8	; 232
     2d0:	7f 49       	sbci	r23, 0x9F	; 159
     2d2:	03 02       	muls	r16, r19
     2d4:	00 00       	nop
     2d6:	98 bc       	out	0x28, r9	; 40
     2d8:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2da:	f8 7c       	andi	r31, 0xC8	; 200
     2dc:	04 00       	.word	0x0004	; ????
     2de:	41 7f       	andi	r20, 0xF1	; 241
     2e0:	7f 08       	sbc	r7, r15
     2e2:	04 7c       	andi	r16, 0xC4	; 196
     2e4:	78 00       	.word	0x0078	; ????
     2e6:	00 44       	sbci	r16, 0x40	; 64
     2e8:	7d 7d       	andi	r23, 0xDD	; 221
     2ea:	40 00       	.word	0x0040	; ????
     2ec:	00 00       	nop
     2ee:	40 c4       	rjmp	.+2176   	; 0xb70 <check_highscore+0x2>
     2f0:	84 fd       	sbrc	r24, 4
     2f2:	7d 00       	.word	0x007d	; ????
     2f4:	00 00       	nop
     2f6:	41 7f       	andi	r20, 0xF1	; 241
     2f8:	7f 10       	cpse	r7, r15
     2fa:	38 6c       	ori	r19, 0xC8	; 200
     2fc:	44 00       	.word	0x0044	; ????
     2fe:	00 41       	sbci	r16, 0x10	; 16
     300:	7f 7f       	andi	r23, 0xFF	; 255
     302:	40 00       	.word	0x0040	; ????
     304:	00 00       	nop
     306:	7c 7c       	andi	r23, 0xCC	; 204
     308:	0c 18       	sub	r0, r12
     30a:	0c 7c       	andi	r16, 0xCC	; 204
     30c:	78 00       	.word	0x0078	; ????
     30e:	7c 7c       	andi	r23, 0xCC	; 204
     310:	04 04       	cpc	r0, r4
     312:	7c 78       	andi	r23, 0x8C	; 140
     314:	00 00       	nop
     316:	38 7c       	andi	r19, 0xC8	; 200
     318:	44 44       	sbci	r20, 0x44	; 68
     31a:	7c 38       	cpi	r23, 0x8C	; 140
     31c:	00 00       	nop
     31e:	84 fc       	sbrc	r8, 4
     320:	f8 a4       	ldd	r15, Y+40	; 0x28
     322:	24 3c       	cpi	r18, 0xC4	; 196
     324:	18 00       	.word	0x0018	; ????
     326:	18 3c       	cpi	r17, 0xC8	; 200
     328:	24 a4       	ldd	r2, Z+44	; 0x2c
     32a:	f8 fc       	.word	0xfcf8	; ????
     32c:	84 00       	.word	0x0084	; ????
     32e:	44 7c       	andi	r20, 0xC4	; 196
     330:	78 44       	sbci	r23, 0x48	; 72
     332:	1c 18       	sub	r1, r12
     334:	00 00       	nop
     336:	48 5c       	subi	r20, 0xC8	; 200
     338:	54 54       	subi	r21, 0x44	; 68
     33a:	74 24       	eor	r7, r4
     33c:	00 00       	nop
     33e:	00 04       	cpc	r0, r0
     340:	3e 7f       	andi	r19, 0xFE	; 254
     342:	44 24       	eor	r4, r4
     344:	00 00       	nop
     346:	3c 7c       	andi	r19, 0xCC	; 204
     348:	40 40       	sbci	r20, 0x00	; 0
     34a:	3c 7c       	andi	r19, 0xCC	; 204
     34c:	40 00       	.word	0x0040	; ????
     34e:	1c 3c       	cpi	r17, 0xCC	; 204
     350:	60 60       	ori	r22, 0x00	; 0
     352:	3c 1c       	adc	r3, r12
     354:	00 00       	nop
     356:	3c 7c       	andi	r19, 0xCC	; 204
     358:	60 30       	cpi	r22, 0x00	; 0
     35a:	60 7c       	andi	r22, 0xC0	; 192
     35c:	3c 00       	.word	0x003c	; ????
     35e:	44 6c       	ori	r20, 0xC4	; 196
     360:	38 10       	cpse	r3, r8
     362:	38 6c       	ori	r19, 0xC8	; 200
     364:	44 00       	.word	0x0044	; ????
     366:	9c bc       	out	0x2c, r9	; 44
     368:	a0 a0       	ldd	r10, Z+32	; 0x20
     36a:	fc 7c       	andi	r31, 0xCC	; 204
     36c:	00 00       	nop
     36e:	4c 64       	ori	r20, 0x4C	; 76
     370:	74 5c       	subi	r23, 0xC4	; 196
     372:	4c 64       	ori	r20, 0x4C	; 76
     374:	00 00       	nop
     376:	08 08       	sbc	r0, r8
     378:	3e 77       	andi	r19, 0x7E	; 126
     37a:	41 41       	sbci	r20, 0x11	; 17
     37c:	00 00       	nop
     37e:	00 00       	nop
     380:	00 77       	andi	r16, 0x70	; 112
     382:	77 00       	.word	0x0077	; ????
     384:	00 00       	nop
     386:	41 41       	sbci	r20, 0x11	; 17
     388:	77 3e       	cpi	r23, 0xE7	; 231
     38a:	08 08       	sbc	r0, r8
     38c:	00 00       	nop
     38e:	02 03       	mulsu	r16, r18
     390:	01 03       	mulsu	r16, r17
     392:	02 03       	mulsu	r16, r18
     394:	01 00       	.word	0x0001	; ????

00000396 <__ctors_end>:
     396:	11 24       	eor	r1, r1
     398:	1f be       	out	0x3f, r1	; 63
     39a:	cf ef       	ldi	r28, 0xFF	; 255
     39c:	d4 e0       	ldi	r29, 0x04	; 4
     39e:	de bf       	out	0x3e, r29	; 62
     3a0:	cd bf       	out	0x3d, r28	; 61

000003a2 <__do_copy_data>:
     3a2:	12 e0       	ldi	r17, 0x02	; 2
     3a4:	a0 e0       	ldi	r26, 0x00	; 0
     3a6:	b1 e0       	ldi	r27, 0x01	; 1
     3a8:	e6 e5       	ldi	r30, 0x56	; 86
     3aa:	f3 e2       	ldi	r31, 0x23	; 35
     3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <__do_copy_data+0x10>
     3ae:	05 90       	lpm	r0, Z+
     3b0:	0d 92       	st	X+, r0
     3b2:	a4 36       	cpi	r26, 0x64	; 100
     3b4:	b1 07       	cpc	r27, r17
     3b6:	d9 f7       	brne	.-10     	; 0x3ae <__do_copy_data+0xc>

000003b8 <__do_clear_bss>:
     3b8:	23 e0       	ldi	r18, 0x03	; 3
     3ba:	a4 e6       	ldi	r26, 0x64	; 100
     3bc:	b2 e0       	ldi	r27, 0x02	; 2
     3be:	01 c0       	rjmp	.+2      	; 0x3c2 <.do_clear_bss_start>

000003c0 <.do_clear_bss_loop>:
     3c0:	1d 92       	st	X+, r1

000003c2 <.do_clear_bss_start>:
     3c2:	a0 30       	cpi	r26, 0x00	; 0
     3c4:	b2 07       	cpc	r27, r18
     3c6:	e1 f7       	brne	.-8      	; 0x3c0 <.do_clear_bss_loop>
     3c8:	0e 94 7d 09 	call	0x12fa	; 0x12fa <main>
     3cc:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <_exit>

000003d0 <__bad_interrupt>:
     3d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003d4 <ADC_read>:
    uint8_t retreived_value = ext_ram1[adrs];
    if (retreived_value != 0b01010101) {
        printf("ADC error, ext_ram1[%4d] = %02X  \n\r", adrs, retreived_value);
    }
    else{
        printf("ADC success, ext_ram1[%4d] = %02X  \n\r", adrs, retreived_value);
     3d4:	80 68       	ori	r24, 0x80	; 128
     3d6:	e1 e0       	ldi	r30, 0x01	; 1
     3d8:	f4 e1       	ldi	r31, 0x14	; 20
     3da:	80 83       	st	Z, r24
     3dc:	86 ef       	ldi	r24, 0xF6	; 246
     3de:	8a 95       	dec	r24
     3e0:	f1 f7       	brne	.-4      	; 0x3de <ADC_read+0xa>
     3e2:	80 81       	ld	r24, Z
     3e4:	08 95       	ret

000003e6 <ADC_calibrate>:
     3e6:	e1 e0       	ldi	r30, 0x01	; 1
     3e8:	f4 e1       	ldi	r31, 0x14	; 20
     3ea:	20 e8       	ldi	r18, 0x80	; 128
     3ec:	20 83       	st	Z, r18
     3ee:	26 ef       	ldi	r18, 0xF6	; 246
     3f0:	2a 95       	dec	r18
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <ADC_calibrate+0xa>
     3f4:	20 81       	ld	r18, Z
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	dc 01       	movw	r26, r24
     3fa:	2d 93       	st	X+, r18
     3fc:	3c 93       	st	X, r19
     3fe:	21 e8       	ldi	r18, 0x81	; 129
     400:	20 83       	st	Z, r18
     402:	b6 ef       	ldi	r27, 0xF6	; 246
     404:	ba 95       	dec	r27
     406:	f1 f7       	brne	.-4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     408:	20 81       	ld	r18, Z
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	fc 01       	movw	r30, r24
     40e:	33 83       	std	Z+3, r19	; 0x03
     410:	22 83       	std	Z+2, r18	; 0x02
     412:	08 95       	ret

00000414 <ADC_timer_init>:
}


void ADC_timer_init(void) {

    DDRB|=(1<<PB0);  /*set OC0 pin as output*/
     414:	b8 9a       	sbi	0x17, 0	; 23

    TCCR0 |= (1<<WGM01) | (0<<WGM00);
     416:	83 b7       	in	r24, 0x33	; 51
     418:	88 60       	ori	r24, 0x08	; 8
     41a:	83 bf       	out	0x33, r24	; 51
    TCCR0 |= (1<<COM00);
     41c:	83 b7       	in	r24, 0x33	; 51
     41e:	80 61       	ori	r24, 0x10	; 16
     420:	83 bf       	out	0x33, r24	; 51
    TCCR0 |= (1<<CS00);
     422:	83 b7       	in	r24, 0x33	; 51
     424:	81 60       	ori	r24, 0x01	; 1
     426:	83 bf       	out	0x33, r24	; 51

    OCR0 = 0b00000001;
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	81 bf       	out	0x31, r24	; 49
     42c:	08 95       	ret

0000042e <CAN_init>:
    for(uint8_t i = 0; i < message.data_length; i++){
        (message.data)[i] = mcp_read(MCP_RXB0DM +i + 16);
    }
    
    return message;
}
     42e:	cf 93       	push	r28
     430:	c8 2f       	mov	r28, r24
     432:	f8 94       	cli
     434:	85 b7       	in	r24, 0x35	; 53
     436:	82 60       	ori	r24, 0x02	; 2
     438:	85 bf       	out	0x35, r24	; 53
     43a:	85 b7       	in	r24, 0x35	; 53
     43c:	8e 7f       	andi	r24, 0xFE	; 254
     43e:	85 bf       	out	0x35, r24	; 53
     440:	8b b7       	in	r24, 0x3b	; 59
     442:	80 64       	ori	r24, 0x40	; 64
     444:	8b bf       	out	0x3b, r24	; 59
     446:	78 94       	sei
     448:	80 e8       	ldi	r24, 0x80	; 128
     44a:	0e 94 87 03 	call	0x70e	; 0x70e <mcp_init>
     44e:	61 e0       	ldi	r22, 0x01	; 1
     450:	8b e2       	ldi	r24, 0x2B	; 43
     452:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     456:	61 e8       	ldi	r22, 0x81	; 129
     458:	8a e2       	ldi	r24, 0x2A	; 42
     45a:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     45e:	6d ea       	ldi	r22, 0xAD	; 173
     460:	89 e2       	ldi	r24, 0x29	; 41
     462:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     466:	65 e0       	ldi	r22, 0x05	; 5
     468:	88 e2       	ldi	r24, 0x28	; 40
     46a:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     46e:	8c 2f       	mov	r24, r28
     470:	0e 94 64 03 	call	0x6c8	; 0x6c8 <mcp_set_mode>
     474:	cf 91       	pop	r28
     476:	08 95       	ret

00000478 <__vector_1>:
     478:	1f 92       	push	r1
     47a:	0f 92       	push	r0
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	0f 92       	push	r0
     480:	11 24       	eor	r1, r1
     482:	8f 93       	push	r24
     484:	9f 93       	push	r25
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <__data_end+0x1>
     48e:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <__data_end>
     492:	9f 91       	pop	r25
     494:	8f 91       	pop	r24
     496:	0f 90       	pop	r0
     498:	0f be       	out	0x3f, r0	; 63
     49a:	0f 90       	pop	r0
     49c:	1f 90       	pop	r1
     49e:	18 95       	reti

000004a0 <CAN_message_transmission>:
     4a0:	0f 93       	push	r16
     4a2:	1f 93       	push	r17
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	8c 01       	movw	r16, r24
     4aa:	fc 01       	movw	r30, r24
     4ac:	c0 81       	ld	r28, Z
     4ae:	d1 81       	ldd	r29, Z+1	; 0x01
     4b0:	6c 2f       	mov	r22, r28
     4b2:	62 95       	swap	r22
     4b4:	66 0f       	add	r22, r22
     4b6:	60 7e       	andi	r22, 0xE0	; 224
     4b8:	82 e3       	ldi	r24, 0x32	; 50
     4ba:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     4be:	be 01       	movw	r22, r28
     4c0:	76 95       	lsr	r23
     4c2:	67 95       	ror	r22
     4c4:	76 95       	lsr	r23
     4c6:	67 95       	ror	r22
     4c8:	76 95       	lsr	r23
     4ca:	67 95       	ror	r22
     4cc:	81 e3       	ldi	r24, 0x31	; 49
     4ce:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     4d2:	f8 01       	movw	r30, r16
     4d4:	62 81       	ldd	r22, Z+2	; 0x02
     4d6:	85 e3       	ldi	r24, 0x35	; 53
     4d8:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     4dc:	f8 01       	movw	r30, r16
     4de:	82 81       	ldd	r24, Z+2	; 0x02
     4e0:	88 23       	and	r24, r24
     4e2:	71 f0       	breq	.+28     	; 0x500 <__stack+0x1>
     4e4:	c0 e0       	ldi	r28, 0x00	; 0
     4e6:	f8 01       	movw	r30, r16
     4e8:	ec 0f       	add	r30, r28
     4ea:	f1 1d       	adc	r31, r1
     4ec:	63 81       	ldd	r22, Z+3	; 0x03
     4ee:	86 e3       	ldi	r24, 0x36	; 54
     4f0:	8c 0f       	add	r24, r28
     4f2:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     4f6:	cf 5f       	subi	r28, 0xFF	; 255
     4f8:	f8 01       	movw	r30, r16
     4fa:	82 81       	ldd	r24, Z+2	; 0x02
     4fc:	c8 17       	cp	r28, r24
     4fe:	98 f3       	brcs	.-26     	; 0x4e6 <CAN_message_transmission+0x46>
     500:	80 e0       	ldi	r24, 0x00	; 0
     502:	0e 94 df 03 	call	0x7be	; 0x7be <mcp_request_to_send>
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	1f 91       	pop	r17
     50c:	0f 91       	pop	r16
     50e:	08 95       	ret

00000510 <CAN_meessage_reception>:
     510:	9f 92       	push	r9
     512:	af 92       	push	r10
     514:	bf 92       	push	r11
     516:	cf 92       	push	r12
     518:	df 92       	push	r13
     51a:	ef 92       	push	r14
     51c:	ff 92       	push	r15
     51e:	0f 93       	push	r16
     520:	1f 93       	push	r17
     522:	cf 93       	push	r28
     524:	df 93       	push	r29
     526:	cd b7       	in	r28, 0x3d	; 61
     528:	de b7       	in	r29, 0x3e	; 62
     52a:	2b 97       	sbiw	r28, 0x0b	; 11
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	f8 94       	cli
     530:	de bf       	out	0x3e, r29	; 62
     532:	0f be       	out	0x3f, r0	; 63
     534:	cd bf       	out	0x3d, r28	; 61
     536:	5c 01       	movw	r10, r24
     538:	81 e6       	ldi	r24, 0x61	; 97
     53a:	0e 94 69 03 	call	0x6d2	; 0x6d2 <mcp_read>
     53e:	c8 2e       	mov	r12, r24
     540:	d1 2c       	mov	r13, r1
     542:	82 e6       	ldi	r24, 0x62	; 98
     544:	0e 94 69 03 	call	0x6d2	; 0x6d2 <mcp_read>
     548:	dc 2c       	mov	r13, r12
     54a:	cc 24       	eor	r12, r12
     54c:	80 7e       	andi	r24, 0xE0	; 224
     54e:	c8 0e       	add	r12, r24
     550:	d1 1c       	adc	r13, r1
     552:	85 e6       	ldi	r24, 0x65	; 101
     554:	0e 94 69 03 	call	0x6d2	; 0x6d2 <mcp_read>
     558:	8f 70       	andi	r24, 0x0F	; 15
     55a:	98 2e       	mov	r9, r24
     55c:	81 f0       	breq	.+32     	; 0x57e <CAN_meessage_reception+0x6e>
     55e:	7e 01       	movw	r14, r28
     560:	84 e0       	ldi	r24, 0x04	; 4
     562:	e8 0e       	add	r14, r24
     564:	f1 1c       	adc	r15, r1
     566:	06 e6       	ldi	r16, 0x66	; 102
     568:	09 0d       	add	r16, r9
     56a:	16 e6       	ldi	r17, 0x66	; 102
     56c:	81 2f       	mov	r24, r17
     56e:	0e 94 69 03 	call	0x6d2	; 0x6d2 <mcp_read>
     572:	f7 01       	movw	r30, r14
     574:	81 93       	st	Z+, r24
     576:	7f 01       	movw	r14, r30
     578:	1f 5f       	subi	r17, 0xFF	; 255
     57a:	10 13       	cpse	r17, r16
     57c:	f7 cf       	rjmp	.-18     	; 0x56c <CAN_meessage_reception+0x5c>
     57e:	da 82       	std	Y+2, r13	; 0x02
     580:	c9 82       	std	Y+1, r12	; 0x01
     582:	9b 82       	std	Y+3, r9	; 0x03
     584:	8b e0       	ldi	r24, 0x0B	; 11
     586:	fe 01       	movw	r30, r28
     588:	31 96       	adiw	r30, 0x01	; 1
     58a:	d5 01       	movw	r26, r10
     58c:	01 90       	ld	r0, Z+
     58e:	0d 92       	st	X+, r0
     590:	8a 95       	dec	r24
     592:	e1 f7       	brne	.-8      	; 0x58c <CAN_meessage_reception+0x7c>
     594:	c5 01       	movw	r24, r10
     596:	2b 96       	adiw	r28, 0x0b	; 11
     598:	0f b6       	in	r0, 0x3f	; 63
     59a:	f8 94       	cli
     59c:	de bf       	out	0x3e, r29	; 62
     59e:	0f be       	out	0x3f, r0	; 63
     5a0:	cd bf       	out	0x3d, r28	; 61
     5a2:	df 91       	pop	r29
     5a4:	cf 91       	pop	r28
     5a6:	1f 91       	pop	r17
     5a8:	0f 91       	pop	r16
     5aa:	ff 90       	pop	r15
     5ac:	ef 90       	pop	r14
     5ae:	df 90       	pop	r13
     5b0:	cf 90       	pop	r12
     5b2:	bf 90       	pop	r11
     5b4:	af 90       	pop	r10
     5b6:	9f 90       	pop	r9
     5b8:	08 95       	ret

000005ba <message_handler>:

CAN_message_t message_handler(){
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	ec 01       	movw	r28, r24
    CAN_message_t message;
    
	if(flag){
     5c0:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <__data_end>
     5c4:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <__data_end+0x1>
     5c8:	89 2b       	or	r24, r25
     5ca:	61 f0       	breq	.+24     	; 0x5e4 <message_handler+0x2a>
        message = CAN_meessage_reception(); //reads buffer 2 register
     5cc:	ce 01       	movw	r24, r28
     5ce:	0e 94 88 02 	call	0x510	; 0x510 <CAN_meessage_reception>

		flag = 0;
     5d2:	10 92 65 02 	sts	0x0265, r1	; 0x800265 <__data_end+0x1>
     5d6:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <__data_end>
        mcp_bit_modify(MCP_CANINTF, 1, 0);  // resets can interrupt flag bit for buffer 1
     5da:	40 e0       	ldi	r20, 0x00	; 0
     5dc:	61 e0       	ldi	r22, 0x01	; 1
     5de:	8c e2       	ldi	r24, 0x2C	; 44
     5e0:	0e 94 c3 03 	call	0x786	; 0x786 <mcp_bit_modify>

    }
    
    printf("FALG STATUS: %d\n\r", flag);
     5e4:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <__data_end>
     5e8:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <__data_end+0x1>
     5ec:	9f 93       	push	r25
     5ee:	8f 93       	push	r24
     5f0:	8a e1       	ldi	r24, 0x1A	; 26
     5f2:	91 e0       	ldi	r25, 0x01	; 1
     5f4:	9f 93       	push	r25
     5f6:	8f 93       	push	r24
     5f8:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <printf>
return message;
     5fc:	0f 90       	pop	r0
     5fe:	0f 90       	pop	r0
     600:	0f 90       	pop	r0
     602:	0f 90       	pop	r0
}
     604:	ce 01       	movw	r24, r28
     606:	df 91       	pop	r29
     608:	cf 91       	pop	r28
     60a:	08 95       	ret

0000060c <joyStick_Can_Message>:
 *  Author: Herbe
 */ 
#include "CAN_joystick_messages.h"


void joyStick_Can_Message(){
     60c:	ef 92       	push	r14
     60e:	ff 92       	push	r15
     610:	0f 93       	push	r16
     612:	1f 93       	push	r17
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	cd b7       	in	r28, 0x3d	; 61
     61a:	de b7       	in	r29, 0x3e	; 62
     61c:	2b 97       	sbiw	r28, 0x0b	; 11
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	f8 94       	cli
     622:	de bf       	out	0x3e, r29	; 62
     624:	0f be       	out	0x3f, r0	; 63
     626:	cd bf       	out	0x3d, r28	; 61
	
pos_read(&P_pos); //Reads the current position of the joystick
     628:	8c ee       	ldi	r24, 0xEC	; 236
     62a:	92 e0       	ldi	r25, 0x02	; 2
     62c:	0e 94 b1 07 	call	0xf62	; 0xf62 <pos_read>

uint8_t sendSliderRight = ADC_read(2);  
     630:	82 e0       	ldi	r24, 0x02	; 2
     632:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     636:	e8 2e       	mov	r14, r24
uint8_t sendPosX = 128 + P_pos.posX;  //Adding 128 to not have negative a number
     638:	ec ee       	ldi	r30, 0xEC	; 236
     63a:	f2 e0       	ldi	r31, 0x02	; 2
     63c:	80 81       	ld	r24, Z
     63e:	68 94       	set
     640:	ff 24       	eor	r15, r15
     642:	f7 f8       	bld	r15, 7
     644:	f8 0e       	add	r15, r24
uint8_t sendPosY = 128 + P_pos.posY;  //Adding 128 to not have negative a number
     646:	02 81       	ldd	r16, Z+2	; 0x02
     648:	00 58       	subi	r16, 0x80	; 128
uint8_t sendJoyButton = usb_button_pushed(JOYSTICK_BUTTON);
     64a:	82 e0       	ldi	r24, 0x02	; 2
     64c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <usb_button_pushed>
     650:	18 2f       	mov	r17, r24
uint8_t sendJoyDirection = (joystick_direction()) << 1; //shift right to not disturb rest of message
     652:	0e 94 a3 08 	call	0x1146	; 0x1146 <joystick_direction>

uint8_t sendJoyData = sendJoyDirection + sendJoyButton;  //Combining button-bushed and joystick-direction in one byte.

CAN_message_t joyStickData;
joyStickData.identifier = 0b11111111;
     656:	2f ef       	ldi	r18, 0xFF	; 255
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	3a 83       	std	Y+2, r19	; 0x02
     65c:	29 83       	std	Y+1, r18	; 0x01
joyStickData.data[0] = sendPosX;
     65e:	fc 82       	std	Y+4, r15	; 0x04
joyStickData.data[1] = sendPosY;
     660:	0d 83       	std	Y+5, r16	; 0x05
joyStickData.data[2] = sendJoyData;
     662:	88 0f       	add	r24, r24
     664:	18 0f       	add	r17, r24
     666:	1e 83       	std	Y+6, r17	; 0x06
joyStickData.data[3] = sendSliderRight;
     668:	ef 82       	std	Y+7, r14	; 0x07
joyStickData.data_length = 4;
     66a:	84 e0       	ldi	r24, 0x04	; 4
     66c:	8b 83       	std	Y+3, r24	; 0x03

CAN_message_transmission(&joyStickData);
     66e:	ce 01       	movw	r24, r28
     670:	01 96       	adiw	r24, 0x01	; 1
     672:	0e 94 50 02 	call	0x4a0	; 0x4a0 <CAN_message_transmission>
     676:	2b 96       	adiw	r28, 0x0b	; 11
     678:	0f b6       	in	r0, 0x3f	; 63
     67a:	f8 94       	cli
     67c:	de bf       	out	0x3e, r29	; 62
     67e:	0f be       	out	0x3f, r0	; 63
     680:	cd bf       	out	0x3d, r28	; 61
     682:	df 91       	pop	r29
     684:	cf 91       	pop	r28
     686:	1f 91       	pop	r17
     688:	0f 91       	pop	r16
     68a:	ff 90       	pop	r15
     68c:	ef 90       	pop	r14
     68e:	08 95       	ret

00000690 <spi_master_CS>:
    status_value = spi_read();

    spi_master_CS(1);

    return status_value;
}
     690:	81 11       	cpse	r24, r1
     692:	02 c0       	rjmp	.+4      	; 0x698 <spi_master_CS+0x8>
     694:	c4 98       	cbi	0x18, 4	; 24
     696:	08 95       	ret
     698:	c4 9a       	sbi	0x18, 4	; 24
     69a:	08 95       	ret

0000069c <mcp_write>:
     69c:	cf 93       	push	r28
     69e:	df 93       	push	r29
     6a0:	d8 2f       	mov	r29, r24
     6a2:	c6 2f       	mov	r28, r22
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
     6aa:	82 e0       	ldi	r24, 0x02	; 2
     6ac:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     6b0:	8d 2f       	mov	r24, r29
     6b2:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     6b6:	8c 2f       	mov	r24, r28
     6b8:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
     6c2:	df 91       	pop	r29
     6c4:	cf 91       	pop	r28
     6c6:	08 95       	ret

000006c8 <mcp_set_mode>:
     6c8:	68 2f       	mov	r22, r24
     6ca:	8f e0       	ldi	r24, 0x0F	; 15
     6cc:	0e 94 4e 03 	call	0x69c	; 0x69c <mcp_write>
     6d0:	08 95       	ret

000006d2 <mcp_read>:
     6d2:	cf 93       	push	r28
     6d4:	c8 2f       	mov	r28, r24
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
     6dc:	83 e0       	ldi	r24, 0x03	; 3
     6de:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     6e2:	8c 2f       	mov	r24, r28
     6e4:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     6e8:	0e 94 ca 09 	call	0x1394	; 0x1394 <spi_read>
     6ec:	c8 2f       	mov	r28, r24
     6ee:	81 e0       	ldi	r24, 0x01	; 1
     6f0:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
     6f4:	8c 2f       	mov	r24, r28
     6f6:	cf 91       	pop	r28
     6f8:	08 95       	ret

000006fa <mcp_reset>:
     6fa:	80 e0       	ldi	r24, 0x00	; 0
     6fc:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
     700:	80 ec       	ldi	r24, 0xC0	; 192
     702:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     706:	81 e0       	ldi	r24, 0x01	; 1
     708:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
     70c:	08 95       	ret

0000070e <mcp_init>:
     70e:	cf 93       	push	r28
     710:	df 93       	push	r29
     712:	d8 2f       	mov	r29, r24
     714:	0e 94 cf 09 	call	0x139e	; 0x139e <spi_init>
     718:	0e 94 7d 03 	call	0x6fa	; 0x6fa <mcp_reset>
     71c:	80 e8       	ldi	r24, 0x80	; 128
     71e:	0e 94 64 03 	call	0x6c8	; 0x6c8 <mcp_set_mode>
     722:	8f ef       	ldi	r24, 0xFF	; 255
     724:	9f e8       	ldi	r25, 0x8F	; 143
     726:	01 97       	sbiw	r24, 0x01	; 1
     728:	f1 f7       	brne	.-4      	; 0x726 <mcp_init+0x18>
     72a:	00 c0       	rjmp	.+0      	; 0x72c <mcp_init+0x1e>
     72c:	00 00       	nop
     72e:	8e e0       	ldi	r24, 0x0E	; 14
     730:	0e 94 69 03 	call	0x6d2	; 0x6d2 <mcp_read>
     734:	c8 2f       	mov	r28, r24
     736:	1f 92       	push	r1
     738:	8f 93       	push	r24
     73a:	8c e2       	ldi	r24, 0x2C	; 44
     73c:	91 e0       	ldi	r25, 0x01	; 1
     73e:	9f 93       	push	r25
     740:	8f 93       	push	r24
     742:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <printf>
     746:	c0 7e       	andi	r28, 0xE0	; 224
     748:	0f 90       	pop	r0
     74a:	0f 90       	pop	r0
     74c:	0f 90       	pop	r0
     74e:	0f 90       	pop	r0
     750:	c0 38       	cpi	r28, 0x80	; 128
     752:	31 f0       	breq	.+12     	; 0x760 <mcp_init+0x52>
     754:	88 e3       	ldi	r24, 0x38	; 56
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <puts>
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	10 c0       	rjmp	.+32     	; 0x780 <mcp_init+0x72>
     760:	8d 2f       	mov	r24, r29
     762:	0e 94 64 03 	call	0x6c8	; 0x6c8 <mcp_set_mode>
     766:	8e e0       	ldi	r24, 0x0E	; 14
     768:	0e 94 69 03 	call	0x6d2	; 0x6d2 <mcp_read>
     76c:	80 7e       	andi	r24, 0xE0	; 224
     76e:	8d 17       	cp	r24, r29
     770:	31 f0       	breq	.+12     	; 0x77e <mcp_init+0x70>
     772:	8a e6       	ldi	r24, 0x6A	; 106
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <puts>
     77a:	81 e0       	ldi	r24, 0x01	; 1
     77c:	01 c0       	rjmp	.+2      	; 0x780 <mcp_init+0x72>
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	08 95       	ret

00000786 <mcp_bit_modify>:
     786:	1f 93       	push	r17
     788:	cf 93       	push	r28
     78a:	df 93       	push	r29
     78c:	18 2f       	mov	r17, r24
     78e:	d6 2f       	mov	r29, r22
     790:	c4 2f       	mov	r28, r20
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
     798:	85 e0       	ldi	r24, 0x05	; 5
     79a:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     79e:	81 2f       	mov	r24, r17
     7a0:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     7a4:	8d 2f       	mov	r24, r29
     7a6:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     7aa:	8c 2f       	mov	r24, r28
     7ac:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
     7b0:	81 e0       	ldi	r24, 0x01	; 1
     7b2:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
     7b6:	df 91       	pop	r29
     7b8:	cf 91       	pop	r28
     7ba:	1f 91       	pop	r17
     7bc:	08 95       	ret

000007be <mcp_request_to_send>:

void mcp_request_to_send(uint8_t buffer){
     7be:	cf 93       	push	r28
     7c0:	c8 2f       	mov	r28, r24
    spi_master_CS(0);
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>

    switch (buffer) {
     7c8:	c1 30       	cpi	r28, 0x01	; 1
     7ca:	41 f0       	breq	.+16     	; 0x7dc <mcp_request_to_send+0x1e>
     7cc:	18 f0       	brcs	.+6      	; 0x7d4 <mcp_request_to_send+0x16>
     7ce:	c2 30       	cpi	r28, 0x02	; 2
     7d0:	49 f0       	breq	.+18     	; 0x7e4 <mcp_request_to_send+0x26>
     7d2:	0c c0       	rjmp	.+24     	; 0x7ec <mcp_request_to_send+0x2e>
      case 0:
          spi_write(MCP_RTS_TX0);
     7d4:	81 e8       	ldi	r24, 0x81	; 129
     7d6:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
          break;
     7da:	0b c0       	rjmp	.+22     	; 0x7f2 <mcp_request_to_send+0x34>
      case 1:
          spi_write(MCP_RTS_TX1);
     7dc:	82 e8       	ldi	r24, 0x82	; 130
     7de:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
          break;
     7e2:	07 c0       	rjmp	.+14     	; 0x7f2 <mcp_request_to_send+0x34>
      case 2:
          spi_write(MCP_RTS_TX2);
     7e4:	84 e8       	ldi	r24, 0x84	; 132
     7e6:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
          break;
     7ea:	03 c0       	rjmp	.+6      	; 0x7f2 <mcp_request_to_send+0x34>
      default:
        spi_write(MCP_RTS_ALL);
     7ec:	87 e8       	ldi	r24, 0x87	; 135
     7ee:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
    }

    spi_master_CS(1);
     7f2:	81 e0       	ldi	r24, 0x01	; 1
     7f4:	0e 94 48 03 	call	0x690	; 0x690 <spi_master_CS>
}
     7f8:	cf 91       	pop	r28
     7fa:	08 95       	ret

000007fc <oled_sel_row>:
     7fc:	80 93 f0 02 	sts	0x02F0, r24	; 0x8002f0 <oled_position>
     800:	87 70       	andi	r24, 0x07	; 7
     802:	80 55       	subi	r24, 0x50	; 80
     804:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     808:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     80c:	80 83       	st	Z, r24
     80e:	08 95       	ret

00000810 <oled_sel_col>:
     810:	80 93 f1 02 	sts	0x02F1, r24	; 0x8002f1 <oled_position+0x1>
     814:	98 2f       	mov	r25, r24
     816:	9f 70       	andi	r25, 0x0F	; 15
     818:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     81c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     820:	90 83       	st	Z, r25
     822:	82 95       	swap	r24
     824:	8f 70       	andi	r24, 0x0F	; 15
     826:	80 5f       	subi	r24, 0xF0	; 240
     828:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     82c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     830:	80 83       	st	Z, r24
     832:	08 95       	ret

00000834 <oled_line_down>:
     834:	80 55       	subi	r24, 0x50	; 80
     836:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     83a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     83e:	80 83       	st	Z, r24
     840:	08 95       	ret

00000842 <oled_pos_set>:
     842:	cf 93       	push	r28
     844:	c6 2f       	mov	r28, r22
     846:	0e 94 fe 03 	call	0x7fc	; 0x7fc <oled_sel_row>
     84a:	8c 2f       	mov	r24, r28
     84c:	0e 94 08 04 	call	0x810	; 0x810 <oled_sel_col>
     850:	cf 91       	pop	r28
     852:	08 95       	ret

00000854 <oled_home>:
     854:	60 e0       	ldi	r22, 0x00	; 0
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
     85c:	08 95       	ret

0000085e <oled_clear>:
     85e:	1f 93       	push	r17
     860:	cf 93       	push	r28
     862:	df 93       	push	r29
     864:	10 e0       	ldi	r17, 0x00	; 0
     866:	c6 ea       	ldi	r28, 0xA6	; 166
     868:	d0 e0       	ldi	r29, 0x00	; 0
     86a:	81 2f       	mov	r24, r17
     86c:	0e 94 1a 04 	call	0x834	; 0x834 <oled_line_down>
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	0d c0       	rjmp	.+26     	; 0x88e <oled_clear+0x30>
     874:	84 91       	lpm	r24, Z
     876:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <oled_write_data>
     87a:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <oled_write_data+0x1>
     87e:	8c 93       	st	X, r24
     880:	31 96       	adiw	r30, 0x01	; 1
     882:	ec 17       	cp	r30, r28
     884:	fd 07       	cpc	r31, r29
     886:	b1 f7       	brne	.-20     	; 0x874 <oled_clear+0x16>
     888:	9f 5f       	subi	r25, 0xFF	; 255
     88a:	90 38       	cpi	r25, 0x80	; 128
     88c:	19 f0       	breq	.+6      	; 0x894 <oled_clear+0x36>
     88e:	ee e9       	ldi	r30, 0x9E	; 158
     890:	f0 e0       	ldi	r31, 0x00	; 0
     892:	f0 cf       	rjmp	.-32     	; 0x874 <oled_clear+0x16>
     894:	1f 5f       	subi	r17, 0xFF	; 255
     896:	18 30       	cpi	r17, 0x08	; 8
     898:	41 f7       	brne	.-48     	; 0x86a <oled_clear+0xc>
     89a:	0e 94 2a 04 	call	0x854	; 0x854 <oled_home>
     89e:	df 91       	pop	r29
     8a0:	cf 91       	pop	r28
     8a2:	1f 91       	pop	r17
     8a4:	08 95       	ret

000008a6 <OLED_init>:
     8a6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8aa:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8ae:	8e ea       	ldi	r24, 0xAE	; 174
     8b0:	80 83       	st	Z, r24
     8b2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8b6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8ba:	81 ea       	ldi	r24, 0xA1	; 161
     8bc:	80 83       	st	Z, r24
     8be:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8c2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8c6:	8a ed       	ldi	r24, 0xDA	; 218
     8c8:	80 83       	st	Z, r24
     8ca:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8ce:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8d2:	82 e1       	ldi	r24, 0x12	; 18
     8d4:	80 83       	st	Z, r24
     8d6:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8da:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8de:	88 ec       	ldi	r24, 0xC8	; 200
     8e0:	80 83       	st	Z, r24
     8e2:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8e6:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8ea:	88 ea       	ldi	r24, 0xA8	; 168
     8ec:	80 83       	st	Z, r24
     8ee:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8f2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     8f6:	8f e3       	ldi	r24, 0x3F	; 63
     8f8:	80 83       	st	Z, r24
     8fa:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     8fe:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     902:	85 ed       	ldi	r24, 0xD5	; 213
     904:	80 83       	st	Z, r24
     906:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     90a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     90e:	80 e8       	ldi	r24, 0x80	; 128
     910:	80 83       	st	Z, r24
     912:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     916:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     91a:	81 e8       	ldi	r24, 0x81	; 129
     91c:	80 83       	st	Z, r24
     91e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     922:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     926:	80 e5       	ldi	r24, 0x50	; 80
     928:	80 83       	st	Z, r24
     92a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     92e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     932:	89 ed       	ldi	r24, 0xD9	; 217
     934:	80 83       	st	Z, r24
     936:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     93a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     93e:	81 e2       	ldi	r24, 0x21	; 33
     940:	80 83       	st	Z, r24
     942:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     946:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     94a:	80 e2       	ldi	r24, 0x20	; 32
     94c:	80 83       	st	Z, r24
     94e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     952:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     956:	82 e0       	ldi	r24, 0x02	; 2
     958:	80 83       	st	Z, r24
     95a:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     95e:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     962:	8b ed       	ldi	r24, 0xDB	; 219
     964:	80 83       	st	Z, r24
     966:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     96a:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     96e:	80 e3       	ldi	r24, 0x30	; 48
     970:	80 83       	st	Z, r24
     972:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     976:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     97a:	8d ea       	ldi	r24, 0xAD	; 173
     97c:	80 83       	st	Z, r24
     97e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     982:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     986:	10 82       	st	Z, r1
     988:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     98c:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     990:	84 ea       	ldi	r24, 0xA4	; 164
     992:	80 83       	st	Z, r24
     994:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     998:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     99c:	86 ea       	ldi	r24, 0xA6	; 166
     99e:	80 83       	st	Z, r24
     9a0:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_write_cmd>
     9a4:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_write_cmd+0x1>
     9a8:	8f ea       	ldi	r24, 0xAF	; 175
     9aa:	80 83       	st	Z, r24
     9ac:	0e 94 2f 04 	call	0x85e	; 0x85e <oled_clear>
     9b0:	0e 94 2a 04 	call	0x854	; 0x854 <oled_home>
     9b4:	08 95       	ret

000009b6 <oled_write_character>:
     9b6:	28 2f       	mov	r18, r24
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	f9 01       	movw	r30, r18
     9bc:	ee 0f       	add	r30, r30
     9be:	ff 1f       	adc	r31, r31
     9c0:	ee 0f       	add	r30, r30
     9c2:	ff 1f       	adc	r31, r31
     9c4:	ee 0f       	add	r30, r30
     9c6:	ff 1f       	adc	r31, r31
     9c8:	e2 56       	subi	r30, 0x62	; 98
     9ca:	f0 40       	sbci	r31, 0x00	; 0
     9cc:	22 0f       	add	r18, r18
     9ce:	33 1f       	adc	r19, r19
     9d0:	22 0f       	add	r18, r18
     9d2:	33 1f       	adc	r19, r19
     9d4:	22 0f       	add	r18, r18
     9d6:	33 1f       	adc	r19, r19
     9d8:	2a 55       	subi	r18, 0x5A	; 90
     9da:	30 40       	sbci	r19, 0x00	; 0
     9dc:	94 91       	lpm	r25, Z
     9de:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <oled_write_data>
     9e2:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <oled_write_data+0x1>
     9e6:	9c 93       	st	X, r25
     9e8:	31 96       	adiw	r30, 0x01	; 1
     9ea:	e2 17       	cp	r30, r18
     9ec:	f3 07       	cpc	r31, r19
     9ee:	b1 f7       	brne	.-20     	; 0x9dc <oled_write_character+0x26>
     9f0:	08 95       	ret

000009f2 <oled_print>:
     9f2:	0f 93       	push	r16
     9f4:	1f 93       	push	r17
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	fc 01       	movw	r30, r24
     9fc:	01 90       	ld	r0, Z+
     9fe:	00 20       	and	r0, r0
     a00:	e9 f7       	brne	.-6      	; 0x9fc <oled_print+0xa>
     a02:	31 97       	sbiw	r30, 0x01	; 1
     a04:	e8 1b       	sub	r30, r24
     a06:	f9 0b       	sbc	r31, r25
     a08:	1e 16       	cp	r1, r30
     a0a:	1f 06       	cpc	r1, r31
     a0c:	54 f4       	brge	.+20     	; 0xa22 <oled_print+0x30>
     a0e:	ec 01       	movw	r28, r24
     a10:	8c 01       	movw	r16, r24
     a12:	0e 0f       	add	r16, r30
     a14:	1f 1f       	adc	r17, r31
     a16:	89 91       	ld	r24, Y+
     a18:	0e 94 db 04 	call	0x9b6	; 0x9b6 <oled_write_character>
     a1c:	c0 17       	cp	r28, r16
     a1e:	d1 07       	cpc	r29, r17
     a20:	d1 f7       	brne	.-12     	; 0xa16 <oled_print+0x24>
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	1f 91       	pop	r17
     a28:	0f 91       	pop	r16
     a2a:	08 95       	ret

00000a2c <oled_print_arrow>:
     a2c:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
     a30:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     a34:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     a38:	88 e1       	ldi	r24, 0x18	; 24
     a3a:	80 83       	st	Z, r24
     a3c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     a40:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     a44:	80 83       	st	Z, r24
     a46:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     a4a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     a4e:	9e e7       	ldi	r25, 0x7E	; 126
     a50:	90 83       	st	Z, r25
     a52:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     a56:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     a5a:	9c e3       	ldi	r25, 0x3C	; 60
     a5c:	90 83       	st	Z, r25
     a5e:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <oled_write_data>
     a62:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <oled_write_data+0x1>
     a66:	80 83       	st	Z, r24
     a68:	08 95       	ret

00000a6a <build_node>:
    if(child == 0){
        child = current_node->elements_on_screen;
    }

    return child;
}
     a6a:	cf 92       	push	r12
     a6c:	df 92       	push	r13
     a6e:	ef 92       	push	r14
     a70:	ff 92       	push	r15
     a72:	0f 93       	push	r16
     a74:	1f 93       	push	r17
     a76:	cf 93       	push	r28
     a78:	df 93       	push	r29
     a7a:	ec 01       	movw	r28, r24
     a7c:	69 01       	movw	r12, r18
     a7e:	79 83       	std	Y+1, r23	; 0x01
     a80:	68 83       	st	Y, r22
     a82:	ba 01       	movw	r22, r20
     a84:	46 96       	adiw	r24, 0x16	; 22
     a86:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <strcpy>
     a8a:	dd 8a       	std	Y+21, r13	; 0x15
     a8c:	cc 8a       	std	Y+20, r12	; 0x14
     a8e:	fb 8a       	std	Y+19, r15	; 0x13
     a90:	ea 8a       	std	Y+18, r14	; 0x12
     a92:	a0 2f       	mov	r26, r16
     a94:	b1 2f       	mov	r27, r17
     a96:	fe 01       	movw	r30, r28
     a98:	32 96       	adiw	r30, 0x02	; 2
     a9a:	ce 01       	movw	r24, r28
     a9c:	42 96       	adiw	r24, 0x12	; 18
     a9e:	2d 91       	ld	r18, X+
     aa0:	3d 91       	ld	r19, X+
     aa2:	21 93       	st	Z+, r18
     aa4:	31 93       	st	Z+, r19
     aa6:	e8 17       	cp	r30, r24
     aa8:	f9 07       	cpc	r31, r25
     aaa:	c9 f7       	brne	.-14     	; 0xa9e <build_node+0x34>
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	1f 91       	pop	r17
     ab2:	0f 91       	pop	r16
     ab4:	ff 90       	pop	r15
     ab6:	ef 90       	pop	r14
     ab8:	df 90       	pop	r13
     aba:	cf 90       	pop	r12
     abc:	08 95       	ret

00000abe <go_up>:
     abe:	dc 01       	movw	r26, r24
     ac0:	ed 91       	ld	r30, X+
     ac2:	fc 91       	ld	r31, X
     ac4:	11 97       	sbiw	r26, 0x01	; 1
     ac6:	20 81       	ld	r18, Z
     ac8:	31 81       	ldd	r19, Z+1	; 0x01
     aca:	21 15       	cp	r18, r1
     acc:	31 05       	cpc	r19, r1
     ace:	11 f0       	breq	.+4      	; 0xad4 <go_up+0x16>
     ad0:	2d 93       	st	X+, r18
     ad2:	3c 93       	st	X, r19
     ad4:	08 95       	ret

00000ad6 <go_down>:
     ad6:	fc 01       	movw	r30, r24
     ad8:	a0 81       	ld	r26, Z
     ada:	b1 81       	ldd	r27, Z+1	; 0x01
     adc:	fb 01       	movw	r30, r22
     ade:	ee 0f       	add	r30, r30
     ae0:	ff 1f       	adc	r31, r31
     ae2:	ea 0f       	add	r30, r26
     ae4:	fb 1f       	adc	r31, r27
     ae6:	20 81       	ld	r18, Z
     ae8:	31 81       	ldd	r19, Z+1	; 0x01
     aea:	21 15       	cp	r18, r1
     aec:	31 05       	cpc	r19, r1
     aee:	21 f0       	breq	.+8      	; 0xaf8 <go_down+0x22>
     af0:	fc 01       	movw	r30, r24
     af2:	31 83       	std	Z+1, r19	; 0x01
     af4:	20 83       	st	Z, r18
     af6:	08 95       	ret
     af8:	54 96       	adiw	r26, 0x14	; 20
     afa:	ed 91       	ld	r30, X+
     afc:	fc 91       	ld	r31, X
     afe:	55 97       	sbiw	r26, 0x15	; 21
     b00:	30 97       	sbiw	r30, 0x00	; 0
     b02:	09 f0       	breq	.+2      	; 0xb06 <go_down+0x30>
     b04:	09 95       	icall
     b06:	08 95       	ret

00000b08 <wait_for_action>:
     b08:	0e 94 a3 08 	call	0x1146	; 0x1146 <joystick_direction>
     b0c:	84 30       	cpi	r24, 0x04	; 4
     b0e:	29 f4       	brne	.+10     	; 0xb1a <wait_for_action+0x12>
     b10:	82 e0       	ldi	r24, 0x02	; 2
     b12:	0e 94 69 09 	call	0x12d2	; 0x12d2 <usb_button_pushed>
     b16:	88 23       	and	r24, r24
     b18:	b9 f3       	breq	.-18     	; 0xb08 <wait_for_action>
     b1a:	0e 94 a3 08 	call	0x1146	; 0x1146 <joystick_direction>
     b1e:	82 30       	cpi	r24, 0x02	; 2
     b20:	99 f0       	breq	.+38     	; 0xb48 <wait_for_action+0x40>
     b22:	0e 94 a3 08 	call	0x1146	; 0x1146 <joystick_direction>
     b26:	83 30       	cpi	r24, 0x03	; 3
     b28:	79 f0       	breq	.+30     	; 0xb48 <wait_for_action+0x40>
     b2a:	0e 94 a3 08 	call	0x1146	; 0x1146 <joystick_direction>
     b2e:	81 30       	cpi	r24, 0x01	; 1
     b30:	59 f0       	breq	.+22     	; 0xb48 <wait_for_action+0x40>
     b32:	0e 94 a3 08 	call	0x1146	; 0x1146 <joystick_direction>
     b36:	88 23       	and	r24, r24
     b38:	39 f0       	breq	.+14     	; 0xb48 <wait_for_action+0x40>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	0e 94 69 09 	call	0x12d2	; 0x12d2 <usb_button_pushed>
     b40:	81 11       	cpse	r24, r1
     b42:	01 c0       	rjmp	.+2      	; 0xb46 <wait_for_action+0x3e>
     b44:	08 95       	ret
     b46:	85 e0       	ldi	r24, 0x05	; 5
     b48:	08 95       	ret

00000b4a <wait_for_neutral_joystick_position>:
     b4a:	0e 94 a3 08 	call	0x1146	; 0x1146 <joystick_direction>
     b4e:	84 30       	cpi	r24, 0x04	; 4
     b50:	e1 f7       	brne	.-8      	; 0xb4a <wait_for_neutral_joystick_position>
     b52:	08 95       	ret

00000b54 <update_element_down>:

int update_element_down(Node *current_node, int child){

    child++;
     b54:	6f 5f       	subi	r22, 0xFF	; 255
     b56:	7f 4f       	sbci	r23, 0xFF	; 255

    if(child == current_node->elements_on_screen + 1){
     b58:	fc 01       	movw	r30, r24
     b5a:	82 89       	ldd	r24, Z+18	; 0x12
     b5c:	93 89       	ldd	r25, Z+19	; 0x13
     b5e:	01 96       	adiw	r24, 0x01	; 1
     b60:	68 17       	cp	r22, r24
     b62:	79 07       	cpc	r23, r25
     b64:	11 f4       	brne	.+4      	; 0xb6a <update_element_down+0x16>
        child = 1;
     b66:	61 e0       	ldi	r22, 0x01	; 1
     b68:	70 e0       	ldi	r23, 0x00	; 0
    }

    return child;
    
}
     b6a:	cb 01       	movw	r24, r22
     b6c:	08 95       	ret

00000b6e <check_highscore>:

    print_selecting_arrow(child);
}

void check_highscore(int highscore){
    if(highscore >= _1ST){   //check if new highscore
     b6e:	20 91 f4 02 	lds	r18, 0x02F4	; 0x8002f4 <_1ST>
     b72:	30 91 f5 02 	lds	r19, 0x02F5	; 0x8002f5 <_1ST+0x1>
     b76:	82 17       	cp	r24, r18
     b78:	93 07       	cpc	r25, r19
     b7a:	8c f0       	brlt	.+34     	; 0xb9e <check_highscore+0x30>
		_3RD = _2ND;
     b7c:	40 91 f2 02 	lds	r20, 0x02F2	; 0x8002f2 <_2ND>
     b80:	50 91 f3 02 	lds	r21, 0x02F3	; 0x8002f3 <_2ND+0x1>
     b84:	50 93 e7 02 	sts	0x02E7, r21	; 0x8002e7 <_3RD+0x1>
     b88:	40 93 e6 02 	sts	0x02E6, r20	; 0x8002e6 <_3RD>
		_2ND = _1ST;
     b8c:	30 93 f3 02 	sts	0x02F3, r19	; 0x8002f3 <_2ND+0x1>
     b90:	20 93 f2 02 	sts	0x02F2, r18	; 0x8002f2 <_2ND>
        _1ST = highscore;
     b94:	90 93 f5 02 	sts	0x02F5, r25	; 0x8002f5 <_1ST+0x1>
     b98:	80 93 f4 02 	sts	0x02F4, r24	; 0x8002f4 <_1ST>
     b9c:	08 95       	ret
		
    }
    else if(    (highscore < _1ST) && (highscore > _2ND)    )    {  //check if new second best
     b9e:	20 91 f2 02 	lds	r18, 0x02F2	; 0x8002f2 <_2ND>
     ba2:	30 91 f3 02 	lds	r19, 0x02F3	; 0x8002f3 <_2ND+0x1>
     ba6:	28 17       	cp	r18, r24
     ba8:	39 07       	cpc	r19, r25
     baa:	4c f4       	brge	.+18     	; 0xbbe <check_highscore+0x50>
		_3RD = _2ND;
     bac:	30 93 e7 02 	sts	0x02E7, r19	; 0x8002e7 <_3RD+0x1>
     bb0:	20 93 e6 02 	sts	0x02E6, r18	; 0x8002e6 <_3RD>
        _2ND = highscore;
     bb4:	90 93 f3 02 	sts	0x02F3, r25	; 0x8002f3 <_2ND+0x1>
     bb8:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <_2ND>
     bbc:	08 95       	ret
    }
    else if(    (highscore < _2ND) && (highscore > _3RD)    ){ //check if new third best
     bbe:	82 17       	cp	r24, r18
     bc0:	93 07       	cpc	r25, r19
     bc2:	5c f4       	brge	.+22     	; 0xbda <check_highscore+0x6c>
     bc4:	20 91 e6 02 	lds	r18, 0x02E6	; 0x8002e6 <_3RD>
     bc8:	30 91 e7 02 	lds	r19, 0x02E7	; 0x8002e7 <_3RD+0x1>
     bcc:	28 17       	cp	r18, r24
     bce:	39 07       	cpc	r19, r25
     bd0:	24 f4       	brge	.+8      	; 0xbda <check_highscore+0x6c>
        _3RD = highscore;
     bd2:	90 93 e7 02 	sts	0x02E7, r25	; 0x8002e7 <_3RD+0x1>
     bd6:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <_3RD>
     bda:	08 95       	ret

00000bdc <play_game>:
    oled_print_arrow(child - 1, 5);
	
}


void play_game(){
     bdc:	cf 93       	push	r28
     bde:	df 93       	push	r29
     be0:	cd b7       	in	r28, 0x3d	; 61
     be2:	de b7       	in	r29, 0x3e	; 62
     be4:	66 97       	sbiw	r28, 0x16	; 22
     be6:	0f b6       	in	r0, 0x3f	; 63
     be8:	f8 94       	cli
     bea:	de bf       	out	0x3e, r29	; 62
     bec:	0f be       	out	0x3f, r0	; 63
     bee:	cd bf       	out	0x3d, r28	; 61
	
	message_handler();
     bf0:	ce 01       	movw	r24, r28
     bf2:	0c 96       	adiw	r24, 0x0c	; 12
     bf4:	0e 94 dd 02 	call	0x5ba	; 0x5ba <message_handler>
	message_handler();
     bf8:	ce 01       	movw	r24, r28
     bfa:	0c 96       	adiw	r24, 0x0c	; 12
     bfc:	0e 94 dd 02 	call	0x5ba	; 0x5ba <message_handler>
	CAN_message_t game_status;
	game_status.data[0] = 0;
	uint8_t game_on = 1;
		
	while(game_on){
		joyStick_Can_Message();
     c00:	0e 94 06 03 	call	0x60c	; 0x60c <joyStick_Can_Message>
		
		game_status = message_handler();
     c04:	ce 01       	movw	r24, r28
     c06:	01 96       	adiw	r24, 0x01	; 1
     c08:	0e 94 dd 02 	call	0x5ba	; 0x5ba <message_handler>
		
		if(game_status.data[0] == 0b10101011){
     c0c:	8c 81       	ldd	r24, Y+4	; 0x04
     c0e:	8b 3a       	cpi	r24, 0xAB	; 171
     c10:	b9 f7       	brne	.-18     	; 0xc00 <play_game+0x24>
			game_on = 0;
			
			printf("GameStatusData: %d", game_status.data[0]);
     c12:	1f 92       	push	r1
     c14:	8f 93       	push	r24
     c16:	85 ea       	ldi	r24, 0xA5	; 165
     c18:	91 e0       	ldi	r25, 0x01	; 1
     c1a:	9f 93       	push	r25
     c1c:	8f 93       	push	r24
     c1e:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <printf>
	}
	int highscore = game_status.data[1];
	
	//printf("Highscore is: %d", highscore);
	
	check_highscore(highscore);
     c22:	8d 81       	ldd	r24, Y+5	; 0x05
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 b7 05 	call	0xb6e	; 0xb6e <check_highscore>
	
}
     c2a:	0f 90       	pop	r0
     c2c:	0f 90       	pop	r0
     c2e:	0f 90       	pop	r0
     c30:	0f 90       	pop	r0
     c32:	66 96       	adiw	r28, 0x16	; 22
     c34:	0f b6       	in	r0, 0x3f	; 63
     c36:	f8 94       	cli
     c38:	de bf       	out	0x3e, r29	; 62
     c3a:	0f be       	out	0x3f, r0	; 63
     c3c:	cd bf       	out	0x3d, r28	; 61
     c3e:	df 91       	pop	r29
     c40:	cf 91       	pop	r28
     c42:	08 95       	ret

00000c44 <print_selecting_arrow>:

}


void print_selecting_arrow(int child){
    oled_print_arrow(child - 1, 5);
     c44:	65 e0       	ldi	r22, 0x05	; 5
     c46:	81 50       	subi	r24, 0x01	; 1
     c48:	0e 94 16 05 	call	0xa2c	; 0xa2c <oled_print_arrow>
     c4c:	08 95       	ret

00000c4e <print_main_menu_objects>:
        wait_for_neutral_joystick_position();
    }
}


void print_main_menu_objects(int child){
     c4e:	0f 93       	push	r16
     c50:	1f 93       	push	r17
     c52:	cf 93       	push	r28
     c54:	df 93       	push	r29
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
     c5a:	2b 97       	sbiw	r28, 0x0b	; 11
     c5c:	0f b6       	in	r0, 0x3f	; 63
     c5e:	f8 94       	cli
     c60:	de bf       	out	0x3e, r29	; 62
     c62:	0f be       	out	0x3f, r0	; 63
     c64:	cd bf       	out	0x3d, r28	; 61
     c66:	8c 01       	movw	r16, r24
    char line1[] = "play";
     c68:	85 e0       	ldi	r24, 0x05	; 5
     c6a:	e8 eb       	ldi	r30, 0xB8	; 184
     c6c:	f1 e0       	ldi	r31, 0x01	; 1
     c6e:	de 01       	movw	r26, r28
     c70:	11 96       	adiw	r26, 0x01	; 1
     c72:	01 90       	ld	r0, Z+
     c74:	0d 92       	st	X+, r0
     c76:	8a 95       	dec	r24
     c78:	e1 f7       	brne	.-8      	; 0xc72 <print_main_menu_objects+0x24>
    char line2[] = "Score";
     c7a:	86 e0       	ldi	r24, 0x06	; 6
     c7c:	ed eb       	ldi	r30, 0xBD	; 189
     c7e:	f1 e0       	ldi	r31, 0x01	; 1
     c80:	de 01       	movw	r26, r28
     c82:	16 96       	adiw	r26, 0x06	; 6
     c84:	01 90       	ld	r0, Z+
     c86:	0d 92       	st	X+, r0
     c88:	8a 95       	dec	r24
     c8a:	e1 f7       	brne	.-8      	; 0xc84 <print_main_menu_objects+0x36>

    oled_pos_set(0, 12);
     c8c:	6c e0       	ldi	r22, 0x0C	; 12
     c8e:	80 e0       	ldi	r24, 0x00	; 0
     c90:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
    oled_print(&line1);
     c94:	ce 01       	movw	r24, r28
     c96:	01 96       	adiw	r24, 0x01	; 1
     c98:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>

    oled_pos_set(1, 12);
     c9c:	6c e0       	ldi	r22, 0x0C	; 12
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
    oled_print(&line2);
     ca4:	ce 01       	movw	r24, r28
     ca6:	06 96       	adiw	r24, 0x06	; 6
     ca8:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>

    print_selecting_arrow(child);       //Draw the arrow that selects the preferable option.
     cac:	c8 01       	movw	r24, r16
     cae:	0e 94 22 06 	call	0xc44	; 0xc44 <print_selecting_arrow>
    
}
     cb2:	2b 96       	adiw	r28, 0x0b	; 11
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	f8 94       	cli
     cb8:	de bf       	out	0x3e, r29	; 62
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	cd bf       	out	0x3d, r28	; 61
     cbe:	df 91       	pop	r29
     cc0:	cf 91       	pop	r28
     cc2:	1f 91       	pop	r17
     cc4:	0f 91       	pop	r16
     cc6:	08 95       	ret

00000cc8 <print_new_game_menu_objects>:

void print_new_game_menu_objects(int child){
     cc8:	0f 93       	push	r16
     cca:	1f 93       	push	r17
     ccc:	cf 93       	push	r28
     cce:	df 93       	push	r29
     cd0:	cd b7       	in	r28, 0x3d	; 61
     cd2:	de b7       	in	r29, 0x3e	; 62
     cd4:	2b 97       	sbiw	r28, 0x0b	; 11
     cd6:	0f b6       	in	r0, 0x3f	; 63
     cd8:	f8 94       	cli
     cda:	de bf       	out	0x3e, r29	; 62
     cdc:	0f be       	out	0x3f, r0	; 63
     cde:	cd bf       	out	0x3d, r28	; 61
     ce0:	8c 01       	movw	r16, r24

    char line1[] = "Start game";
     ce2:	8b e0       	ldi	r24, 0x0B	; 11
     ce4:	e3 ec       	ldi	r30, 0xC3	; 195
     ce6:	f1 e0       	ldi	r31, 0x01	; 1
     ce8:	de 01       	movw	r26, r28
     cea:	11 96       	adiw	r26, 0x01	; 1
     cec:	01 90       	ld	r0, Z+
     cee:	0d 92       	st	X+, r0
     cf0:	8a 95       	dec	r24
     cf2:	e1 f7       	brne	.-8      	; 0xcec <print_new_game_menu_objects+0x24>

    oled_pos_set(0, 12);
     cf4:	6c e0       	ldi	r22, 0x0C	; 12
     cf6:	80 e0       	ldi	r24, 0x00	; 0
     cf8:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
    oled_print(&line1);
     cfc:	ce 01       	movw	r24, r28
     cfe:	01 96       	adiw	r24, 0x01	; 1
     d00:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>

    print_selecting_arrow(child);
     d04:	c8 01       	movw	r24, r16
     d06:	0e 94 22 06 	call	0xc44	; 0xc44 <print_selecting_arrow>
}
     d0a:	2b 96       	adiw	r28, 0x0b	; 11
     d0c:	0f b6       	in	r0, 0x3f	; 63
     d0e:	f8 94       	cli
     d10:	de bf       	out	0x3e, r29	; 62
     d12:	0f be       	out	0x3f, r0	; 63
     d14:	cd bf       	out	0x3d, r28	; 61
     d16:	df 91       	pop	r29
     d18:	cf 91       	pop	r28
     d1a:	1f 91       	pop	r17
     d1c:	0f 91       	pop	r16
     d1e:	08 95       	ret

00000d20 <print_score_menu_objects>:
        _3RD = highscore;
    }
    
}

void print_score_menu_objects(int child){
     d20:	0f 93       	push	r16
     d22:	1f 93       	push	r17
     d24:	cf 93       	push	r28
     d26:	df 93       	push	r29
     d28:	cd b7       	in	r28, 0x3d	; 61
     d2a:	de b7       	in	r29, 0x3e	; 62
     d2c:	e7 97       	sbiw	r28, 0x37	; 55
     d2e:	0f b6       	in	r0, 0x3f	; 63
     d30:	f8 94       	cli
     d32:	de bf       	out	0x3e, r29	; 62
     d34:	0f be       	out	0x3f, r0	; 63
     d36:	cd bf       	out	0x3d, r28	; 61
     d38:	8c 01       	movw	r16, r24

char line1[] = "Top score";
     d3a:	8a e0       	ldi	r24, 0x0A	; 10
     d3c:	e0 ee       	ldi	r30, 0xE0	; 224
     d3e:	f1 e0       	ldi	r31, 0x01	; 1
     d40:	de 01       	movw	r26, r28
     d42:	11 96       	adiw	r26, 0x01	; 1
     d44:	01 90       	ld	r0, Z+
     d46:	0d 92       	st	X+, r0
     d48:	8a 95       	dec	r24
     d4a:	e1 f7       	brne	.-8      	; 0xd44 <print_score_menu_objects+0x24>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     d4c:	4a e0       	ldi	r20, 0x0A	; 10
     d4e:	be 01       	movw	r22, r28
     d50:	65 5f       	subi	r22, 0xF5	; 245
     d52:	7f 4f       	sbci	r23, 0xFF	; 255
     d54:	80 91 f4 02 	lds	r24, 0x02F4	; 0x8002f4 <_1ST>
     d58:	90 91 f5 02 	lds	r25, 0x02F5	; 0x8002f5 <_1ST+0x1>
     d5c:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <__itoa_ncheck>
     d60:	4a e0       	ldi	r20, 0x0A	; 10
     d62:	be 01       	movw	r22, r28
     d64:	66 5e       	subi	r22, 0xE6	; 230
     d66:	7f 4f       	sbci	r23, 0xFF	; 255
     d68:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <_2ND>
     d6c:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <_2ND+0x1>
     d70:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <__itoa_ncheck>
     d74:	4a e0       	ldi	r20, 0x0A	; 10
     d76:	be 01       	movw	r22, r28
     d78:	67 5d       	subi	r22, 0xD7	; 215
     d7a:	7f 4f       	sbci	r23, 0xFF	; 255
     d7c:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <_3RD>
     d80:	90 91 e7 02 	lds	r25, 0x02E7	; 0x8002e7 <_3RD+0x1>
     d84:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <__itoa_ncheck>
itoa(_1ST, score_string1, 10);
itoa(_2ND, score_string2, 10);
itoa(_3RD, score_string3, 10);    

    
    oled_pos_set(0, 12);
     d88:	6c e0       	ldi	r22, 0x0C	; 12
     d8a:	80 e0       	ldi	r24, 0x00	; 0
     d8c:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
    oled_print(&line1);
     d90:	ce 01       	movw	r24, r28
     d92:	01 96       	adiw	r24, 0x01	; 1
     d94:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>

    oled_pos_set(2, 12);
     d98:	6c e0       	ldi	r22, 0x0C	; 12
     d9a:	82 e0       	ldi	r24, 0x02	; 2
     d9c:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
    oled_print("1ST  ");
     da0:	8e ec       	ldi	r24, 0xCE	; 206
     da2:	91 e0       	ldi	r25, 0x01	; 1
     da4:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>
    oled_print(&score_string1);
     da8:	ce 01       	movw	r24, r28
     daa:	0b 96       	adiw	r24, 0x0b	; 11
     dac:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>
    
    oled_pos_set(4, 12);
     db0:	6c e0       	ldi	r22, 0x0C	; 12
     db2:	84 e0       	ldi	r24, 0x04	; 4
     db4:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
    oled_print("2ND  ");
     db8:	84 ed       	ldi	r24, 0xD4	; 212
     dba:	91 e0       	ldi	r25, 0x01	; 1
     dbc:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>
    oled_print(&score_string2);
     dc0:	ce 01       	movw	r24, r28
     dc2:	4a 96       	adiw	r24, 0x1a	; 26
     dc4:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>

    oled_pos_set(6, 12);
     dc8:	6c e0       	ldi	r22, 0x0C	; 12
     dca:	86 e0       	ldi	r24, 0x06	; 6
     dcc:	0e 94 21 04 	call	0x842	; 0x842 <oled_pos_set>
    oled_print("3RD  ");
     dd0:	8a ed       	ldi	r24, 0xDA	; 218
     dd2:	91 e0       	ldi	r25, 0x01	; 1
     dd4:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>
    oled_print(&score_string3);
     dd8:	ce 01       	movw	r24, r28
     dda:	89 96       	adiw	r24, 0x29	; 41
     ddc:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <oled_print>
    
    print_selecting_arrow(child);
     de0:	c8 01       	movw	r24, r16
     de2:	0e 94 22 06 	call	0xc44	; 0xc44 <print_selecting_arrow>

}
     de6:	e7 96       	adiw	r28, 0x37	; 55
     de8:	0f b6       	in	r0, 0x3f	; 63
     dea:	f8 94       	cli
     dec:	de bf       	out	0x3e, r29	; 62
     dee:	0f be       	out	0x3f, r0	; 63
     df0:	cd bf       	out	0x3d, r28	; 61
     df2:	df 91       	pop	r29
     df4:	cf 91       	pop	r28
     df6:	1f 91       	pop	r17
     df8:	0f 91       	pop	r16
     dfa:	08 95       	ret

00000dfc <update_screen>:
    while(joystick_direction() != NEUTRAL);
}

void update_screen(Node *current_node, int child){

    if(((*current_node).name[1]) == 'a'){
     dfc:	fc 01       	movw	r30, r24
     dfe:	87 89       	ldd	r24, Z+23	; 0x17
     e00:	81 36       	cpi	r24, 0x61	; 97
     e02:	21 f4       	brne	.+8      	; 0xe0c <update_screen+0x10>
        //printf("Update  MAIN_MENU screen\t\n");
        print_main_menu_objects(child);
     e04:	cb 01       	movw	r24, r22
     e06:	0e 94 27 06 	call	0xc4e	; 0xc4e <print_main_menu_objects>
     e0a:	08 95       	ret
        //Skal oppdatere skjermen som passer til main-menu. I tillegg skal pilen howre over riktg barn.
    }
    else if(((*current_node).name[1]) == 'l'){
     e0c:	8c 36       	cpi	r24, 0x6C	; 108
     e0e:	21 f4       	brne	.+8      	; 0xe18 <update_screen+0x1c>
       // printf("Update PLAY menu\t\n");
        print_new_game_menu_objects(child);
     e10:	cb 01       	movw	r24, r22
     e12:	0e 94 64 06 	call	0xcc8	; 0xcc8 <print_new_game_menu_objects>
     e16:	08 95       	ret
    }
    else if(((*current_node).name[1]) == 'h'){
     e18:	88 36       	cpi	r24, 0x68	; 104
     e1a:	19 f4       	brne	.+6      	; 0xe22 <update_screen+0x26>
        print_score_menu_objects(child);
     e1c:	cb 01       	movw	r24, r22
     e1e:	0e 94 90 06 	call	0xd20	; 0xd20 <print_score_menu_objects>
     e22:	08 95       	ret

00000e24 <menu>:
    return child;
    
}
//Node Main_menu, Score, Play, Settings, Difficulty, Debugging, *current_node;

void menu(){
     e24:	cf 93       	push	r28
     e26:	df 93       	push	r29
     e28:	cd b7       	in	r28, 0x3d	; 61
     e2a:	de b7       	in	r29, 0x3e	; 62
     e2c:	e0 97       	sbiw	r28, 0x30	; 48
     e2e:	0f b6       	in	r0, 0x3f	; 63
     e30:	f8 94       	cli
     e32:	de bf       	out	0x3e, r29	; 62
     e34:	0f be       	out	0x3f, r0	; 63
     e36:	cd bf       	out	0x3d, r28	; 61

    static Node Main_menu, Score, Play, Settings, Difficulty, Debugging, *current_node;

    current_node = &Main_menu; //Startnoden
     e38:	8a eb       	ldi	r24, 0xBA	; 186
     e3a:	92 e0       	ldi	r25, 0x02	; 2
     e3c:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <current_node.2444+0x1>
     e40:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <current_node.2444>
    DIRECTION action; //Handling som er gjort på Joysticken
    int child = 1; //Barnet som man "howrer" over på skjermen. Default er øverste barnet.

    //Bygger nodestrukturen
    Node* children1[8] = {&Play, &Score,0 ,0 ,0 ,0 ,0 ,0};
     e44:	80 e1       	ldi	r24, 0x10	; 16
     e46:	ea e0       	ldi	r30, 0x0A	; 10
     e48:	f1 e0       	ldi	r31, 0x01	; 1
     e4a:	de 01       	movw	r26, r28
     e4c:	11 96       	adiw	r26, 0x01	; 1
     e4e:	01 90       	ld	r0, Z+
     e50:	0d 92       	st	X+, r0
     e52:	8a 95       	dec	r24
     e54:	e1 f7       	brne	.-8      	; 0xe4e <menu+0x2a>
    Node* children2[8] = {0, 0, 0, 0, 0, 0, 0, 0};
     e56:	80 e1       	ldi	r24, 0x10	; 16
     e58:	5e 01       	movw	r10, r28
     e5a:	91 e1       	ldi	r25, 0x11	; 17
     e5c:	a9 0e       	add	r10, r25
     e5e:	b1 1c       	adc	r11, r1
     e60:	f5 01       	movw	r30, r10
     e62:	98 2f       	mov	r25, r24
     e64:	11 92       	st	Z+, r1
     e66:	9a 95       	dec	r25
     e68:	e9 f7       	brne	.-6      	; 0xe64 <menu+0x40>
    Node* children3[8] = {0, 0, 0, 0, 0, 0, 0, 0};
     e6a:	6e 01       	movw	r12, r28
     e6c:	e1 e2       	ldi	r30, 0x21	; 33
     e6e:	ce 0e       	add	r12, r30
     e70:	d1 1c       	adc	r13, r1
     e72:	f6 01       	movw	r30, r12
     e74:	11 92       	st	Z+, r1
     e76:	8a 95       	dec	r24
     e78:	e9 f7       	brne	.-6      	; 0xe74 <menu+0x50>



    build_node(&Main_menu, NULL, "Main menu", NULL, &children1,2);
     e7a:	68 94       	set
     e7c:	ee 24       	eor	r14, r14
     e7e:	e1 f8       	bld	r14, 1
     e80:	f1 2c       	mov	r15, r1
     e82:	8e 01       	movw	r16, r28
     e84:	0f 5f       	subi	r16, 0xFF	; 255
     e86:	1f 4f       	sbci	r17, 0xFF	; 255
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	4a ee       	ldi	r20, 0xEA	; 234
     e8e:	51 e0       	ldi	r21, 0x01	; 1
     e90:	60 e0       	ldi	r22, 0x00	; 0
     e92:	70 e0       	ldi	r23, 0x00	; 0
     e94:	8a eb       	ldi	r24, 0xBA	; 186
     e96:	92 e0       	ldi	r25, 0x02	; 2
     e98:	0e 94 35 05 	call	0xa6a	; 0xa6a <build_node>
    build_node(&Play, &Main_menu, "Play game", play_game, &children2,1);
     e9c:	ee 24       	eor	r14, r14
     e9e:	e3 94       	inc	r14
     ea0:	f1 2c       	mov	r15, r1
     ea2:	85 01       	movw	r16, r10
     ea4:	2e ee       	ldi	r18, 0xEE	; 238
     ea6:	35 e0       	ldi	r19, 0x05	; 5
     ea8:	44 ef       	ldi	r20, 0xF4	; 244
     eaa:	51 e0       	ldi	r21, 0x01	; 1
     eac:	6a eb       	ldi	r22, 0xBA	; 186
     eae:	72 e0       	ldi	r23, 0x02	; 2
     eb0:	80 e9       	ldi	r24, 0x90	; 144
     eb2:	92 e0       	ldi	r25, 0x02	; 2
     eb4:	0e 94 35 05 	call	0xa6a	; 0xa6a <build_node>
    build_node(&Score, &Main_menu, "Show score", NULL, &children3,8);
     eb8:	68 94       	set
     eba:	ee 24       	eor	r14, r14
     ebc:	e3 f8       	bld	r14, 3
     ebe:	f1 2c       	mov	r15, r1
     ec0:	86 01       	movw	r16, r12
     ec2:	20 e0       	ldi	r18, 0x00	; 0
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	4e ef       	ldi	r20, 0xFE	; 254
     ec8:	51 e0       	ldi	r21, 0x01	; 1
     eca:	6a eb       	ldi	r22, 0xBA	; 186
     ecc:	72 e0       	ldi	r23, 0x02	; 2
     ece:	86 e6       	ldi	r24, 0x66	; 102
     ed0:	92 e0       	ldi	r25, 0x02	; 2
     ed2:	0e 94 35 05 	call	0xa6a	; 0xa6a <build_node>

    update_screen(current_node, child);
     ed6:	61 e0       	ldi	r22, 0x01	; 1
     ed8:	70 e0       	ldi	r23, 0x00	; 0
     eda:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <current_node.2444>
     ede:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <current_node.2444+0x1>
     ee2:	0e 94 fe 06 	call	0xdfc	; 0xdfc <update_screen>

    static Node Main_menu, Score, Play, Settings, Difficulty, Debugging, *current_node;

    current_node = &Main_menu; //Startnoden
    DIRECTION action; //Handling som er gjort på Joysticken
    int child = 1; //Barnet som man "howrer" over på skjermen. Default er øverste barnet.
     ee6:	ee 24       	eor	r14, r14
     ee8:	e3 94       	inc	r14
     eea:	f1 2c       	mov	r15, r1
    build_node(&Score, &Main_menu, "Show score", NULL, &children3,8);

    update_screen(current_node, child);

    while(1){
        action = wait_for_action();  //Wait for user to move the joystick
     eec:	0e 94 84 05 	call	0xb08	; 0xb08 <wait_for_action>
     ef0:	18 2f       	mov	r17, r24
        oled_clear();  //Clears the screen.
     ef2:	0e 94 2f 04 	call	0x85e	; 0x85e <oled_clear>

        switch(action)
     ef6:	11 30       	cpi	r17, 0x01	; 1
     ef8:	11 f1       	breq	.+68     	; 0xf3e <menu+0x11a>
     efa:	c8 f0       	brcs	.+50     	; 0xf2e <menu+0x10a>
     efc:	12 30       	cpi	r17, 0x02	; 2
     efe:	19 f0       	breq	.+6      	; 0xf06 <menu+0xe2>
     f00:	13 30       	cpi	r17, 0x03	; 3
     f02:	61 f0       	breq	.+24     	; 0xf1c <menu+0xf8>
     f04:	24 c0       	rjmp	.+72     	; 0xf4e <menu+0x12a>

}

int update_element_up(Node *current_node, int child){

    child--;
     f06:	f1 e0       	ldi	r31, 0x01	; 1
     f08:	ef 1a       	sub	r14, r31
     f0a:	f1 08       	sbc	r15, r1

    if(child == 0){
     f0c:	01 f5       	brne	.+64     	; 0xf4e <menu+0x12a>
        child = current_node->elements_on_screen;
     f0e:	e0 91 e4 02 	lds	r30, 0x02E4	; 0x8002e4 <current_node.2444>
     f12:	f0 91 e5 02 	lds	r31, 0x02E5	; 0x8002e5 <current_node.2444+0x1>
     f16:	e2 88       	ldd	r14, Z+18	; 0x12
     f18:	f3 88       	ldd	r15, Z+19	; 0x13
     f1a:	19 c0       	rjmp	.+50     	; 0xf4e <menu+0x12a>
          case UP:
                //update_screen(current_node, child);
                child = update_element_up(current_node, child);
              break;
          case DOWN:
                child = update_element_down(current_node, child);
     f1c:	b7 01       	movw	r22, r14
     f1e:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <current_node.2444>
     f22:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <current_node.2444+0x1>
     f26:	0e 94 aa 05 	call	0xb54	; 0xb54 <update_element_down>
     f2a:	7c 01       	movw	r14, r24
              break;
     f2c:	10 c0       	rjmp	.+32     	; 0xf4e <menu+0x12a>
          case LEFT:
                go_up(&current_node);
     f2e:	84 ee       	ldi	r24, 0xE4	; 228
     f30:	92 e0       	ldi	r25, 0x02	; 2
     f32:	0e 94 5f 05 	call	0xabe	; 0xabe <go_up>
                child = 1;
     f36:	ee 24       	eor	r14, r14
     f38:	e3 94       	inc	r14
     f3a:	f1 2c       	mov	r15, r1
              break;
     f3c:	08 c0       	rjmp	.+16     	; 0xf4e <menu+0x12a>
          case RIGHT:
                go_down(&current_node, child);
     f3e:	b7 01       	movw	r22, r14
     f40:	84 ee       	ldi	r24, 0xE4	; 228
     f42:	92 e0       	ldi	r25, 0x02	; 2
     f44:	0e 94 6b 05 	call	0xad6	; 0xad6 <go_down>
                child = 1;
     f48:	ee 24       	eor	r14, r14
     f4a:	e3 94       	inc	r14
     f4c:	f1 2c       	mov	r15, r1
              break;
        }

        //printf("After switch\t\n");
        //printf("Nodenavn %c \t\n",((*current_node).name[0]));
        update_screen(current_node, child);
     f4e:	b7 01       	movw	r22, r14
     f50:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <current_node.2444>
     f54:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <current_node.2444+0x1>
     f58:	0e 94 fe 06 	call	0xdfc	; 0xdfc <update_screen>
        wait_for_neutral_joystick_position();
     f5c:	0e 94 a5 05 	call	0xb4a	; 0xb4a <wait_for_neutral_joystick_position>
    }
     f60:	c5 cf       	rjmp	.-118    	; 0xeec <menu+0xc8>

00000f62 <pos_read>:
#include <avr/io.h>
#include <stdio.h>
#include "pos_read.h"


void pos_read(position* pos){
     f62:	8f 92       	push	r8
     f64:	9f 92       	push	r9
     f66:	af 92       	push	r10
     f68:	bf 92       	push	r11
     f6a:	cf 92       	push	r12
     f6c:	df 92       	push	r13
     f6e:	ef 92       	push	r14
     f70:	ff 92       	push	r15
     f72:	0f 93       	push	r16
     f74:	1f 93       	push	r17
     f76:	cf 93       	push	r28
     f78:	df 93       	push	r29
     f7a:	7c 01       	movw	r14, r24

    int ADC_Y = ADC_read(0);
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     f82:	c8 2f       	mov	r28, r24
     f84:	d0 e0       	ldi	r29, 0x00	; 0
    int ADC_X = ADC_read(1);
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
     f8c:	68 2f       	mov	r22, r24
     f8e:	70 e0       	ldi	r23, 0x00	; 0

    // X read

    if((ADC_X >= (P_cal.center_X - 20)) && (ADC_X <= (P_cal.center_X + 20))){ //Deadspace for joystick
     f90:	00 91 e8 02 	lds	r16, 0x02E8	; 0x8002e8 <P_cal>
     f94:	10 91 e9 02 	lds	r17, 0x02E9	; 0x8002e9 <P_cal+0x1>
     f98:	c8 01       	movw	r24, r16
     f9a:	44 97       	sbiw	r24, 0x14	; 20
     f9c:	68 17       	cp	r22, r24
     f9e:	79 07       	cpc	r23, r25
     fa0:	0c f4       	brge	.+2      	; 0xfa4 <pos_read+0x42>
     fa2:	b6 c0       	rjmp	.+364    	; 0x1110 <pos_read+0x1ae>
     fa4:	88 96       	adiw	r24, 0x28	; 40
     fa6:	86 17       	cp	r24, r22
     fa8:	97 07       	cpc	r25, r23
     faa:	0c f0       	brlt	.+2      	; 0xfae <pos_read+0x4c>
     fac:	4c c0       	rjmp	.+152    	; 0x1046 <pos_read+0xe4>
        ADC_X = 0;
    }
    else if(ADC_X > (P_cal.center_X + 20)){
        ADC_X = (ADC_X - P_cal.center_X) * 100.0 / (255.0 - P_cal.center_X);  //
     fae:	60 1b       	sub	r22, r16
     fb0:	71 0b       	sbc	r23, r17
     fb2:	07 2e       	mov	r0, r23
     fb4:	00 0c       	add	r0, r0
     fb6:	88 0b       	sbc	r24, r24
     fb8:	99 0b       	sbc	r25, r25
     fba:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
     fbe:	20 e0       	ldi	r18, 0x00	; 0
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	48 ec       	ldi	r20, 0xC8	; 200
     fc4:	52 e4       	ldi	r21, 0x42	; 66
     fc6:	0e 94 5f 0c 	call	0x18be	; 0x18be <__mulsf3>
     fca:	4b 01       	movw	r8, r22
     fcc:	5c 01       	movw	r10, r24
     fce:	b8 01       	movw	r22, r16
     fd0:	11 0f       	add	r17, r17
     fd2:	88 0b       	sbc	r24, r24
     fd4:	99 0b       	sbc	r25, r25
     fd6:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
     fda:	9b 01       	movw	r18, r22
     fdc:	ac 01       	movw	r20, r24
     fde:	60 e0       	ldi	r22, 0x00	; 0
     fe0:	70 e0       	ldi	r23, 0x00	; 0
     fe2:	8f e7       	ldi	r24, 0x7F	; 127
     fe4:	93 e4       	ldi	r25, 0x43	; 67
     fe6:	0e 94 ed 09 	call	0x13da	; 0x13da <__subsf3>
     fea:	9b 01       	movw	r18, r22
     fec:	ac 01       	movw	r20, r24
     fee:	c5 01       	movw	r24, r10
     ff0:	b4 01       	movw	r22, r8
     ff2:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <__divsf3>
     ff6:	0e 94 43 0b 	call	0x1686	; 0x1686 <__fixsfsi>
     ffa:	6b 01       	movw	r12, r22
     ffc:	26 c0       	rjmp	.+76     	; 0x104a <pos_read+0xe8>
    }

    else if (ADC_X < (P_cal.center_X - 20)){
        ADC_X = (ADC_X / ((float)P_cal.center_X)) * 100 - 100;   // // Scaling when value is larger then center value
     ffe:	07 2e       	mov	r0, r23
    1000:	00 0c       	add	r0, r0
    1002:	88 0b       	sbc	r24, r24
    1004:	99 0b       	sbc	r25, r25
    1006:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    100a:	4b 01       	movw	r8, r22
    100c:	5c 01       	movw	r10, r24
    100e:	b8 01       	movw	r22, r16
    1010:	11 0f       	add	r17, r17
    1012:	88 0b       	sbc	r24, r24
    1014:	99 0b       	sbc	r25, r25
    1016:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    101a:	9b 01       	movw	r18, r22
    101c:	ac 01       	movw	r20, r24
    101e:	c5 01       	movw	r24, r10
    1020:	b4 01       	movw	r22, r8
    1022:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <__divsf3>
    1026:	20 e0       	ldi	r18, 0x00	; 0
    1028:	30 e0       	ldi	r19, 0x00	; 0
    102a:	48 ec       	ldi	r20, 0xC8	; 200
    102c:	52 e4       	ldi	r21, 0x42	; 66
    102e:	0e 94 5f 0c 	call	0x18be	; 0x18be <__mulsf3>
    1032:	20 e0       	ldi	r18, 0x00	; 0
    1034:	30 e0       	ldi	r19, 0x00	; 0
    1036:	48 ec       	ldi	r20, 0xC8	; 200
    1038:	52 e4       	ldi	r21, 0x42	; 66
    103a:	0e 94 ed 09 	call	0x13da	; 0x13da <__subsf3>
    103e:	0e 94 43 0b 	call	0x1686	; 0x1686 <__fixsfsi>
    1042:	6b 01       	movw	r12, r22
    1044:	02 c0       	rjmp	.+4      	; 0x104a <pos_read+0xe8>
    int ADC_X = ADC_read(1);

    // X read

    if((ADC_X >= (P_cal.center_X - 20)) && (ADC_X <= (P_cal.center_X + 20))){ //Deadspace for joystick
        ADC_X = 0;
    1046:	c1 2c       	mov	r12, r1
    1048:	d1 2c       	mov	r13, r1
        ADC_X = (ADC_X / ((float)P_cal.center_X)) * 100 - 100;   // // Scaling when value is larger then center value
    }

    // Y read

    if(ADC_Y >= (P_cal.center_Y - 80) && ADC_Y <= (P_cal.center_Y + 80)){  //Deadspace for joystick
    104a:	00 91 ea 02 	lds	r16, 0x02EA	; 0x8002ea <P_cal+0x2>
    104e:	10 91 eb 02 	lds	r17, 0x02EB	; 0x8002eb <P_cal+0x3>
    1052:	c8 01       	movw	r24, r16
    1054:	80 55       	subi	r24, 0x50	; 80
    1056:	91 09       	sbc	r25, r1
    1058:	c8 17       	cp	r28, r24
    105a:	d9 07       	cpc	r29, r25
    105c:	0c f4       	brge	.+2      	; 0x1060 <pos_read+0xfe>
    105e:	5f c0       	rjmp	.+190    	; 0x111e <pos_read+0x1bc>
    1060:	80 56       	subi	r24, 0x60	; 96
    1062:	9f 4f       	sbci	r25, 0xFF	; 255
    1064:	8c 17       	cp	r24, r28
    1066:	9d 07       	cpc	r25, r29
    1068:	0c f0       	brlt	.+2      	; 0x106c <pos_read+0x10a>
    106a:	4a c0       	rjmp	.+148    	; 0x1100 <pos_read+0x19e>
        ADC_Y = 0;
    }
    else if(ADC_Y > (P_cal.center_Y + 80)){
        ADC_Y = (ADC_Y - (P_cal.center_Y)) * 100.0 / (255.0 - P_cal.center_Y);  // Scaling when value is larger then center value
    106c:	c0 1b       	sub	r28, r16
    106e:	d1 0b       	sbc	r29, r17
    1070:	be 01       	movw	r22, r28
    1072:	dd 0f       	add	r29, r29
    1074:	88 0b       	sbc	r24, r24
    1076:	99 0b       	sbc	r25, r25
    1078:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	48 ec       	ldi	r20, 0xC8	; 200
    1082:	52 e4       	ldi	r21, 0x42	; 66
    1084:	0e 94 5f 0c 	call	0x18be	; 0x18be <__mulsf3>
    1088:	4b 01       	movw	r8, r22
    108a:	5c 01       	movw	r10, r24
    108c:	b8 01       	movw	r22, r16
    108e:	11 0f       	add	r17, r17
    1090:	88 0b       	sbc	r24, r24
    1092:	99 0b       	sbc	r25, r25
    1094:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    1098:	9b 01       	movw	r18, r22
    109a:	ac 01       	movw	r20, r24
    109c:	60 e0       	ldi	r22, 0x00	; 0
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	8f e7       	ldi	r24, 0x7F	; 127
    10a2:	93 e4       	ldi	r25, 0x43	; 67
    10a4:	0e 94 ed 09 	call	0x13da	; 0x13da <__subsf3>
    10a8:	9b 01       	movw	r18, r22
    10aa:	ac 01       	movw	r20, r24
    10ac:	c5 01       	movw	r24, r10
    10ae:	b4 01       	movw	r22, r8
    10b0:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <__divsf3>
    10b4:	0e 94 43 0b 	call	0x1686	; 0x1686 <__fixsfsi>
    10b8:	25 c0       	rjmp	.+74     	; 0x1104 <pos_read+0x1a2>
    }

    else if (ADC_Y < (P_cal.center_Y - 80)){
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
    10ba:	be 01       	movw	r22, r28
    10bc:	dd 0f       	add	r29, r29
    10be:	88 0b       	sbc	r24, r24
    10c0:	99 0b       	sbc	r25, r25
    10c2:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    10c6:	4b 01       	movw	r8, r22
    10c8:	5c 01       	movw	r10, r24
    10ca:	b8 01       	movw	r22, r16
    10cc:	11 0f       	add	r17, r17
    10ce:	88 0b       	sbc	r24, r24
    10d0:	99 0b       	sbc	r25, r25
    10d2:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    10d6:	9b 01       	movw	r18, r22
    10d8:	ac 01       	movw	r20, r24
    10da:	c5 01       	movw	r24, r10
    10dc:	b4 01       	movw	r22, r8
    10de:	0e 94 d1 0a 	call	0x15a2	; 0x15a2 <__divsf3>
    10e2:	20 e0       	ldi	r18, 0x00	; 0
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	48 ec       	ldi	r20, 0xC8	; 200
    10e8:	52 e4       	ldi	r21, 0x42	; 66
    10ea:	0e 94 5f 0c 	call	0x18be	; 0x18be <__mulsf3>
    10ee:	20 e0       	ldi	r18, 0x00	; 0
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	48 ec       	ldi	r20, 0xC8	; 200
    10f4:	52 e4       	ldi	r21, 0x42	; 66
    10f6:	0e 94 ed 09 	call	0x13da	; 0x13da <__subsf3>
    10fa:	0e 94 43 0b 	call	0x1686	; 0x1686 <__fixsfsi>
    10fe:	02 c0       	rjmp	.+4      	; 0x1104 <pos_read+0x1a2>
    }

    // Y read

    if(ADC_Y >= (P_cal.center_Y - 80) && ADC_Y <= (P_cal.center_Y + 80)){  //Deadspace for joystick
        ADC_Y = 0;
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	70 e0       	ldi	r23, 0x00	; 0

    else if (ADC_Y < (P_cal.center_Y - 80)){
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
    }

    pos -> posX = ADC_X;
    1104:	f7 01       	movw	r30, r14
    1106:	d1 82       	std	Z+1, r13	; 0x01
    1108:	c0 82       	st	Z, r12
    pos -> posY = ADC_Y;
    110a:	73 83       	std	Z+3, r23	; 0x03
    110c:	62 83       	std	Z+2, r22	; 0x02
}
    110e:	0e c0       	rjmp	.+28     	; 0x112c <pos_read+0x1ca>
    // X read

    if((ADC_X >= (P_cal.center_X - 20)) && (ADC_X <= (P_cal.center_X + 20))){ //Deadspace for joystick
        ADC_X = 0;
    }
    else if(ADC_X > (P_cal.center_X + 20)){
    1110:	c8 01       	movw	r24, r16
    1112:	44 96       	adiw	r24, 0x14	; 20
    1114:	86 17       	cp	r24, r22
    1116:	97 07       	cpc	r25, r23
    1118:	0c f4       	brge	.+2      	; 0x111c <pos_read+0x1ba>
    111a:	49 cf       	rjmp	.-366    	; 0xfae <pos_read+0x4c>
    111c:	70 cf       	rjmp	.-288    	; 0xffe <pos_read+0x9c>
    // Y read

    if(ADC_Y >= (P_cal.center_Y - 80) && ADC_Y <= (P_cal.center_Y + 80)){  //Deadspace for joystick
        ADC_Y = 0;
    }
    else if(ADC_Y > (P_cal.center_Y + 80)){
    111e:	c8 01       	movw	r24, r16
    1120:	80 5b       	subi	r24, 0xB0	; 176
    1122:	9f 4f       	sbci	r25, 0xFF	; 255
    1124:	8c 17       	cp	r24, r28
    1126:	9d 07       	cpc	r25, r29
    1128:	44 f6       	brge	.-112    	; 0x10ba <pos_read+0x158>
    112a:	a0 cf       	rjmp	.-192    	; 0x106c <pos_read+0x10a>
        ADC_Y = (ADC_Y / ((float)P_cal.center_Y)) * 100 - 100;   // Scaling when value is smaller then center value
    }

    pos -> posX = ADC_X;
    pos -> posY = ADC_Y;
}
    112c:	df 91       	pop	r29
    112e:	cf 91       	pop	r28
    1130:	1f 91       	pop	r17
    1132:	0f 91       	pop	r16
    1134:	ff 90       	pop	r15
    1136:	ef 90       	pop	r14
    1138:	df 90       	pop	r13
    113a:	cf 90       	pop	r12
    113c:	bf 90       	pop	r11
    113e:	af 90       	pop	r10
    1140:	9f 90       	pop	r9
    1142:	8f 90       	pop	r8
    1144:	08 95       	ret

00001146 <joystick_direction>:

DIRECTION joystick_direction(void){
    1146:	8f 92       	push	r8
    1148:	9f 92       	push	r9
    114a:	af 92       	push	r10
    114c:	bf 92       	push	r11
    114e:	cf 92       	push	r12
    1150:	df 92       	push	r13
    1152:	ef 92       	push	r14
    1154:	ff 92       	push	r15
    1156:	cf 93       	push	r28
    1158:	df 93       	push	r29

    pos_read(&P_pos);
    115a:	8c ee       	ldi	r24, 0xEC	; 236
    115c:	92 e0       	ldi	r25, 0x02	; 2
    115e:	0e 94 b1 07 	call	0xf62	; 0xf62 <pos_read>

    int angle = atan2(P_pos.posY, P_pos.posX);
    1162:	ec ee       	ldi	r30, 0xEC	; 236
    1164:	f2 e0       	ldi	r31, 0x02	; 2
    1166:	e0 80       	ld	r14, Z
    1168:	f1 80       	ldd	r15, Z+1	; 0x01
    116a:	c2 81       	ldd	r28, Z+2	; 0x02
    116c:	d3 81       	ldd	r29, Z+3	; 0x03
    116e:	b7 01       	movw	r22, r14
    1170:	0f 2c       	mov	r0, r15
    1172:	00 0c       	add	r0, r0
    1174:	88 0b       	sbc	r24, r24
    1176:	99 0b       	sbc	r25, r25
    1178:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    117c:	4b 01       	movw	r8, r22
    117e:	5c 01       	movw	r10, r24
    1180:	be 01       	movw	r22, r28
    1182:	0d 2e       	mov	r0, r29
    1184:	00 0c       	add	r0, r0
    1186:	88 0b       	sbc	r24, r24
    1188:	99 0b       	sbc	r25, r25
    118a:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    118e:	a5 01       	movw	r20, r10
    1190:	94 01       	movw	r18, r8
    1192:	0e 94 6d 0a 	call	0x14da	; 0x14da <atan2>

    if(!P_pos.posY & !P_pos.posX){
    1196:	21 e0       	ldi	r18, 0x01	; 1
    1198:	cd 2b       	or	r28, r29
    119a:	09 f0       	breq	.+2      	; 0x119e <joystick_direction+0x58>
    119c:	20 e0       	ldi	r18, 0x00	; 0
    119e:	22 23       	and	r18, r18
    11a0:	31 f0       	breq	.+12     	; 0x11ae <joystick_direction+0x68>
    11a2:	21 e0       	ldi	r18, 0x01	; 1
    11a4:	ef 28       	or	r14, r15
    11a6:	09 f0       	breq	.+2      	; 0x11aa <joystick_direction+0x64>
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	21 11       	cpse	r18, r1
    11ac:	79 c0       	rjmp	.+242    	; 0x12a0 <joystick_direction+0x15a>
        return NEUTRAL;
    }

    else if(angle >= -PI / 4.0 & angle <= PI/4.0){
    11ae:	0e 94 43 0b 	call	0x1686	; 0x1686 <__fixsfsi>
    11b2:	07 2e       	mov	r0, r23
    11b4:	00 0c       	add	r0, r0
    11b6:	88 0b       	sbc	r24, r24
    11b8:	99 0b       	sbc	r25, r25
    11ba:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatsisf>
    11be:	6b 01       	movw	r12, r22
    11c0:	7c 01       	movw	r14, r24
    11c2:	c1 e0       	ldi	r28, 0x01	; 1
    11c4:	2b ed       	ldi	r18, 0xDB	; 219
    11c6:	3f e0       	ldi	r19, 0x0F	; 15
    11c8:	49 e4       	ldi	r20, 0x49	; 73
    11ca:	5f eb       	ldi	r21, 0xBF	; 191
    11cc:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__gesf2>
    11d0:	88 23       	and	r24, r24
    11d2:	0c f4       	brge	.+2      	; 0x11d6 <joystick_direction+0x90>
    11d4:	c0 e0       	ldi	r28, 0x00	; 0
    11d6:	cc 23       	and	r28, r28
    11d8:	71 f0       	breq	.+28     	; 0x11f6 <joystick_direction+0xb0>
    11da:	c1 e0       	ldi	r28, 0x01	; 1
    11dc:	2b ed       	ldi	r18, 0xDB	; 219
    11de:	3f e0       	ldi	r19, 0x0F	; 15
    11e0:	49 e4       	ldi	r20, 0x49	; 73
    11e2:	5f e3       	ldi	r21, 0x3F	; 63
    11e4:	c7 01       	movw	r24, r14
    11e6:	b6 01       	movw	r22, r12
    11e8:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__cmpsf2>
    11ec:	18 16       	cp	r1, r24
    11ee:	0c f4       	brge	.+2      	; 0x11f2 <joystick_direction+0xac>
    11f0:	c0 e0       	ldi	r28, 0x00	; 0
    11f2:	c1 11       	cpse	r28, r1
    11f4:	57 c0       	rjmp	.+174    	; 0x12a4 <joystick_direction+0x15e>
        return RIGHT;
    }

    else if(angle >= -3 * PI/4.0 & angle <= -PI / 4.0){
    11f6:	c1 e0       	ldi	r28, 0x01	; 1
    11f8:	24 ee       	ldi	r18, 0xE4	; 228
    11fa:	3b ec       	ldi	r19, 0xCB	; 203
    11fc:	46 e1       	ldi	r20, 0x16	; 22
    11fe:	50 ec       	ldi	r21, 0xC0	; 192
    1200:	c7 01       	movw	r24, r14
    1202:	b6 01       	movw	r22, r12
    1204:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__gesf2>
    1208:	88 23       	and	r24, r24
    120a:	0c f4       	brge	.+2      	; 0x120e <joystick_direction+0xc8>
    120c:	c0 e0       	ldi	r28, 0x00	; 0
    120e:	cc 23       	and	r28, r28
    1210:	71 f0       	breq	.+28     	; 0x122e <joystick_direction+0xe8>
    1212:	c1 e0       	ldi	r28, 0x01	; 1
    1214:	2b ed       	ldi	r18, 0xDB	; 219
    1216:	3f e0       	ldi	r19, 0x0F	; 15
    1218:	49 e4       	ldi	r20, 0x49	; 73
    121a:	5f eb       	ldi	r21, 0xBF	; 191
    121c:	c7 01       	movw	r24, r14
    121e:	b6 01       	movw	r22, r12
    1220:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__cmpsf2>
    1224:	18 16       	cp	r1, r24
    1226:	0c f4       	brge	.+2      	; 0x122a <joystick_direction+0xe4>
    1228:	c0 e0       	ldi	r28, 0x00	; 0
    122a:	c1 11       	cpse	r28, r1
    122c:	3d c0       	rjmp	.+122    	; 0x12a8 <joystick_direction+0x162>
        return DOWN;
    }

    else if(angle >= 3 * PI/4 | angle <= -3* PI / 4.0){
    122e:	c1 e0       	ldi	r28, 0x01	; 1
    1230:	24 ee       	ldi	r18, 0xE4	; 228
    1232:	3b ec       	ldi	r19, 0xCB	; 203
    1234:	46 e1       	ldi	r20, 0x16	; 22
    1236:	50 e4       	ldi	r21, 0x40	; 64
    1238:	c7 01       	movw	r24, r14
    123a:	b6 01       	movw	r22, r12
    123c:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__gesf2>
    1240:	88 23       	and	r24, r24
    1242:	0c f4       	brge	.+2      	; 0x1246 <joystick_direction+0x100>
    1244:	c0 e0       	ldi	r28, 0x00	; 0
    1246:	c1 11       	cpse	r28, r1
    1248:	31 c0       	rjmp	.+98     	; 0x12ac <joystick_direction+0x166>
    124a:	c1 e0       	ldi	r28, 0x01	; 1
    124c:	24 ee       	ldi	r18, 0xE4	; 228
    124e:	3b ec       	ldi	r19, 0xCB	; 203
    1250:	46 e1       	ldi	r20, 0x16	; 22
    1252:	50 ec       	ldi	r21, 0xC0	; 192
    1254:	c7 01       	movw	r24, r14
    1256:	b6 01       	movw	r22, r12
    1258:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__cmpsf2>
    125c:	18 16       	cp	r1, r24
    125e:	0c f4       	brge	.+2      	; 0x1262 <joystick_direction+0x11c>
    1260:	c0 e0       	ldi	r28, 0x00	; 0
    1262:	c1 11       	cpse	r28, r1
    1264:	23 c0       	rjmp	.+70     	; 0x12ac <joystick_direction+0x166>
        return LEFT;
    }

    else if(angle >= PI / 4 & angle <= 3*PI / 4.0){
    1266:	c1 e0       	ldi	r28, 0x01	; 1
    1268:	2b ed       	ldi	r18, 0xDB	; 219
    126a:	3f e0       	ldi	r19, 0x0F	; 15
    126c:	49 e4       	ldi	r20, 0x49	; 73
    126e:	5f e3       	ldi	r21, 0x3F	; 63
    1270:	c7 01       	movw	r24, r14
    1272:	b6 01       	movw	r22, r12
    1274:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__gesf2>
    1278:	88 23       	and	r24, r24
    127a:	0c f4       	brge	.+2      	; 0x127e <joystick_direction+0x138>
    127c:	c0 e0       	ldi	r28, 0x00	; 0
    127e:	cc 23       	and	r28, r28
    1280:	71 f0       	breq	.+28     	; 0x129e <joystick_direction+0x158>
    1282:	c1 e0       	ldi	r28, 0x01	; 1
    1284:	24 ee       	ldi	r18, 0xE4	; 228
    1286:	3b ec       	ldi	r19, 0xCB	; 203
    1288:	46 e1       	ldi	r20, 0x16	; 22
    128a:	50 e4       	ldi	r21, 0x40	; 64
    128c:	c7 01       	movw	r24, r14
    128e:	b6 01       	movw	r22, r12
    1290:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__cmpsf2>
    1294:	18 16       	cp	r1, r24
    1296:	0c f4       	brge	.+2      	; 0x129a <joystick_direction+0x154>
    1298:	c0 e0       	ldi	r28, 0x00	; 0
    129a:	c1 11       	cpse	r28, r1
    129c:	09 c0       	rjmp	.+18     	; 0x12b0 <joystick_direction+0x16a>
        return UP;
    }
}
    129e:	09 c0       	rjmp	.+18     	; 0x12b2 <joystick_direction+0x16c>
    pos_read(&P_pos);

    int angle = atan2(P_pos.posY, P_pos.posX);

    if(!P_pos.posY & !P_pos.posX){
        return NEUTRAL;
    12a0:	84 e0       	ldi	r24, 0x04	; 4
    12a2:	07 c0       	rjmp	.+14     	; 0x12b2 <joystick_direction+0x16c>
    }

    else if(angle >= -PI / 4.0 & angle <= PI/4.0){
        return RIGHT;
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	05 c0       	rjmp	.+10     	; 0x12b2 <joystick_direction+0x16c>
    }

    else if(angle >= -3 * PI/4.0 & angle <= -PI / 4.0){
        return DOWN;
    12a8:	83 e0       	ldi	r24, 0x03	; 3
    12aa:	03 c0       	rjmp	.+6      	; 0x12b2 <joystick_direction+0x16c>
    }

    else if(angle >= 3 * PI/4 | angle <= -3* PI / 4.0){
        return LEFT;
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	01 c0       	rjmp	.+2      	; 0x12b2 <joystick_direction+0x16c>
    }

    else if(angle >= PI / 4 & angle <= 3*PI / 4.0){
        return UP;
    12b0:	82 e0       	ldi	r24, 0x02	; 2
    }
}
    12b2:	df 91       	pop	r29
    12b4:	cf 91       	pop	r28
    12b6:	ff 90       	pop	r15
    12b8:	ef 90       	pop	r14
    12ba:	df 90       	pop	r13
    12bc:	cf 90       	pop	r12
    12be:	bf 90       	pop	r11
    12c0:	af 90       	pop	r10
    12c2:	9f 90       	pop	r9
    12c4:	8f 90       	pop	r8
    12c6:	08 95       	ret

000012c8 <pos_readSettings>:

void pos_readSettings(void){
	
	DDRB &= ~(1 << PB1);
    12c8:	b9 98       	cbi	0x17, 1	; 23
	DDRD &= ~(1 << PD4);
    12ca:	8c 98       	cbi	0x11, 4	; 17
	DDRD &= ~(1 << PD5);
    12cc:	8d 98       	cbi	0x11, 5	; 17

	PORTB |= (1 << PB1); // internal pull up enable
    12ce:	c1 9a       	sbi	0x18, 1	; 24
    12d0:	08 95       	ret

000012d2 <usb_button_pushed>:

uint8_t usb_button_pushed(USB_BUTTON BUTTON){

    uint8_t pressed;

    if(BUTTON == LEFT_BUTTON){
    12d2:	81 30       	cpi	r24, 0x01	; 1
    12d4:	19 f4       	brne	.+6      	; 0x12dc <usb_button_pushed+0xa>
        pressed = (PIND & (1 << PD4) );
    12d6:	80 b3       	in	r24, 0x10	; 16
    12d8:	80 71       	andi	r24, 0x10	; 16
    12da:	08 95       	ret

		}

    if(BUTTON == RIGHT_BUTTON){
    12dc:	81 11       	cpse	r24, r1
    12de:	03 c0       	rjmp	.+6      	; 0x12e6 <usb_button_pushed+0x14>
        pressed =  (PIND & (1 << PD5) );
    12e0:	80 b3       	in	r24, 0x10	; 16
    12e2:	80 72       	andi	r24, 0x20	; 32
    12e4:	08 95       	ret
		}

    if(BUTTON == JOYSTICK_BUTTON){
    12e6:	82 30       	cpi	r24, 0x02	; 2
    12e8:	31 f4       	brne	.+12     	; 0x12f6 <usb_button_pushed+0x24>
        pressed =  (PINB & (1 << PB1) );
    12ea:	86 b3       	in	r24, 0x16	; 22
        return !pressed;
    12ec:	86 95       	lsr	r24
    12ee:	81 70       	andi	r24, 0x01	; 1
    12f0:	91 e0       	ldi	r25, 0x01	; 1
    12f2:	89 27       	eor	r24, r25
    12f4:	08 95       	ret
    12f6:	80 e0       	ldi	r24, 0x00	; 0
		}

    return pressed;
}
    12f8:	08 95       	ret

000012fa <main>:
    12fa:	0e 94 d6 09 	call	0x13ac	; 0x13ac <SRAM_init>
    12fe:	0e 94 0a 02 	call	0x414	; 0x414 <ADC_timer_init>
    1302:	0e 94 dd 09 	call	0x13ba	; 0x13ba <USART_init>
    1306:	65 ee       	ldi	r22, 0xE5	; 229
    1308:	79 e0       	ldi	r23, 0x09	; 9
    130a:	89 ee       	ldi	r24, 0xE9	; 233
    130c:	99 e0       	ldi	r25, 0x09	; 9
    130e:	0e 94 fc 0c 	call	0x19f8	; 0x19f8 <fdevopen>
    1312:	88 ee       	ldi	r24, 0xE8	; 232
    1314:	92 e0       	ldi	r25, 0x02	; 2
    1316:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <ADC_calibrate>
    131a:	0e 94 53 04 	call	0x8a6	; 0x8a6 <OLED_init>
    131e:	0e 94 64 09 	call	0x12c8	; 0x12c8 <pos_readSettings>
    1322:	0e 94 2f 04 	call	0x85e	; 0x85e <oled_clear>
    1326:	80 e0       	ldi	r24, 0x00	; 0
    1328:	0e 94 17 02 	call	0x42e	; 0x42e <CAN_init>
    132c:	0e 94 12 07 	call	0xe24	; 0xe24 <menu>
    1330:	89 e0       	ldi	r24, 0x09	; 9
    1332:	92 e0       	ldi	r25, 0x02	; 2
    1334:	9f 93       	push	r25
    1336:	8f 93       	push	r24
    1338:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <printf>
    133c:	0f 90       	pop	r0
    133e:	0f 90       	pop	r0
    1340:	cc ee       	ldi	r28, 0xEC	; 236
    1342:	d2 e0       	ldi	r29, 0x02	; 2
    1344:	0e e1       	ldi	r16, 0x1E	; 30
    1346:	12 e0       	ldi	r17, 0x02	; 2
    1348:	0e 94 06 03 	call	0x60c	; 0x60c <joyStick_Can_Message>
    134c:	83 e0       	ldi	r24, 0x03	; 3
    134e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
    1352:	f8 2e       	mov	r15, r24
    1354:	82 e0       	ldi	r24, 0x02	; 2
    1356:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <ADC_read>
    135a:	1f 92       	push	r1
    135c:	8f 93       	push	r24
    135e:	1f 92       	push	r1
    1360:	ff 92       	push	r15
    1362:	8b 81       	ldd	r24, Y+3	; 0x03
    1364:	8f 93       	push	r24
    1366:	8a 81       	ldd	r24, Y+2	; 0x02
    1368:	8f 93       	push	r24
    136a:	89 81       	ldd	r24, Y+1	; 0x01
    136c:	8f 93       	push	r24
    136e:	88 81       	ld	r24, Y
    1370:	8f 93       	push	r24
    1372:	1f 93       	push	r17
    1374:	0f 93       	push	r16
    1376:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <printf>
    137a:	8d b7       	in	r24, 0x3d	; 61
    137c:	9e b7       	in	r25, 0x3e	; 62
    137e:	0a 96       	adiw	r24, 0x0a	; 10
    1380:	0f b6       	in	r0, 0x3f	; 63
    1382:	f8 94       	cli
    1384:	9e bf       	out	0x3e, r25	; 62
    1386:	0f be       	out	0x3f, r0	; 63
    1388:	8d bf       	out	0x3d, r24	; 61
    138a:	de cf       	rjmp	.-68     	; 0x1348 <main+0x4e>

0000138c <spi_write>:
#include "spi_driver.h"


void spi_write(char data){

    SPDR = data;
    138c:	8f b9       	out	0x0f, r24	; 15
    while( !(SPSR & (1<<SPIF)) );
    138e:	77 9b       	sbis	0x0e, 7	; 14
    1390:	fe cf       	rjmp	.-4      	; 0x138e <spi_write+0x2>

}
    1392:	08 95       	ret

00001394 <spi_read>:

char spi_read(void){

    spi_write(DUMMY);
    1394:	86 e5       	ldi	r24, 0x56	; 86
    1396:	0e 94 c6 09 	call	0x138c	; 0x138c <spi_write>
    //printf("SPI data sent is");
    return SPDR;
    139a:	8f b1       	in	r24, 0x0f	; 15
}
    139c:	08 95       	ret

0000139e <spi_init>:

void spi_init(void){
    DDR_SPI |= (1 << SCK) | (1 << MOSI) | (1 << SS);
    139e:	87 b3       	in	r24, 0x17	; 23
    13a0:	80 6b       	ori	r24, 0xB0	; 176
    13a2:	87 bb       	out	0x17, r24	; 23

    SPCR |= (1 << SPE) | (1 << MSTR) | (1<<SPR0);  // Enable SPI and set as master
    13a4:	8d b1       	in	r24, 0x0d	; 13
    13a6:	81 65       	ori	r24, 0x51	; 81
    13a8:	8d b9       	out	0x0d, r24	; 13
    13aa:	08 95       	ret

000013ac <SRAM_init>:
 */

#include "SRAM_driver.h"

void SRAM_init(void){
    MCUCR |= (1 << SRE);     //external SRAM enable (mcu control register)
    13ac:	85 b7       	in	r24, 0x35	; 53
    13ae:	80 68       	ori	r24, 0x80	; 128
    13b0:	85 bf       	out	0x35, r24	; 53
    SFIOR |= (1 << XMM2);    //excludes memory occupied by JTAG
    13b2:	80 b7       	in	r24, 0x30	; 48
    13b4:	80 62       	ori	r24, 0x20	; 32
    13b6:	80 bf       	out	0x30, r24	; 48
    13b8:	08 95       	ret

000013ba <USART_init>:
 */
#include "UART_driver.h"


void USART_init(void){
    UBRR0L = (uint8_t)(BAUD_PRESCALER);
    13ba:	8f e1       	ldi	r24, 0x1F	; 31
    13bc:	89 b9       	out	0x09, r24	; 9
    UBRR0H = (uint8_t)((uint8_t) BAUD_PRESCALER>>8);
    13be:	10 bc       	out	0x20, r1	; 32
    UCSR0B = (1 << RXEN0)|(1 << TXEN0);
    13c0:	88 e1       	ldi	r24, 0x18	; 24
    13c2:	8a b9       	out	0x0a, r24	; 10
    UCSR0C = (1 << URSEL0)|(1 << USBS0)|(3 << UCSZ00);
    13c4:	8e e8       	ldi	r24, 0x8E	; 142
    13c6:	80 bd       	out	0x20, r24	; 32
    13c8:	08 95       	ret

000013ca <USART_receive>:
}

unsigned char USART_receive(void){
    while(!(UCSR0A & (1 << RXC0)));
    13ca:	5f 9b       	sbis	0x0b, 7	; 11
    13cc:	fe cf       	rjmp	.-4      	; 0x13ca <USART_receive>
    return UDR0;
    13ce:	8c b1       	in	r24, 0x0c	; 12
}
    13d0:	08 95       	ret

000013d2 <USART_send>:

void USART_send( unsigned char data){
    while(!(UCSR0A & (1 << UDRE0)));
    13d2:	5d 9b       	sbis	0x0b, 5	; 11
    13d4:	fe cf       	rjmp	.-4      	; 0x13d2 <USART_send>
    UDR0 = data;
    13d6:	8c b9       	out	0x0c, r24	; 12
    13d8:	08 95       	ret

000013da <__subsf3>:
    13da:	50 58       	subi	r21, 0x80	; 128

000013dc <__addsf3>:
    13dc:	bb 27       	eor	r27, r27
    13de:	aa 27       	eor	r26, r26
    13e0:	0e 94 05 0a 	call	0x140a	; 0x140a <__addsf3x>
    13e4:	0c 94 18 0c 	jmp	0x1830	; 0x1830 <__fp_round>
    13e8:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__fp_pscA>
    13ec:	38 f0       	brcs	.+14     	; 0x13fc <__addsf3+0x20>
    13ee:	0e 94 11 0c 	call	0x1822	; 0x1822 <__fp_pscB>
    13f2:	20 f0       	brcs	.+8      	; 0x13fc <__addsf3+0x20>
    13f4:	39 f4       	brne	.+14     	; 0x1404 <__addsf3+0x28>
    13f6:	9f 3f       	cpi	r25, 0xFF	; 255
    13f8:	19 f4       	brne	.+6      	; 0x1400 <__addsf3+0x24>
    13fa:	26 f4       	brtc	.+8      	; 0x1404 <__addsf3+0x28>
    13fc:	0c 94 e0 0b 	jmp	0x17c0	; 0x17c0 <__fp_nan>
    1400:	0e f4       	brtc	.+2      	; 0x1404 <__addsf3+0x28>
    1402:	e0 95       	com	r30
    1404:	e7 fb       	bst	r30, 7
    1406:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__fp_inf>

0000140a <__addsf3x>:
    140a:	e9 2f       	mov	r30, r25
    140c:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fp_split3>
    1410:	58 f3       	brcs	.-42     	; 0x13e8 <__addsf3+0xc>
    1412:	ba 17       	cp	r27, r26
    1414:	62 07       	cpc	r22, r18
    1416:	73 07       	cpc	r23, r19
    1418:	84 07       	cpc	r24, r20
    141a:	95 07       	cpc	r25, r21
    141c:	20 f0       	brcs	.+8      	; 0x1426 <__addsf3x+0x1c>
    141e:	79 f4       	brne	.+30     	; 0x143e <__addsf3x+0x34>
    1420:	a6 f5       	brtc	.+104    	; 0x148a <__addsf3x+0x80>
    1422:	0c 94 4b 0c 	jmp	0x1896	; 0x1896 <__fp_zero>
    1426:	0e f4       	brtc	.+2      	; 0x142a <__addsf3x+0x20>
    1428:	e0 95       	com	r30
    142a:	0b 2e       	mov	r0, r27
    142c:	ba 2f       	mov	r27, r26
    142e:	a0 2d       	mov	r26, r0
    1430:	0b 01       	movw	r0, r22
    1432:	b9 01       	movw	r22, r18
    1434:	90 01       	movw	r18, r0
    1436:	0c 01       	movw	r0, r24
    1438:	ca 01       	movw	r24, r20
    143a:	a0 01       	movw	r20, r0
    143c:	11 24       	eor	r1, r1
    143e:	ff 27       	eor	r31, r31
    1440:	59 1b       	sub	r21, r25
    1442:	99 f0       	breq	.+38     	; 0x146a <__addsf3x+0x60>
    1444:	59 3f       	cpi	r21, 0xF9	; 249
    1446:	50 f4       	brcc	.+20     	; 0x145c <__addsf3x+0x52>
    1448:	50 3e       	cpi	r21, 0xE0	; 224
    144a:	68 f1       	brcs	.+90     	; 0x14a6 <__addsf3x+0x9c>
    144c:	1a 16       	cp	r1, r26
    144e:	f0 40       	sbci	r31, 0x00	; 0
    1450:	a2 2f       	mov	r26, r18
    1452:	23 2f       	mov	r18, r19
    1454:	34 2f       	mov	r19, r20
    1456:	44 27       	eor	r20, r20
    1458:	58 5f       	subi	r21, 0xF8	; 248
    145a:	f3 cf       	rjmp	.-26     	; 0x1442 <__addsf3x+0x38>
    145c:	46 95       	lsr	r20
    145e:	37 95       	ror	r19
    1460:	27 95       	ror	r18
    1462:	a7 95       	ror	r26
    1464:	f0 40       	sbci	r31, 0x00	; 0
    1466:	53 95       	inc	r21
    1468:	c9 f7       	brne	.-14     	; 0x145c <__addsf3x+0x52>
    146a:	7e f4       	brtc	.+30     	; 0x148a <__addsf3x+0x80>
    146c:	1f 16       	cp	r1, r31
    146e:	ba 0b       	sbc	r27, r26
    1470:	62 0b       	sbc	r22, r18
    1472:	73 0b       	sbc	r23, r19
    1474:	84 0b       	sbc	r24, r20
    1476:	ba f0       	brmi	.+46     	; 0x14a6 <__addsf3x+0x9c>
    1478:	91 50       	subi	r25, 0x01	; 1
    147a:	a1 f0       	breq	.+40     	; 0x14a4 <__addsf3x+0x9a>
    147c:	ff 0f       	add	r31, r31
    147e:	bb 1f       	adc	r27, r27
    1480:	66 1f       	adc	r22, r22
    1482:	77 1f       	adc	r23, r23
    1484:	88 1f       	adc	r24, r24
    1486:	c2 f7       	brpl	.-16     	; 0x1478 <__addsf3x+0x6e>
    1488:	0e c0       	rjmp	.+28     	; 0x14a6 <__addsf3x+0x9c>
    148a:	ba 0f       	add	r27, r26
    148c:	62 1f       	adc	r22, r18
    148e:	73 1f       	adc	r23, r19
    1490:	84 1f       	adc	r24, r20
    1492:	48 f4       	brcc	.+18     	; 0x14a6 <__addsf3x+0x9c>
    1494:	87 95       	ror	r24
    1496:	77 95       	ror	r23
    1498:	67 95       	ror	r22
    149a:	b7 95       	ror	r27
    149c:	f7 95       	ror	r31
    149e:	9e 3f       	cpi	r25, 0xFE	; 254
    14a0:	08 f0       	brcs	.+2      	; 0x14a4 <__addsf3x+0x9a>
    14a2:	b0 cf       	rjmp	.-160    	; 0x1404 <__addsf3+0x28>
    14a4:	93 95       	inc	r25
    14a6:	88 0f       	add	r24, r24
    14a8:	08 f0       	brcs	.+2      	; 0x14ac <__addsf3x+0xa2>
    14aa:	99 27       	eor	r25, r25
    14ac:	ee 0f       	add	r30, r30
    14ae:	97 95       	ror	r25
    14b0:	87 95       	ror	r24
    14b2:	08 95       	ret
    14b4:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__fp_pscA>
    14b8:	60 f0       	brcs	.+24     	; 0x14d2 <__addsf3x+0xc8>
    14ba:	80 e8       	ldi	r24, 0x80	; 128
    14bc:	91 e0       	ldi	r25, 0x01	; 1
    14be:	09 f4       	brne	.+2      	; 0x14c2 <__addsf3x+0xb8>
    14c0:	9e ef       	ldi	r25, 0xFE	; 254
    14c2:	0e 94 11 0c 	call	0x1822	; 0x1822 <__fp_pscB>
    14c6:	28 f0       	brcs	.+10     	; 0x14d2 <__addsf3x+0xc8>
    14c8:	40 e8       	ldi	r20, 0x80	; 128
    14ca:	51 e0       	ldi	r21, 0x01	; 1
    14cc:	71 f4       	brne	.+28     	; 0x14ea <atan2+0x10>
    14ce:	5e ef       	ldi	r21, 0xFE	; 254
    14d0:	0c c0       	rjmp	.+24     	; 0x14ea <atan2+0x10>
    14d2:	0c 94 e0 0b 	jmp	0x17c0	; 0x17c0 <__fp_nan>
    14d6:	0c 94 4b 0c 	jmp	0x1896	; 0x1896 <__fp_zero>

000014da <atan2>:
    14da:	e9 2f       	mov	r30, r25
    14dc:	e0 78       	andi	r30, 0x80	; 128
    14de:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fp_split3>
    14e2:	40 f3       	brcs	.-48     	; 0x14b4 <__addsf3x+0xaa>
    14e4:	09 2e       	mov	r0, r25
    14e6:	05 2a       	or	r0, r21
    14e8:	b1 f3       	breq	.-20     	; 0x14d6 <__addsf3x+0xcc>
    14ea:	26 17       	cp	r18, r22
    14ec:	37 07       	cpc	r19, r23
    14ee:	48 07       	cpc	r20, r24
    14f0:	59 07       	cpc	r21, r25
    14f2:	38 f0       	brcs	.+14     	; 0x1502 <atan2+0x28>
    14f4:	0e 2e       	mov	r0, r30
    14f6:	07 f8       	bld	r0, 7
    14f8:	e0 25       	eor	r30, r0
    14fa:	69 f0       	breq	.+26     	; 0x1516 <atan2+0x3c>
    14fc:	e0 25       	eor	r30, r0
    14fe:	e0 64       	ori	r30, 0x40	; 64
    1500:	0a c0       	rjmp	.+20     	; 0x1516 <atan2+0x3c>
    1502:	ef 63       	ori	r30, 0x3F	; 63
    1504:	07 f8       	bld	r0, 7
    1506:	00 94       	com	r0
    1508:	07 fa       	bst	r0, 7
    150a:	db 01       	movw	r26, r22
    150c:	b9 01       	movw	r22, r18
    150e:	9d 01       	movw	r18, r26
    1510:	dc 01       	movw	r26, r24
    1512:	ca 01       	movw	r24, r20
    1514:	ad 01       	movw	r20, r26
    1516:	ef 93       	push	r30
    1518:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <__divsf3_pse>
    151c:	0e 94 18 0c 	call	0x1830	; 0x1830 <__fp_round>
    1520:	0e 94 9d 0a 	call	0x153a	; 0x153a <atan>
    1524:	5f 91       	pop	r21
    1526:	55 23       	and	r21, r21
    1528:	39 f0       	breq	.+14     	; 0x1538 <atan2+0x5e>
    152a:	2b ed       	ldi	r18, 0xDB	; 219
    152c:	3f e0       	ldi	r19, 0x0F	; 15
    152e:	49 e4       	ldi	r20, 0x49	; 73
    1530:	50 fd       	sbrc	r21, 0
    1532:	49 ec       	ldi	r20, 0xC9	; 201
    1534:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <__addsf3>
    1538:	08 95       	ret

0000153a <atan>:
    153a:	df 93       	push	r29
    153c:	dd 27       	eor	r29, r29
    153e:	b9 2f       	mov	r27, r25
    1540:	bf 77       	andi	r27, 0x7F	; 127
    1542:	40 e8       	ldi	r20, 0x80	; 128
    1544:	5f e3       	ldi	r21, 0x3F	; 63
    1546:	16 16       	cp	r1, r22
    1548:	17 06       	cpc	r1, r23
    154a:	48 07       	cpc	r20, r24
    154c:	5b 07       	cpc	r21, r27
    154e:	18 f4       	brcc	.+6      	; 0x1556 <atan+0x1c>
    1550:	d9 2f       	mov	r29, r25
    1552:	0e 94 57 0c 	call	0x18ae	; 0x18ae <inverse>
    1556:	9f 93       	push	r25
    1558:	8f 93       	push	r24
    155a:	7f 93       	push	r23
    155c:	6f 93       	push	r22
    155e:	0e 94 cc 0c 	call	0x1998	; 0x1998 <square>
    1562:	e0 e7       	ldi	r30, 0x70	; 112
    1564:	f0 e0       	ldi	r31, 0x00	; 0
    1566:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <__fp_powser>
    156a:	0e 94 18 0c 	call	0x1830	; 0x1830 <__fp_round>
    156e:	2f 91       	pop	r18
    1570:	3f 91       	pop	r19
    1572:	4f 91       	pop	r20
    1574:	5f 91       	pop	r21
    1576:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__mulsf3x>
    157a:	dd 23       	and	r29, r29
    157c:	51 f0       	breq	.+20     	; 0x1592 <atan+0x58>
    157e:	90 58       	subi	r25, 0x80	; 128
    1580:	a2 ea       	ldi	r26, 0xA2	; 162
    1582:	2a ed       	ldi	r18, 0xDA	; 218
    1584:	3f e0       	ldi	r19, 0x0F	; 15
    1586:	49 ec       	ldi	r20, 0xC9	; 201
    1588:	5f e3       	ldi	r21, 0x3F	; 63
    158a:	d0 78       	andi	r29, 0x80	; 128
    158c:	5d 27       	eor	r21, r29
    158e:	0e 94 05 0a 	call	0x140a	; 0x140a <__addsf3x>
    1592:	df 91       	pop	r29
    1594:	0c 94 18 0c 	jmp	0x1830	; 0x1830 <__fp_round>

00001598 <__cmpsf2>:
    1598:	0e 94 b6 0b 	call	0x176c	; 0x176c <__fp_cmp>
    159c:	08 f4       	brcc	.+2      	; 0x15a0 <__cmpsf2+0x8>
    159e:	81 e0       	ldi	r24, 0x01	; 1
    15a0:	08 95       	ret

000015a2 <__divsf3>:
    15a2:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__divsf3x>
    15a6:	0c 94 18 0c 	jmp	0x1830	; 0x1830 <__fp_round>
    15aa:	0e 94 11 0c 	call	0x1822	; 0x1822 <__fp_pscB>
    15ae:	58 f0       	brcs	.+22     	; 0x15c6 <__divsf3+0x24>
    15b0:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__fp_pscA>
    15b4:	40 f0       	brcs	.+16     	; 0x15c6 <__divsf3+0x24>
    15b6:	29 f4       	brne	.+10     	; 0x15c2 <__divsf3+0x20>
    15b8:	5f 3f       	cpi	r21, 0xFF	; 255
    15ba:	29 f0       	breq	.+10     	; 0x15c6 <__divsf3+0x24>
    15bc:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__fp_inf>
    15c0:	51 11       	cpse	r21, r1
    15c2:	0c 94 4c 0c 	jmp	0x1898	; 0x1898 <__fp_szero>
    15c6:	0c 94 e0 0b 	jmp	0x17c0	; 0x17c0 <__fp_nan>

000015ca <__divsf3x>:
    15ca:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fp_split3>
    15ce:	68 f3       	brcs	.-38     	; 0x15aa <__divsf3+0x8>

000015d0 <__divsf3_pse>:
    15d0:	99 23       	and	r25, r25
    15d2:	b1 f3       	breq	.-20     	; 0x15c0 <__divsf3+0x1e>
    15d4:	55 23       	and	r21, r21
    15d6:	91 f3       	breq	.-28     	; 0x15bc <__divsf3+0x1a>
    15d8:	95 1b       	sub	r25, r21
    15da:	55 0b       	sbc	r21, r21
    15dc:	bb 27       	eor	r27, r27
    15de:	aa 27       	eor	r26, r26
    15e0:	62 17       	cp	r22, r18
    15e2:	73 07       	cpc	r23, r19
    15e4:	84 07       	cpc	r24, r20
    15e6:	38 f0       	brcs	.+14     	; 0x15f6 <__divsf3_pse+0x26>
    15e8:	9f 5f       	subi	r25, 0xFF	; 255
    15ea:	5f 4f       	sbci	r21, 0xFF	; 255
    15ec:	22 0f       	add	r18, r18
    15ee:	33 1f       	adc	r19, r19
    15f0:	44 1f       	adc	r20, r20
    15f2:	aa 1f       	adc	r26, r26
    15f4:	a9 f3       	breq	.-22     	; 0x15e0 <__divsf3_pse+0x10>
    15f6:	35 d0       	rcall	.+106    	; 0x1662 <__divsf3_pse+0x92>
    15f8:	0e 2e       	mov	r0, r30
    15fa:	3a f0       	brmi	.+14     	; 0x160a <__divsf3_pse+0x3a>
    15fc:	e0 e8       	ldi	r30, 0x80	; 128
    15fe:	32 d0       	rcall	.+100    	; 0x1664 <__divsf3_pse+0x94>
    1600:	91 50       	subi	r25, 0x01	; 1
    1602:	50 40       	sbci	r21, 0x00	; 0
    1604:	e6 95       	lsr	r30
    1606:	00 1c       	adc	r0, r0
    1608:	ca f7       	brpl	.-14     	; 0x15fc <__divsf3_pse+0x2c>
    160a:	2b d0       	rcall	.+86     	; 0x1662 <__divsf3_pse+0x92>
    160c:	fe 2f       	mov	r31, r30
    160e:	29 d0       	rcall	.+82     	; 0x1662 <__divsf3_pse+0x92>
    1610:	66 0f       	add	r22, r22
    1612:	77 1f       	adc	r23, r23
    1614:	88 1f       	adc	r24, r24
    1616:	bb 1f       	adc	r27, r27
    1618:	26 17       	cp	r18, r22
    161a:	37 07       	cpc	r19, r23
    161c:	48 07       	cpc	r20, r24
    161e:	ab 07       	cpc	r26, r27
    1620:	b0 e8       	ldi	r27, 0x80	; 128
    1622:	09 f0       	breq	.+2      	; 0x1626 <__divsf3_pse+0x56>
    1624:	bb 0b       	sbc	r27, r27
    1626:	80 2d       	mov	r24, r0
    1628:	bf 01       	movw	r22, r30
    162a:	ff 27       	eor	r31, r31
    162c:	93 58       	subi	r25, 0x83	; 131
    162e:	5f 4f       	sbci	r21, 0xFF	; 255
    1630:	3a f0       	brmi	.+14     	; 0x1640 <__divsf3_pse+0x70>
    1632:	9e 3f       	cpi	r25, 0xFE	; 254
    1634:	51 05       	cpc	r21, r1
    1636:	78 f0       	brcs	.+30     	; 0x1656 <__divsf3_pse+0x86>
    1638:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__fp_inf>
    163c:	0c 94 4c 0c 	jmp	0x1898	; 0x1898 <__fp_szero>
    1640:	5f 3f       	cpi	r21, 0xFF	; 255
    1642:	e4 f3       	brlt	.-8      	; 0x163c <__divsf3_pse+0x6c>
    1644:	98 3e       	cpi	r25, 0xE8	; 232
    1646:	d4 f3       	brlt	.-12     	; 0x163c <__divsf3_pse+0x6c>
    1648:	86 95       	lsr	r24
    164a:	77 95       	ror	r23
    164c:	67 95       	ror	r22
    164e:	b7 95       	ror	r27
    1650:	f7 95       	ror	r31
    1652:	9f 5f       	subi	r25, 0xFF	; 255
    1654:	c9 f7       	brne	.-14     	; 0x1648 <__divsf3_pse+0x78>
    1656:	88 0f       	add	r24, r24
    1658:	91 1d       	adc	r25, r1
    165a:	96 95       	lsr	r25
    165c:	87 95       	ror	r24
    165e:	97 f9       	bld	r25, 7
    1660:	08 95       	ret
    1662:	e1 e0       	ldi	r30, 0x01	; 1
    1664:	66 0f       	add	r22, r22
    1666:	77 1f       	adc	r23, r23
    1668:	88 1f       	adc	r24, r24
    166a:	bb 1f       	adc	r27, r27
    166c:	62 17       	cp	r22, r18
    166e:	73 07       	cpc	r23, r19
    1670:	84 07       	cpc	r24, r20
    1672:	ba 07       	cpc	r27, r26
    1674:	20 f0       	brcs	.+8      	; 0x167e <__divsf3_pse+0xae>
    1676:	62 1b       	sub	r22, r18
    1678:	73 0b       	sbc	r23, r19
    167a:	84 0b       	sbc	r24, r20
    167c:	ba 0b       	sbc	r27, r26
    167e:	ee 1f       	adc	r30, r30
    1680:	88 f7       	brcc	.-30     	; 0x1664 <__divsf3_pse+0x94>
    1682:	e0 95       	com	r30
    1684:	08 95       	ret

00001686 <__fixsfsi>:
    1686:	0e 94 4a 0b 	call	0x1694	; 0x1694 <__fixunssfsi>
    168a:	68 94       	set
    168c:	b1 11       	cpse	r27, r1
    168e:	0c 94 4c 0c 	jmp	0x1898	; 0x1898 <__fp_szero>
    1692:	08 95       	ret

00001694 <__fixunssfsi>:
    1694:	0e 94 31 0c 	call	0x1862	; 0x1862 <__fp_splitA>
    1698:	88 f0       	brcs	.+34     	; 0x16bc <__fixunssfsi+0x28>
    169a:	9f 57       	subi	r25, 0x7F	; 127
    169c:	98 f0       	brcs	.+38     	; 0x16c4 <__fixunssfsi+0x30>
    169e:	b9 2f       	mov	r27, r25
    16a0:	99 27       	eor	r25, r25
    16a2:	b7 51       	subi	r27, 0x17	; 23
    16a4:	b0 f0       	brcs	.+44     	; 0x16d2 <__fixunssfsi+0x3e>
    16a6:	e1 f0       	breq	.+56     	; 0x16e0 <__fixunssfsi+0x4c>
    16a8:	66 0f       	add	r22, r22
    16aa:	77 1f       	adc	r23, r23
    16ac:	88 1f       	adc	r24, r24
    16ae:	99 1f       	adc	r25, r25
    16b0:	1a f0       	brmi	.+6      	; 0x16b8 <__fixunssfsi+0x24>
    16b2:	ba 95       	dec	r27
    16b4:	c9 f7       	brne	.-14     	; 0x16a8 <__fixunssfsi+0x14>
    16b6:	14 c0       	rjmp	.+40     	; 0x16e0 <__fixunssfsi+0x4c>
    16b8:	b1 30       	cpi	r27, 0x01	; 1
    16ba:	91 f0       	breq	.+36     	; 0x16e0 <__fixunssfsi+0x4c>
    16bc:	0e 94 4b 0c 	call	0x1896	; 0x1896 <__fp_zero>
    16c0:	b1 e0       	ldi	r27, 0x01	; 1
    16c2:	08 95       	ret
    16c4:	0c 94 4b 0c 	jmp	0x1896	; 0x1896 <__fp_zero>
    16c8:	67 2f       	mov	r22, r23
    16ca:	78 2f       	mov	r23, r24
    16cc:	88 27       	eor	r24, r24
    16ce:	b8 5f       	subi	r27, 0xF8	; 248
    16d0:	39 f0       	breq	.+14     	; 0x16e0 <__fixunssfsi+0x4c>
    16d2:	b9 3f       	cpi	r27, 0xF9	; 249
    16d4:	cc f3       	brlt	.-14     	; 0x16c8 <__fixunssfsi+0x34>
    16d6:	86 95       	lsr	r24
    16d8:	77 95       	ror	r23
    16da:	67 95       	ror	r22
    16dc:	b3 95       	inc	r27
    16de:	d9 f7       	brne	.-10     	; 0x16d6 <__fixunssfsi+0x42>
    16e0:	3e f4       	brtc	.+14     	; 0x16f0 <__fixunssfsi+0x5c>
    16e2:	90 95       	com	r25
    16e4:	80 95       	com	r24
    16e6:	70 95       	com	r23
    16e8:	61 95       	neg	r22
    16ea:	7f 4f       	sbci	r23, 0xFF	; 255
    16ec:	8f 4f       	sbci	r24, 0xFF	; 255
    16ee:	9f 4f       	sbci	r25, 0xFF	; 255
    16f0:	08 95       	ret

000016f2 <__floatunsisf>:
    16f2:	e8 94       	clt
    16f4:	09 c0       	rjmp	.+18     	; 0x1708 <__floatsisf+0x12>

000016f6 <__floatsisf>:
    16f6:	97 fb       	bst	r25, 7
    16f8:	3e f4       	brtc	.+14     	; 0x1708 <__floatsisf+0x12>
    16fa:	90 95       	com	r25
    16fc:	80 95       	com	r24
    16fe:	70 95       	com	r23
    1700:	61 95       	neg	r22
    1702:	7f 4f       	sbci	r23, 0xFF	; 255
    1704:	8f 4f       	sbci	r24, 0xFF	; 255
    1706:	9f 4f       	sbci	r25, 0xFF	; 255
    1708:	99 23       	and	r25, r25
    170a:	a9 f0       	breq	.+42     	; 0x1736 <__floatsisf+0x40>
    170c:	f9 2f       	mov	r31, r25
    170e:	96 e9       	ldi	r25, 0x96	; 150
    1710:	bb 27       	eor	r27, r27
    1712:	93 95       	inc	r25
    1714:	f6 95       	lsr	r31
    1716:	87 95       	ror	r24
    1718:	77 95       	ror	r23
    171a:	67 95       	ror	r22
    171c:	b7 95       	ror	r27
    171e:	f1 11       	cpse	r31, r1
    1720:	f8 cf       	rjmp	.-16     	; 0x1712 <__floatsisf+0x1c>
    1722:	fa f4       	brpl	.+62     	; 0x1762 <__floatsisf+0x6c>
    1724:	bb 0f       	add	r27, r27
    1726:	11 f4       	brne	.+4      	; 0x172c <__floatsisf+0x36>
    1728:	60 ff       	sbrs	r22, 0
    172a:	1b c0       	rjmp	.+54     	; 0x1762 <__floatsisf+0x6c>
    172c:	6f 5f       	subi	r22, 0xFF	; 255
    172e:	7f 4f       	sbci	r23, 0xFF	; 255
    1730:	8f 4f       	sbci	r24, 0xFF	; 255
    1732:	9f 4f       	sbci	r25, 0xFF	; 255
    1734:	16 c0       	rjmp	.+44     	; 0x1762 <__floatsisf+0x6c>
    1736:	88 23       	and	r24, r24
    1738:	11 f0       	breq	.+4      	; 0x173e <__floatsisf+0x48>
    173a:	96 e9       	ldi	r25, 0x96	; 150
    173c:	11 c0       	rjmp	.+34     	; 0x1760 <__floatsisf+0x6a>
    173e:	77 23       	and	r23, r23
    1740:	21 f0       	breq	.+8      	; 0x174a <__floatsisf+0x54>
    1742:	9e e8       	ldi	r25, 0x8E	; 142
    1744:	87 2f       	mov	r24, r23
    1746:	76 2f       	mov	r23, r22
    1748:	05 c0       	rjmp	.+10     	; 0x1754 <__floatsisf+0x5e>
    174a:	66 23       	and	r22, r22
    174c:	71 f0       	breq	.+28     	; 0x176a <__floatsisf+0x74>
    174e:	96 e8       	ldi	r25, 0x86	; 134
    1750:	86 2f       	mov	r24, r22
    1752:	70 e0       	ldi	r23, 0x00	; 0
    1754:	60 e0       	ldi	r22, 0x00	; 0
    1756:	2a f0       	brmi	.+10     	; 0x1762 <__floatsisf+0x6c>
    1758:	9a 95       	dec	r25
    175a:	66 0f       	add	r22, r22
    175c:	77 1f       	adc	r23, r23
    175e:	88 1f       	adc	r24, r24
    1760:	da f7       	brpl	.-10     	; 0x1758 <__floatsisf+0x62>
    1762:	88 0f       	add	r24, r24
    1764:	96 95       	lsr	r25
    1766:	87 95       	ror	r24
    1768:	97 f9       	bld	r25, 7
    176a:	08 95       	ret

0000176c <__fp_cmp>:
    176c:	99 0f       	add	r25, r25
    176e:	00 08       	sbc	r0, r0
    1770:	55 0f       	add	r21, r21
    1772:	aa 0b       	sbc	r26, r26
    1774:	e0 e8       	ldi	r30, 0x80	; 128
    1776:	fe ef       	ldi	r31, 0xFE	; 254
    1778:	16 16       	cp	r1, r22
    177a:	17 06       	cpc	r1, r23
    177c:	e8 07       	cpc	r30, r24
    177e:	f9 07       	cpc	r31, r25
    1780:	c0 f0       	brcs	.+48     	; 0x17b2 <__fp_cmp+0x46>
    1782:	12 16       	cp	r1, r18
    1784:	13 06       	cpc	r1, r19
    1786:	e4 07       	cpc	r30, r20
    1788:	f5 07       	cpc	r31, r21
    178a:	98 f0       	brcs	.+38     	; 0x17b2 <__fp_cmp+0x46>
    178c:	62 1b       	sub	r22, r18
    178e:	73 0b       	sbc	r23, r19
    1790:	84 0b       	sbc	r24, r20
    1792:	95 0b       	sbc	r25, r21
    1794:	39 f4       	brne	.+14     	; 0x17a4 <__fp_cmp+0x38>
    1796:	0a 26       	eor	r0, r26
    1798:	61 f0       	breq	.+24     	; 0x17b2 <__fp_cmp+0x46>
    179a:	23 2b       	or	r18, r19
    179c:	24 2b       	or	r18, r20
    179e:	25 2b       	or	r18, r21
    17a0:	21 f4       	brne	.+8      	; 0x17aa <__fp_cmp+0x3e>
    17a2:	08 95       	ret
    17a4:	0a 26       	eor	r0, r26
    17a6:	09 f4       	brne	.+2      	; 0x17aa <__fp_cmp+0x3e>
    17a8:	a1 40       	sbci	r26, 0x01	; 1
    17aa:	a6 95       	lsr	r26
    17ac:	8f ef       	ldi	r24, 0xFF	; 255
    17ae:	81 1d       	adc	r24, r1
    17b0:	81 1d       	adc	r24, r1
    17b2:	08 95       	ret

000017b4 <__fp_inf>:
    17b4:	97 f9       	bld	r25, 7
    17b6:	9f 67       	ori	r25, 0x7F	; 127
    17b8:	80 e8       	ldi	r24, 0x80	; 128
    17ba:	70 e0       	ldi	r23, 0x00	; 0
    17bc:	60 e0       	ldi	r22, 0x00	; 0
    17be:	08 95       	ret

000017c0 <__fp_nan>:
    17c0:	9f ef       	ldi	r25, 0xFF	; 255
    17c2:	80 ec       	ldi	r24, 0xC0	; 192
    17c4:	08 95       	ret

000017c6 <__fp_powser>:
    17c6:	df 93       	push	r29
    17c8:	cf 93       	push	r28
    17ca:	1f 93       	push	r17
    17cc:	0f 93       	push	r16
    17ce:	ff 92       	push	r15
    17d0:	ef 92       	push	r14
    17d2:	df 92       	push	r13
    17d4:	7b 01       	movw	r14, r22
    17d6:	8c 01       	movw	r16, r24
    17d8:	68 94       	set
    17da:	06 c0       	rjmp	.+12     	; 0x17e8 <__fp_powser+0x22>
    17dc:	da 2e       	mov	r13, r26
    17de:	ef 01       	movw	r28, r30
    17e0:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__mulsf3x>
    17e4:	fe 01       	movw	r30, r28
    17e6:	e8 94       	clt
    17e8:	a5 91       	lpm	r26, Z+
    17ea:	25 91       	lpm	r18, Z+
    17ec:	35 91       	lpm	r19, Z+
    17ee:	45 91       	lpm	r20, Z+
    17f0:	55 91       	lpm	r21, Z+
    17f2:	a6 f3       	brts	.-24     	; 0x17dc <__fp_powser+0x16>
    17f4:	ef 01       	movw	r28, r30
    17f6:	0e 94 05 0a 	call	0x140a	; 0x140a <__addsf3x>
    17fa:	fe 01       	movw	r30, r28
    17fc:	97 01       	movw	r18, r14
    17fe:	a8 01       	movw	r20, r16
    1800:	da 94       	dec	r13
    1802:	69 f7       	brne	.-38     	; 0x17de <__fp_powser+0x18>
    1804:	df 90       	pop	r13
    1806:	ef 90       	pop	r14
    1808:	ff 90       	pop	r15
    180a:	0f 91       	pop	r16
    180c:	1f 91       	pop	r17
    180e:	cf 91       	pop	r28
    1810:	df 91       	pop	r29
    1812:	08 95       	ret

00001814 <__fp_pscA>:
    1814:	00 24       	eor	r0, r0
    1816:	0a 94       	dec	r0
    1818:	16 16       	cp	r1, r22
    181a:	17 06       	cpc	r1, r23
    181c:	18 06       	cpc	r1, r24
    181e:	09 06       	cpc	r0, r25
    1820:	08 95       	ret

00001822 <__fp_pscB>:
    1822:	00 24       	eor	r0, r0
    1824:	0a 94       	dec	r0
    1826:	12 16       	cp	r1, r18
    1828:	13 06       	cpc	r1, r19
    182a:	14 06       	cpc	r1, r20
    182c:	05 06       	cpc	r0, r21
    182e:	08 95       	ret

00001830 <__fp_round>:
    1830:	09 2e       	mov	r0, r25
    1832:	03 94       	inc	r0
    1834:	00 0c       	add	r0, r0
    1836:	11 f4       	brne	.+4      	; 0x183c <__fp_round+0xc>
    1838:	88 23       	and	r24, r24
    183a:	52 f0       	brmi	.+20     	; 0x1850 <__fp_round+0x20>
    183c:	bb 0f       	add	r27, r27
    183e:	40 f4       	brcc	.+16     	; 0x1850 <__fp_round+0x20>
    1840:	bf 2b       	or	r27, r31
    1842:	11 f4       	brne	.+4      	; 0x1848 <__fp_round+0x18>
    1844:	60 ff       	sbrs	r22, 0
    1846:	04 c0       	rjmp	.+8      	; 0x1850 <__fp_round+0x20>
    1848:	6f 5f       	subi	r22, 0xFF	; 255
    184a:	7f 4f       	sbci	r23, 0xFF	; 255
    184c:	8f 4f       	sbci	r24, 0xFF	; 255
    184e:	9f 4f       	sbci	r25, 0xFF	; 255
    1850:	08 95       	ret

00001852 <__fp_split3>:
    1852:	57 fd       	sbrc	r21, 7
    1854:	90 58       	subi	r25, 0x80	; 128
    1856:	44 0f       	add	r20, r20
    1858:	55 1f       	adc	r21, r21
    185a:	59 f0       	breq	.+22     	; 0x1872 <__fp_splitA+0x10>
    185c:	5f 3f       	cpi	r21, 0xFF	; 255
    185e:	71 f0       	breq	.+28     	; 0x187c <__fp_splitA+0x1a>
    1860:	47 95       	ror	r20

00001862 <__fp_splitA>:
    1862:	88 0f       	add	r24, r24
    1864:	97 fb       	bst	r25, 7
    1866:	99 1f       	adc	r25, r25
    1868:	61 f0       	breq	.+24     	; 0x1882 <__fp_splitA+0x20>
    186a:	9f 3f       	cpi	r25, 0xFF	; 255
    186c:	79 f0       	breq	.+30     	; 0x188c <__fp_splitA+0x2a>
    186e:	87 95       	ror	r24
    1870:	08 95       	ret
    1872:	12 16       	cp	r1, r18
    1874:	13 06       	cpc	r1, r19
    1876:	14 06       	cpc	r1, r20
    1878:	55 1f       	adc	r21, r21
    187a:	f2 cf       	rjmp	.-28     	; 0x1860 <__fp_split3+0xe>
    187c:	46 95       	lsr	r20
    187e:	f1 df       	rcall	.-30     	; 0x1862 <__fp_splitA>
    1880:	08 c0       	rjmp	.+16     	; 0x1892 <__fp_splitA+0x30>
    1882:	16 16       	cp	r1, r22
    1884:	17 06       	cpc	r1, r23
    1886:	18 06       	cpc	r1, r24
    1888:	99 1f       	adc	r25, r25
    188a:	f1 cf       	rjmp	.-30     	; 0x186e <__fp_splitA+0xc>
    188c:	86 95       	lsr	r24
    188e:	71 05       	cpc	r23, r1
    1890:	61 05       	cpc	r22, r1
    1892:	08 94       	sec
    1894:	08 95       	ret

00001896 <__fp_zero>:
    1896:	e8 94       	clt

00001898 <__fp_szero>:
    1898:	bb 27       	eor	r27, r27
    189a:	66 27       	eor	r22, r22
    189c:	77 27       	eor	r23, r23
    189e:	cb 01       	movw	r24, r22
    18a0:	97 f9       	bld	r25, 7
    18a2:	08 95       	ret

000018a4 <__gesf2>:
    18a4:	0e 94 b6 0b 	call	0x176c	; 0x176c <__fp_cmp>
    18a8:	08 f4       	brcc	.+2      	; 0x18ac <__gesf2+0x8>
    18aa:	8f ef       	ldi	r24, 0xFF	; 255
    18ac:	08 95       	ret

000018ae <inverse>:
    18ae:	9b 01       	movw	r18, r22
    18b0:	ac 01       	movw	r20, r24
    18b2:	60 e0       	ldi	r22, 0x00	; 0
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	80 e8       	ldi	r24, 0x80	; 128
    18b8:	9f e3       	ldi	r25, 0x3F	; 63
    18ba:	0c 94 d1 0a 	jmp	0x15a2	; 0x15a2 <__divsf3>

000018be <__mulsf3>:
    18be:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__mulsf3x>
    18c2:	0c 94 18 0c 	jmp	0x1830	; 0x1830 <__fp_round>
    18c6:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__fp_pscA>
    18ca:	38 f0       	brcs	.+14     	; 0x18da <__mulsf3+0x1c>
    18cc:	0e 94 11 0c 	call	0x1822	; 0x1822 <__fp_pscB>
    18d0:	20 f0       	brcs	.+8      	; 0x18da <__mulsf3+0x1c>
    18d2:	95 23       	and	r25, r21
    18d4:	11 f0       	breq	.+4      	; 0x18da <__mulsf3+0x1c>
    18d6:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__fp_inf>
    18da:	0c 94 e0 0b 	jmp	0x17c0	; 0x17c0 <__fp_nan>
    18de:	11 24       	eor	r1, r1
    18e0:	0c 94 4c 0c 	jmp	0x1898	; 0x1898 <__fp_szero>

000018e4 <__mulsf3x>:
    18e4:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fp_split3>
    18e8:	70 f3       	brcs	.-36     	; 0x18c6 <__mulsf3+0x8>

000018ea <__mulsf3_pse>:
    18ea:	95 9f       	mul	r25, r21
    18ec:	c1 f3       	breq	.-16     	; 0x18de <__mulsf3+0x20>
    18ee:	95 0f       	add	r25, r21
    18f0:	50 e0       	ldi	r21, 0x00	; 0
    18f2:	55 1f       	adc	r21, r21
    18f4:	62 9f       	mul	r22, r18
    18f6:	f0 01       	movw	r30, r0
    18f8:	72 9f       	mul	r23, r18
    18fa:	bb 27       	eor	r27, r27
    18fc:	f0 0d       	add	r31, r0
    18fe:	b1 1d       	adc	r27, r1
    1900:	63 9f       	mul	r22, r19
    1902:	aa 27       	eor	r26, r26
    1904:	f0 0d       	add	r31, r0
    1906:	b1 1d       	adc	r27, r1
    1908:	aa 1f       	adc	r26, r26
    190a:	64 9f       	mul	r22, r20
    190c:	66 27       	eor	r22, r22
    190e:	b0 0d       	add	r27, r0
    1910:	a1 1d       	adc	r26, r1
    1912:	66 1f       	adc	r22, r22
    1914:	82 9f       	mul	r24, r18
    1916:	22 27       	eor	r18, r18
    1918:	b0 0d       	add	r27, r0
    191a:	a1 1d       	adc	r26, r1
    191c:	62 1f       	adc	r22, r18
    191e:	73 9f       	mul	r23, r19
    1920:	b0 0d       	add	r27, r0
    1922:	a1 1d       	adc	r26, r1
    1924:	62 1f       	adc	r22, r18
    1926:	83 9f       	mul	r24, r19
    1928:	a0 0d       	add	r26, r0
    192a:	61 1d       	adc	r22, r1
    192c:	22 1f       	adc	r18, r18
    192e:	74 9f       	mul	r23, r20
    1930:	33 27       	eor	r19, r19
    1932:	a0 0d       	add	r26, r0
    1934:	61 1d       	adc	r22, r1
    1936:	23 1f       	adc	r18, r19
    1938:	84 9f       	mul	r24, r20
    193a:	60 0d       	add	r22, r0
    193c:	21 1d       	adc	r18, r1
    193e:	82 2f       	mov	r24, r18
    1940:	76 2f       	mov	r23, r22
    1942:	6a 2f       	mov	r22, r26
    1944:	11 24       	eor	r1, r1
    1946:	9f 57       	subi	r25, 0x7F	; 127
    1948:	50 40       	sbci	r21, 0x00	; 0
    194a:	9a f0       	brmi	.+38     	; 0x1972 <__mulsf3_pse+0x88>
    194c:	f1 f0       	breq	.+60     	; 0x198a <__mulsf3_pse+0xa0>
    194e:	88 23       	and	r24, r24
    1950:	4a f0       	brmi	.+18     	; 0x1964 <__mulsf3_pse+0x7a>
    1952:	ee 0f       	add	r30, r30
    1954:	ff 1f       	adc	r31, r31
    1956:	bb 1f       	adc	r27, r27
    1958:	66 1f       	adc	r22, r22
    195a:	77 1f       	adc	r23, r23
    195c:	88 1f       	adc	r24, r24
    195e:	91 50       	subi	r25, 0x01	; 1
    1960:	50 40       	sbci	r21, 0x00	; 0
    1962:	a9 f7       	brne	.-22     	; 0x194e <__mulsf3_pse+0x64>
    1964:	9e 3f       	cpi	r25, 0xFE	; 254
    1966:	51 05       	cpc	r21, r1
    1968:	80 f0       	brcs	.+32     	; 0x198a <__mulsf3_pse+0xa0>
    196a:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__fp_inf>
    196e:	0c 94 4c 0c 	jmp	0x1898	; 0x1898 <__fp_szero>
    1972:	5f 3f       	cpi	r21, 0xFF	; 255
    1974:	e4 f3       	brlt	.-8      	; 0x196e <__mulsf3_pse+0x84>
    1976:	98 3e       	cpi	r25, 0xE8	; 232
    1978:	d4 f3       	brlt	.-12     	; 0x196e <__mulsf3_pse+0x84>
    197a:	86 95       	lsr	r24
    197c:	77 95       	ror	r23
    197e:	67 95       	ror	r22
    1980:	b7 95       	ror	r27
    1982:	f7 95       	ror	r31
    1984:	e7 95       	ror	r30
    1986:	9f 5f       	subi	r25, 0xFF	; 255
    1988:	c1 f7       	brne	.-16     	; 0x197a <__mulsf3_pse+0x90>
    198a:	fe 2b       	or	r31, r30
    198c:	88 0f       	add	r24, r24
    198e:	91 1d       	adc	r25, r1
    1990:	96 95       	lsr	r25
    1992:	87 95       	ror	r24
    1994:	97 f9       	bld	r25, 7
    1996:	08 95       	ret

00001998 <square>:
    1998:	9b 01       	movw	r18, r22
    199a:	ac 01       	movw	r20, r24
    199c:	0c 94 5f 0c 	jmp	0x18be	; 0x18be <__mulsf3>

000019a0 <strcpy>:
    19a0:	fb 01       	movw	r30, r22
    19a2:	dc 01       	movw	r26, r24
    19a4:	01 90       	ld	r0, Z+
    19a6:	0d 92       	st	X+, r0
    19a8:	00 20       	and	r0, r0
    19aa:	e1 f7       	brne	.-8      	; 0x19a4 <strcpy+0x4>
    19ac:	08 95       	ret

000019ae <__itoa_ncheck>:
    19ae:	bb 27       	eor	r27, r27
    19b0:	4a 30       	cpi	r20, 0x0A	; 10
    19b2:	31 f4       	brne	.+12     	; 0x19c0 <__itoa_ncheck+0x12>
    19b4:	99 23       	and	r25, r25
    19b6:	22 f4       	brpl	.+8      	; 0x19c0 <__itoa_ncheck+0x12>
    19b8:	bd e2       	ldi	r27, 0x2D	; 45
    19ba:	90 95       	com	r25
    19bc:	81 95       	neg	r24
    19be:	9f 4f       	sbci	r25, 0xFF	; 255
    19c0:	0c 94 e3 0c 	jmp	0x19c6	; 0x19c6 <__utoa_common>

000019c4 <__utoa_ncheck>:
    19c4:	bb 27       	eor	r27, r27

000019c6 <__utoa_common>:
    19c6:	fb 01       	movw	r30, r22
    19c8:	55 27       	eor	r21, r21
    19ca:	aa 27       	eor	r26, r26
    19cc:	88 0f       	add	r24, r24
    19ce:	99 1f       	adc	r25, r25
    19d0:	aa 1f       	adc	r26, r26
    19d2:	a4 17       	cp	r26, r20
    19d4:	10 f0       	brcs	.+4      	; 0x19da <__utoa_common+0x14>
    19d6:	a4 1b       	sub	r26, r20
    19d8:	83 95       	inc	r24
    19da:	50 51       	subi	r21, 0x10	; 16
    19dc:	b9 f7       	brne	.-18     	; 0x19cc <__utoa_common+0x6>
    19de:	a0 5d       	subi	r26, 0xD0	; 208
    19e0:	aa 33       	cpi	r26, 0x3A	; 58
    19e2:	08 f0       	brcs	.+2      	; 0x19e6 <__utoa_common+0x20>
    19e4:	a9 5d       	subi	r26, 0xD9	; 217
    19e6:	a1 93       	st	Z+, r26
    19e8:	00 97       	sbiw	r24, 0x00	; 0
    19ea:	79 f7       	brne	.-34     	; 0x19ca <__utoa_common+0x4>
    19ec:	b1 11       	cpse	r27, r1
    19ee:	b1 93       	st	Z+, r27
    19f0:	11 92       	st	Z+, r1
    19f2:	cb 01       	movw	r24, r22
    19f4:	0c 94 c8 10 	jmp	0x2190	; 0x2190 <strrev>

000019f8 <fdevopen>:
    19f8:	0f 93       	push	r16
    19fa:	1f 93       	push	r17
    19fc:	cf 93       	push	r28
    19fe:	df 93       	push	r29
    1a00:	00 97       	sbiw	r24, 0x00	; 0
    1a02:	31 f4       	brne	.+12     	; 0x1a10 <fdevopen+0x18>
    1a04:	61 15       	cp	r22, r1
    1a06:	71 05       	cpc	r23, r1
    1a08:	19 f4       	brne	.+6      	; 0x1a10 <fdevopen+0x18>
    1a0a:	80 e0       	ldi	r24, 0x00	; 0
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	3a c0       	rjmp	.+116    	; 0x1a84 <fdevopen+0x8c>
    1a10:	8b 01       	movw	r16, r22
    1a12:	ec 01       	movw	r28, r24
    1a14:	6e e0       	ldi	r22, 0x0E	; 14
    1a16:	70 e0       	ldi	r23, 0x00	; 0
    1a18:	81 e0       	ldi	r24, 0x01	; 1
    1a1a:	90 e0       	ldi	r25, 0x00	; 0
    1a1c:	0e 94 6e 0f 	call	0x1edc	; 0x1edc <calloc>
    1a20:	fc 01       	movw	r30, r24
    1a22:	89 2b       	or	r24, r25
    1a24:	91 f3       	breq	.-28     	; 0x1a0a <fdevopen+0x12>
    1a26:	80 e8       	ldi	r24, 0x80	; 128
    1a28:	83 83       	std	Z+3, r24	; 0x03
    1a2a:	01 15       	cp	r16, r1
    1a2c:	11 05       	cpc	r17, r1
    1a2e:	71 f0       	breq	.+28     	; 0x1a4c <fdevopen+0x54>
    1a30:	13 87       	std	Z+11, r17	; 0x0b
    1a32:	02 87       	std	Z+10, r16	; 0x0a
    1a34:	81 e8       	ldi	r24, 0x81	; 129
    1a36:	83 83       	std	Z+3, r24	; 0x03
    1a38:	80 91 f6 02 	lds	r24, 0x02F6	; 0x8002f6 <__iob>
    1a3c:	90 91 f7 02 	lds	r25, 0x02F7	; 0x8002f7 <__iob+0x1>
    1a40:	89 2b       	or	r24, r25
    1a42:	21 f4       	brne	.+8      	; 0x1a4c <fdevopen+0x54>
    1a44:	f0 93 f7 02 	sts	0x02F7, r31	; 0x8002f7 <__iob+0x1>
    1a48:	e0 93 f6 02 	sts	0x02F6, r30	; 0x8002f6 <__iob>
    1a4c:	20 97       	sbiw	r28, 0x00	; 0
    1a4e:	c9 f0       	breq	.+50     	; 0x1a82 <fdevopen+0x8a>
    1a50:	d1 87       	std	Z+9, r29	; 0x09
    1a52:	c0 87       	std	Z+8, r28	; 0x08
    1a54:	83 81       	ldd	r24, Z+3	; 0x03
    1a56:	82 60       	ori	r24, 0x02	; 2
    1a58:	83 83       	std	Z+3, r24	; 0x03
    1a5a:	80 91 f8 02 	lds	r24, 0x02F8	; 0x8002f8 <__iob+0x2>
    1a5e:	90 91 f9 02 	lds	r25, 0x02F9	; 0x8002f9 <__iob+0x3>
    1a62:	89 2b       	or	r24, r25
    1a64:	71 f4       	brne	.+28     	; 0x1a82 <fdevopen+0x8a>
    1a66:	f0 93 f9 02 	sts	0x02F9, r31	; 0x8002f9 <__iob+0x3>
    1a6a:	e0 93 f8 02 	sts	0x02F8, r30	; 0x8002f8 <__iob+0x2>
    1a6e:	80 91 fa 02 	lds	r24, 0x02FA	; 0x8002fa <__iob+0x4>
    1a72:	90 91 fb 02 	lds	r25, 0x02FB	; 0x8002fb <__iob+0x5>
    1a76:	89 2b       	or	r24, r25
    1a78:	21 f4       	brne	.+8      	; 0x1a82 <fdevopen+0x8a>
    1a7a:	f0 93 fb 02 	sts	0x02FB, r31	; 0x8002fb <__iob+0x5>
    1a7e:	e0 93 fa 02 	sts	0x02FA, r30	; 0x8002fa <__iob+0x4>
    1a82:	cf 01       	movw	r24, r30
    1a84:	df 91       	pop	r29
    1a86:	cf 91       	pop	r28
    1a88:	1f 91       	pop	r17
    1a8a:	0f 91       	pop	r16
    1a8c:	08 95       	ret

00001a8e <printf>:
    1a8e:	a0 e0       	ldi	r26, 0x00	; 0
    1a90:	b0 e0       	ldi	r27, 0x00	; 0
    1a92:	ed e4       	ldi	r30, 0x4D	; 77
    1a94:	fd e0       	ldi	r31, 0x0D	; 13
    1a96:	0c 94 82 11 	jmp	0x2304	; 0x2304 <__prologue_saves__+0x20>
    1a9a:	ae 01       	movw	r20, r28
    1a9c:	4b 5f       	subi	r20, 0xFB	; 251
    1a9e:	5f 4f       	sbci	r21, 0xFF	; 255
    1aa0:	fa 01       	movw	r30, r20
    1aa2:	61 91       	ld	r22, Z+
    1aa4:	71 91       	ld	r23, Z+
    1aa6:	af 01       	movw	r20, r30
    1aa8:	80 91 f8 02 	lds	r24, 0x02F8	; 0x8002f8 <__iob+0x2>
    1aac:	90 91 f9 02 	lds	r25, 0x02F9	; 0x8002f9 <__iob+0x3>
    1ab0:	0e 94 8d 0d 	call	0x1b1a	; 0x1b1a <vfprintf>
    1ab4:	e2 e0       	ldi	r30, 0x02	; 2
    1ab6:	0c 94 9e 11 	jmp	0x233c	; 0x233c <__epilogue_restores__+0x20>

00001aba <puts>:
    1aba:	0f 93       	push	r16
    1abc:	1f 93       	push	r17
    1abe:	cf 93       	push	r28
    1ac0:	df 93       	push	r29
    1ac2:	e0 91 f8 02 	lds	r30, 0x02F8	; 0x8002f8 <__iob+0x2>
    1ac6:	f0 91 f9 02 	lds	r31, 0x02F9	; 0x8002f9 <__iob+0x3>
    1aca:	23 81       	ldd	r18, Z+3	; 0x03
    1acc:	21 ff       	sbrs	r18, 1
    1ace:	1b c0       	rjmp	.+54     	; 0x1b06 <puts+0x4c>
    1ad0:	8c 01       	movw	r16, r24
    1ad2:	d0 e0       	ldi	r29, 0x00	; 0
    1ad4:	c0 e0       	ldi	r28, 0x00	; 0
    1ad6:	f8 01       	movw	r30, r16
    1ad8:	81 91       	ld	r24, Z+
    1ada:	8f 01       	movw	r16, r30
    1adc:	60 91 f8 02 	lds	r22, 0x02F8	; 0x8002f8 <__iob+0x2>
    1ae0:	70 91 f9 02 	lds	r23, 0x02F9	; 0x8002f9 <__iob+0x3>
    1ae4:	db 01       	movw	r26, r22
    1ae6:	18 96       	adiw	r26, 0x08	; 8
    1ae8:	ed 91       	ld	r30, X+
    1aea:	fc 91       	ld	r31, X
    1aec:	19 97       	sbiw	r26, 0x09	; 9
    1aee:	88 23       	and	r24, r24
    1af0:	31 f0       	breq	.+12     	; 0x1afe <puts+0x44>
    1af2:	09 95       	icall
    1af4:	89 2b       	or	r24, r25
    1af6:	79 f3       	breq	.-34     	; 0x1ad6 <puts+0x1c>
    1af8:	df ef       	ldi	r29, 0xFF	; 255
    1afa:	cf ef       	ldi	r28, 0xFF	; 255
    1afc:	ec cf       	rjmp	.-40     	; 0x1ad6 <puts+0x1c>
    1afe:	8a e0       	ldi	r24, 0x0A	; 10
    1b00:	09 95       	icall
    1b02:	89 2b       	or	r24, r25
    1b04:	19 f0       	breq	.+6      	; 0x1b0c <puts+0x52>
    1b06:	8f ef       	ldi	r24, 0xFF	; 255
    1b08:	9f ef       	ldi	r25, 0xFF	; 255
    1b0a:	02 c0       	rjmp	.+4      	; 0x1b10 <puts+0x56>
    1b0c:	8d 2f       	mov	r24, r29
    1b0e:	9c 2f       	mov	r25, r28
    1b10:	df 91       	pop	r29
    1b12:	cf 91       	pop	r28
    1b14:	1f 91       	pop	r17
    1b16:	0f 91       	pop	r16
    1b18:	08 95       	ret

00001b1a <vfprintf>:
    1b1a:	ab e0       	ldi	r26, 0x0B	; 11
    1b1c:	b0 e0       	ldi	r27, 0x00	; 0
    1b1e:	e3 e9       	ldi	r30, 0x93	; 147
    1b20:	fd e0       	ldi	r31, 0x0D	; 13
    1b22:	0c 94 72 11 	jmp	0x22e4	; 0x22e4 <__prologue_saves__>
    1b26:	6c 01       	movw	r12, r24
    1b28:	7b 01       	movw	r14, r22
    1b2a:	8a 01       	movw	r16, r20
    1b2c:	fc 01       	movw	r30, r24
    1b2e:	17 82       	std	Z+7, r1	; 0x07
    1b30:	16 82       	std	Z+6, r1	; 0x06
    1b32:	83 81       	ldd	r24, Z+3	; 0x03
    1b34:	81 ff       	sbrs	r24, 1
    1b36:	cc c1       	rjmp	.+920    	; 0x1ed0 <vfprintf+0x3b6>
    1b38:	ce 01       	movw	r24, r28
    1b3a:	01 96       	adiw	r24, 0x01	; 1
    1b3c:	3c 01       	movw	r6, r24
    1b3e:	f6 01       	movw	r30, r12
    1b40:	93 81       	ldd	r25, Z+3	; 0x03
    1b42:	f7 01       	movw	r30, r14
    1b44:	93 fd       	sbrc	r25, 3
    1b46:	85 91       	lpm	r24, Z+
    1b48:	93 ff       	sbrs	r25, 3
    1b4a:	81 91       	ld	r24, Z+
    1b4c:	7f 01       	movw	r14, r30
    1b4e:	88 23       	and	r24, r24
    1b50:	09 f4       	brne	.+2      	; 0x1b54 <vfprintf+0x3a>
    1b52:	ba c1       	rjmp	.+884    	; 0x1ec8 <vfprintf+0x3ae>
    1b54:	85 32       	cpi	r24, 0x25	; 37
    1b56:	39 f4       	brne	.+14     	; 0x1b66 <vfprintf+0x4c>
    1b58:	93 fd       	sbrc	r25, 3
    1b5a:	85 91       	lpm	r24, Z+
    1b5c:	93 ff       	sbrs	r25, 3
    1b5e:	81 91       	ld	r24, Z+
    1b60:	7f 01       	movw	r14, r30
    1b62:	85 32       	cpi	r24, 0x25	; 37
    1b64:	29 f4       	brne	.+10     	; 0x1b70 <vfprintf+0x56>
    1b66:	b6 01       	movw	r22, r12
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1b6e:	e7 cf       	rjmp	.-50     	; 0x1b3e <vfprintf+0x24>
    1b70:	91 2c       	mov	r9, r1
    1b72:	21 2c       	mov	r2, r1
    1b74:	31 2c       	mov	r3, r1
    1b76:	ff e1       	ldi	r31, 0x1F	; 31
    1b78:	f3 15       	cp	r31, r3
    1b7a:	d8 f0       	brcs	.+54     	; 0x1bb2 <vfprintf+0x98>
    1b7c:	8b 32       	cpi	r24, 0x2B	; 43
    1b7e:	79 f0       	breq	.+30     	; 0x1b9e <vfprintf+0x84>
    1b80:	38 f4       	brcc	.+14     	; 0x1b90 <vfprintf+0x76>
    1b82:	80 32       	cpi	r24, 0x20	; 32
    1b84:	79 f0       	breq	.+30     	; 0x1ba4 <vfprintf+0x8a>
    1b86:	83 32       	cpi	r24, 0x23	; 35
    1b88:	a1 f4       	brne	.+40     	; 0x1bb2 <vfprintf+0x98>
    1b8a:	23 2d       	mov	r18, r3
    1b8c:	20 61       	ori	r18, 0x10	; 16
    1b8e:	1d c0       	rjmp	.+58     	; 0x1bca <vfprintf+0xb0>
    1b90:	8d 32       	cpi	r24, 0x2D	; 45
    1b92:	61 f0       	breq	.+24     	; 0x1bac <vfprintf+0x92>
    1b94:	80 33       	cpi	r24, 0x30	; 48
    1b96:	69 f4       	brne	.+26     	; 0x1bb2 <vfprintf+0x98>
    1b98:	23 2d       	mov	r18, r3
    1b9a:	21 60       	ori	r18, 0x01	; 1
    1b9c:	16 c0       	rjmp	.+44     	; 0x1bca <vfprintf+0xb0>
    1b9e:	83 2d       	mov	r24, r3
    1ba0:	82 60       	ori	r24, 0x02	; 2
    1ba2:	38 2e       	mov	r3, r24
    1ba4:	e3 2d       	mov	r30, r3
    1ba6:	e4 60       	ori	r30, 0x04	; 4
    1ba8:	3e 2e       	mov	r3, r30
    1baa:	2a c0       	rjmp	.+84     	; 0x1c00 <vfprintf+0xe6>
    1bac:	f3 2d       	mov	r31, r3
    1bae:	f8 60       	ori	r31, 0x08	; 8
    1bb0:	1d c0       	rjmp	.+58     	; 0x1bec <vfprintf+0xd2>
    1bb2:	37 fc       	sbrc	r3, 7
    1bb4:	2d c0       	rjmp	.+90     	; 0x1c10 <vfprintf+0xf6>
    1bb6:	20 ed       	ldi	r18, 0xD0	; 208
    1bb8:	28 0f       	add	r18, r24
    1bba:	2a 30       	cpi	r18, 0x0A	; 10
    1bbc:	40 f0       	brcs	.+16     	; 0x1bce <vfprintf+0xb4>
    1bbe:	8e 32       	cpi	r24, 0x2E	; 46
    1bc0:	b9 f4       	brne	.+46     	; 0x1bf0 <vfprintf+0xd6>
    1bc2:	36 fc       	sbrc	r3, 6
    1bc4:	81 c1       	rjmp	.+770    	; 0x1ec8 <vfprintf+0x3ae>
    1bc6:	23 2d       	mov	r18, r3
    1bc8:	20 64       	ori	r18, 0x40	; 64
    1bca:	32 2e       	mov	r3, r18
    1bcc:	19 c0       	rjmp	.+50     	; 0x1c00 <vfprintf+0xe6>
    1bce:	36 fe       	sbrs	r3, 6
    1bd0:	06 c0       	rjmp	.+12     	; 0x1bde <vfprintf+0xc4>
    1bd2:	8a e0       	ldi	r24, 0x0A	; 10
    1bd4:	98 9e       	mul	r9, r24
    1bd6:	20 0d       	add	r18, r0
    1bd8:	11 24       	eor	r1, r1
    1bda:	92 2e       	mov	r9, r18
    1bdc:	11 c0       	rjmp	.+34     	; 0x1c00 <vfprintf+0xe6>
    1bde:	ea e0       	ldi	r30, 0x0A	; 10
    1be0:	2e 9e       	mul	r2, r30
    1be2:	20 0d       	add	r18, r0
    1be4:	11 24       	eor	r1, r1
    1be6:	22 2e       	mov	r2, r18
    1be8:	f3 2d       	mov	r31, r3
    1bea:	f0 62       	ori	r31, 0x20	; 32
    1bec:	3f 2e       	mov	r3, r31
    1bee:	08 c0       	rjmp	.+16     	; 0x1c00 <vfprintf+0xe6>
    1bf0:	8c 36       	cpi	r24, 0x6C	; 108
    1bf2:	21 f4       	brne	.+8      	; 0x1bfc <vfprintf+0xe2>
    1bf4:	83 2d       	mov	r24, r3
    1bf6:	80 68       	ori	r24, 0x80	; 128
    1bf8:	38 2e       	mov	r3, r24
    1bfa:	02 c0       	rjmp	.+4      	; 0x1c00 <vfprintf+0xe6>
    1bfc:	88 36       	cpi	r24, 0x68	; 104
    1bfe:	41 f4       	brne	.+16     	; 0x1c10 <vfprintf+0xf6>
    1c00:	f7 01       	movw	r30, r14
    1c02:	93 fd       	sbrc	r25, 3
    1c04:	85 91       	lpm	r24, Z+
    1c06:	93 ff       	sbrs	r25, 3
    1c08:	81 91       	ld	r24, Z+
    1c0a:	7f 01       	movw	r14, r30
    1c0c:	81 11       	cpse	r24, r1
    1c0e:	b3 cf       	rjmp	.-154    	; 0x1b76 <vfprintf+0x5c>
    1c10:	98 2f       	mov	r25, r24
    1c12:	9f 7d       	andi	r25, 0xDF	; 223
    1c14:	95 54       	subi	r25, 0x45	; 69
    1c16:	93 30       	cpi	r25, 0x03	; 3
    1c18:	28 f4       	brcc	.+10     	; 0x1c24 <vfprintf+0x10a>
    1c1a:	0c 5f       	subi	r16, 0xFC	; 252
    1c1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c1e:	9f e3       	ldi	r25, 0x3F	; 63
    1c20:	99 83       	std	Y+1, r25	; 0x01
    1c22:	0d c0       	rjmp	.+26     	; 0x1c3e <vfprintf+0x124>
    1c24:	83 36       	cpi	r24, 0x63	; 99
    1c26:	31 f0       	breq	.+12     	; 0x1c34 <vfprintf+0x11a>
    1c28:	83 37       	cpi	r24, 0x73	; 115
    1c2a:	71 f0       	breq	.+28     	; 0x1c48 <vfprintf+0x12e>
    1c2c:	83 35       	cpi	r24, 0x53	; 83
    1c2e:	09 f0       	breq	.+2      	; 0x1c32 <vfprintf+0x118>
    1c30:	59 c0       	rjmp	.+178    	; 0x1ce4 <vfprintf+0x1ca>
    1c32:	21 c0       	rjmp	.+66     	; 0x1c76 <vfprintf+0x15c>
    1c34:	f8 01       	movw	r30, r16
    1c36:	80 81       	ld	r24, Z
    1c38:	89 83       	std	Y+1, r24	; 0x01
    1c3a:	0e 5f       	subi	r16, 0xFE	; 254
    1c3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c3e:	88 24       	eor	r8, r8
    1c40:	83 94       	inc	r8
    1c42:	91 2c       	mov	r9, r1
    1c44:	53 01       	movw	r10, r6
    1c46:	13 c0       	rjmp	.+38     	; 0x1c6e <vfprintf+0x154>
    1c48:	28 01       	movw	r4, r16
    1c4a:	f2 e0       	ldi	r31, 0x02	; 2
    1c4c:	4f 0e       	add	r4, r31
    1c4e:	51 1c       	adc	r5, r1
    1c50:	f8 01       	movw	r30, r16
    1c52:	a0 80       	ld	r10, Z
    1c54:	b1 80       	ldd	r11, Z+1	; 0x01
    1c56:	36 fe       	sbrs	r3, 6
    1c58:	03 c0       	rjmp	.+6      	; 0x1c60 <vfprintf+0x146>
    1c5a:	69 2d       	mov	r22, r9
    1c5c:	70 e0       	ldi	r23, 0x00	; 0
    1c5e:	02 c0       	rjmp	.+4      	; 0x1c64 <vfprintf+0x14a>
    1c60:	6f ef       	ldi	r22, 0xFF	; 255
    1c62:	7f ef       	ldi	r23, 0xFF	; 255
    1c64:	c5 01       	movw	r24, r10
    1c66:	0e 94 bd 10 	call	0x217a	; 0x217a <strnlen>
    1c6a:	4c 01       	movw	r8, r24
    1c6c:	82 01       	movw	r16, r4
    1c6e:	f3 2d       	mov	r31, r3
    1c70:	ff 77       	andi	r31, 0x7F	; 127
    1c72:	3f 2e       	mov	r3, r31
    1c74:	16 c0       	rjmp	.+44     	; 0x1ca2 <vfprintf+0x188>
    1c76:	28 01       	movw	r4, r16
    1c78:	22 e0       	ldi	r18, 0x02	; 2
    1c7a:	42 0e       	add	r4, r18
    1c7c:	51 1c       	adc	r5, r1
    1c7e:	f8 01       	movw	r30, r16
    1c80:	a0 80       	ld	r10, Z
    1c82:	b1 80       	ldd	r11, Z+1	; 0x01
    1c84:	36 fe       	sbrs	r3, 6
    1c86:	03 c0       	rjmp	.+6      	; 0x1c8e <vfprintf+0x174>
    1c88:	69 2d       	mov	r22, r9
    1c8a:	70 e0       	ldi	r23, 0x00	; 0
    1c8c:	02 c0       	rjmp	.+4      	; 0x1c92 <vfprintf+0x178>
    1c8e:	6f ef       	ldi	r22, 0xFF	; 255
    1c90:	7f ef       	ldi	r23, 0xFF	; 255
    1c92:	c5 01       	movw	r24, r10
    1c94:	0e 94 ab 10 	call	0x2156	; 0x2156 <strnlen_P>
    1c98:	4c 01       	movw	r8, r24
    1c9a:	f3 2d       	mov	r31, r3
    1c9c:	f0 68       	ori	r31, 0x80	; 128
    1c9e:	3f 2e       	mov	r3, r31
    1ca0:	82 01       	movw	r16, r4
    1ca2:	33 fc       	sbrc	r3, 3
    1ca4:	1b c0       	rjmp	.+54     	; 0x1cdc <vfprintf+0x1c2>
    1ca6:	82 2d       	mov	r24, r2
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	88 16       	cp	r8, r24
    1cac:	99 06       	cpc	r9, r25
    1cae:	b0 f4       	brcc	.+44     	; 0x1cdc <vfprintf+0x1c2>
    1cb0:	b6 01       	movw	r22, r12
    1cb2:	80 e2       	ldi	r24, 0x20	; 32
    1cb4:	90 e0       	ldi	r25, 0x00	; 0
    1cb6:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1cba:	2a 94       	dec	r2
    1cbc:	f4 cf       	rjmp	.-24     	; 0x1ca6 <vfprintf+0x18c>
    1cbe:	f5 01       	movw	r30, r10
    1cc0:	37 fc       	sbrc	r3, 7
    1cc2:	85 91       	lpm	r24, Z+
    1cc4:	37 fe       	sbrs	r3, 7
    1cc6:	81 91       	ld	r24, Z+
    1cc8:	5f 01       	movw	r10, r30
    1cca:	b6 01       	movw	r22, r12
    1ccc:	90 e0       	ldi	r25, 0x00	; 0
    1cce:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1cd2:	21 10       	cpse	r2, r1
    1cd4:	2a 94       	dec	r2
    1cd6:	21 e0       	ldi	r18, 0x01	; 1
    1cd8:	82 1a       	sub	r8, r18
    1cda:	91 08       	sbc	r9, r1
    1cdc:	81 14       	cp	r8, r1
    1cde:	91 04       	cpc	r9, r1
    1ce0:	71 f7       	brne	.-36     	; 0x1cbe <vfprintf+0x1a4>
    1ce2:	e8 c0       	rjmp	.+464    	; 0x1eb4 <vfprintf+0x39a>
    1ce4:	84 36       	cpi	r24, 0x64	; 100
    1ce6:	11 f0       	breq	.+4      	; 0x1cec <vfprintf+0x1d2>
    1ce8:	89 36       	cpi	r24, 0x69	; 105
    1cea:	41 f5       	brne	.+80     	; 0x1d3c <vfprintf+0x222>
    1cec:	f8 01       	movw	r30, r16
    1cee:	37 fe       	sbrs	r3, 7
    1cf0:	07 c0       	rjmp	.+14     	; 0x1d00 <vfprintf+0x1e6>
    1cf2:	60 81       	ld	r22, Z
    1cf4:	71 81       	ldd	r23, Z+1	; 0x01
    1cf6:	82 81       	ldd	r24, Z+2	; 0x02
    1cf8:	93 81       	ldd	r25, Z+3	; 0x03
    1cfa:	0c 5f       	subi	r16, 0xFC	; 252
    1cfc:	1f 4f       	sbci	r17, 0xFF	; 255
    1cfe:	08 c0       	rjmp	.+16     	; 0x1d10 <vfprintf+0x1f6>
    1d00:	60 81       	ld	r22, Z
    1d02:	71 81       	ldd	r23, Z+1	; 0x01
    1d04:	07 2e       	mov	r0, r23
    1d06:	00 0c       	add	r0, r0
    1d08:	88 0b       	sbc	r24, r24
    1d0a:	99 0b       	sbc	r25, r25
    1d0c:	0e 5f       	subi	r16, 0xFE	; 254
    1d0e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d10:	f3 2d       	mov	r31, r3
    1d12:	ff 76       	andi	r31, 0x6F	; 111
    1d14:	3f 2e       	mov	r3, r31
    1d16:	97 ff       	sbrs	r25, 7
    1d18:	09 c0       	rjmp	.+18     	; 0x1d2c <vfprintf+0x212>
    1d1a:	90 95       	com	r25
    1d1c:	80 95       	com	r24
    1d1e:	70 95       	com	r23
    1d20:	61 95       	neg	r22
    1d22:	7f 4f       	sbci	r23, 0xFF	; 255
    1d24:	8f 4f       	sbci	r24, 0xFF	; 255
    1d26:	9f 4f       	sbci	r25, 0xFF	; 255
    1d28:	f0 68       	ori	r31, 0x80	; 128
    1d2a:	3f 2e       	mov	r3, r31
    1d2c:	2a e0       	ldi	r18, 0x0A	; 10
    1d2e:	30 e0       	ldi	r19, 0x00	; 0
    1d30:	a3 01       	movw	r20, r6
    1d32:	0e 94 14 11 	call	0x2228	; 0x2228 <__ultoa_invert>
    1d36:	88 2e       	mov	r8, r24
    1d38:	86 18       	sub	r8, r6
    1d3a:	45 c0       	rjmp	.+138    	; 0x1dc6 <vfprintf+0x2ac>
    1d3c:	85 37       	cpi	r24, 0x75	; 117
    1d3e:	31 f4       	brne	.+12     	; 0x1d4c <vfprintf+0x232>
    1d40:	23 2d       	mov	r18, r3
    1d42:	2f 7e       	andi	r18, 0xEF	; 239
    1d44:	b2 2e       	mov	r11, r18
    1d46:	2a e0       	ldi	r18, 0x0A	; 10
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	25 c0       	rjmp	.+74     	; 0x1d96 <vfprintf+0x27c>
    1d4c:	93 2d       	mov	r25, r3
    1d4e:	99 7f       	andi	r25, 0xF9	; 249
    1d50:	b9 2e       	mov	r11, r25
    1d52:	8f 36       	cpi	r24, 0x6F	; 111
    1d54:	c1 f0       	breq	.+48     	; 0x1d86 <vfprintf+0x26c>
    1d56:	18 f4       	brcc	.+6      	; 0x1d5e <vfprintf+0x244>
    1d58:	88 35       	cpi	r24, 0x58	; 88
    1d5a:	79 f0       	breq	.+30     	; 0x1d7a <vfprintf+0x260>
    1d5c:	b5 c0       	rjmp	.+362    	; 0x1ec8 <vfprintf+0x3ae>
    1d5e:	80 37       	cpi	r24, 0x70	; 112
    1d60:	19 f0       	breq	.+6      	; 0x1d68 <vfprintf+0x24e>
    1d62:	88 37       	cpi	r24, 0x78	; 120
    1d64:	21 f0       	breq	.+8      	; 0x1d6e <vfprintf+0x254>
    1d66:	b0 c0       	rjmp	.+352    	; 0x1ec8 <vfprintf+0x3ae>
    1d68:	e9 2f       	mov	r30, r25
    1d6a:	e0 61       	ori	r30, 0x10	; 16
    1d6c:	be 2e       	mov	r11, r30
    1d6e:	b4 fe       	sbrs	r11, 4
    1d70:	0d c0       	rjmp	.+26     	; 0x1d8c <vfprintf+0x272>
    1d72:	fb 2d       	mov	r31, r11
    1d74:	f4 60       	ori	r31, 0x04	; 4
    1d76:	bf 2e       	mov	r11, r31
    1d78:	09 c0       	rjmp	.+18     	; 0x1d8c <vfprintf+0x272>
    1d7a:	34 fe       	sbrs	r3, 4
    1d7c:	0a c0       	rjmp	.+20     	; 0x1d92 <vfprintf+0x278>
    1d7e:	29 2f       	mov	r18, r25
    1d80:	26 60       	ori	r18, 0x06	; 6
    1d82:	b2 2e       	mov	r11, r18
    1d84:	06 c0       	rjmp	.+12     	; 0x1d92 <vfprintf+0x278>
    1d86:	28 e0       	ldi	r18, 0x08	; 8
    1d88:	30 e0       	ldi	r19, 0x00	; 0
    1d8a:	05 c0       	rjmp	.+10     	; 0x1d96 <vfprintf+0x27c>
    1d8c:	20 e1       	ldi	r18, 0x10	; 16
    1d8e:	30 e0       	ldi	r19, 0x00	; 0
    1d90:	02 c0       	rjmp	.+4      	; 0x1d96 <vfprintf+0x27c>
    1d92:	20 e1       	ldi	r18, 0x10	; 16
    1d94:	32 e0       	ldi	r19, 0x02	; 2
    1d96:	f8 01       	movw	r30, r16
    1d98:	b7 fe       	sbrs	r11, 7
    1d9a:	07 c0       	rjmp	.+14     	; 0x1daa <vfprintf+0x290>
    1d9c:	60 81       	ld	r22, Z
    1d9e:	71 81       	ldd	r23, Z+1	; 0x01
    1da0:	82 81       	ldd	r24, Z+2	; 0x02
    1da2:	93 81       	ldd	r25, Z+3	; 0x03
    1da4:	0c 5f       	subi	r16, 0xFC	; 252
    1da6:	1f 4f       	sbci	r17, 0xFF	; 255
    1da8:	06 c0       	rjmp	.+12     	; 0x1db6 <vfprintf+0x29c>
    1daa:	60 81       	ld	r22, Z
    1dac:	71 81       	ldd	r23, Z+1	; 0x01
    1dae:	80 e0       	ldi	r24, 0x00	; 0
    1db0:	90 e0       	ldi	r25, 0x00	; 0
    1db2:	0e 5f       	subi	r16, 0xFE	; 254
    1db4:	1f 4f       	sbci	r17, 0xFF	; 255
    1db6:	a3 01       	movw	r20, r6
    1db8:	0e 94 14 11 	call	0x2228	; 0x2228 <__ultoa_invert>
    1dbc:	88 2e       	mov	r8, r24
    1dbe:	86 18       	sub	r8, r6
    1dc0:	fb 2d       	mov	r31, r11
    1dc2:	ff 77       	andi	r31, 0x7F	; 127
    1dc4:	3f 2e       	mov	r3, r31
    1dc6:	36 fe       	sbrs	r3, 6
    1dc8:	0d c0       	rjmp	.+26     	; 0x1de4 <vfprintf+0x2ca>
    1dca:	23 2d       	mov	r18, r3
    1dcc:	2e 7f       	andi	r18, 0xFE	; 254
    1dce:	a2 2e       	mov	r10, r18
    1dd0:	89 14       	cp	r8, r9
    1dd2:	58 f4       	brcc	.+22     	; 0x1dea <vfprintf+0x2d0>
    1dd4:	34 fe       	sbrs	r3, 4
    1dd6:	0b c0       	rjmp	.+22     	; 0x1dee <vfprintf+0x2d4>
    1dd8:	32 fc       	sbrc	r3, 2
    1dda:	09 c0       	rjmp	.+18     	; 0x1dee <vfprintf+0x2d4>
    1ddc:	83 2d       	mov	r24, r3
    1dde:	8e 7e       	andi	r24, 0xEE	; 238
    1de0:	a8 2e       	mov	r10, r24
    1de2:	05 c0       	rjmp	.+10     	; 0x1dee <vfprintf+0x2d4>
    1de4:	b8 2c       	mov	r11, r8
    1de6:	a3 2c       	mov	r10, r3
    1de8:	03 c0       	rjmp	.+6      	; 0x1df0 <vfprintf+0x2d6>
    1dea:	b8 2c       	mov	r11, r8
    1dec:	01 c0       	rjmp	.+2      	; 0x1df0 <vfprintf+0x2d6>
    1dee:	b9 2c       	mov	r11, r9
    1df0:	a4 fe       	sbrs	r10, 4
    1df2:	0f c0       	rjmp	.+30     	; 0x1e12 <vfprintf+0x2f8>
    1df4:	fe 01       	movw	r30, r28
    1df6:	e8 0d       	add	r30, r8
    1df8:	f1 1d       	adc	r31, r1
    1dfa:	80 81       	ld	r24, Z
    1dfc:	80 33       	cpi	r24, 0x30	; 48
    1dfe:	21 f4       	brne	.+8      	; 0x1e08 <vfprintf+0x2ee>
    1e00:	9a 2d       	mov	r25, r10
    1e02:	99 7e       	andi	r25, 0xE9	; 233
    1e04:	a9 2e       	mov	r10, r25
    1e06:	09 c0       	rjmp	.+18     	; 0x1e1a <vfprintf+0x300>
    1e08:	a2 fe       	sbrs	r10, 2
    1e0a:	06 c0       	rjmp	.+12     	; 0x1e18 <vfprintf+0x2fe>
    1e0c:	b3 94       	inc	r11
    1e0e:	b3 94       	inc	r11
    1e10:	04 c0       	rjmp	.+8      	; 0x1e1a <vfprintf+0x300>
    1e12:	8a 2d       	mov	r24, r10
    1e14:	86 78       	andi	r24, 0x86	; 134
    1e16:	09 f0       	breq	.+2      	; 0x1e1a <vfprintf+0x300>
    1e18:	b3 94       	inc	r11
    1e1a:	a3 fc       	sbrc	r10, 3
    1e1c:	11 c0       	rjmp	.+34     	; 0x1e40 <vfprintf+0x326>
    1e1e:	a0 fe       	sbrs	r10, 0
    1e20:	06 c0       	rjmp	.+12     	; 0x1e2e <vfprintf+0x314>
    1e22:	b2 14       	cp	r11, r2
    1e24:	88 f4       	brcc	.+34     	; 0x1e48 <vfprintf+0x32e>
    1e26:	28 0c       	add	r2, r8
    1e28:	92 2c       	mov	r9, r2
    1e2a:	9b 18       	sub	r9, r11
    1e2c:	0e c0       	rjmp	.+28     	; 0x1e4a <vfprintf+0x330>
    1e2e:	b2 14       	cp	r11, r2
    1e30:	60 f4       	brcc	.+24     	; 0x1e4a <vfprintf+0x330>
    1e32:	b6 01       	movw	r22, r12
    1e34:	80 e2       	ldi	r24, 0x20	; 32
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1e3c:	b3 94       	inc	r11
    1e3e:	f7 cf       	rjmp	.-18     	; 0x1e2e <vfprintf+0x314>
    1e40:	b2 14       	cp	r11, r2
    1e42:	18 f4       	brcc	.+6      	; 0x1e4a <vfprintf+0x330>
    1e44:	2b 18       	sub	r2, r11
    1e46:	02 c0       	rjmp	.+4      	; 0x1e4c <vfprintf+0x332>
    1e48:	98 2c       	mov	r9, r8
    1e4a:	21 2c       	mov	r2, r1
    1e4c:	a4 fe       	sbrs	r10, 4
    1e4e:	10 c0       	rjmp	.+32     	; 0x1e70 <vfprintf+0x356>
    1e50:	b6 01       	movw	r22, r12
    1e52:	80 e3       	ldi	r24, 0x30	; 48
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1e5a:	a2 fe       	sbrs	r10, 2
    1e5c:	17 c0       	rjmp	.+46     	; 0x1e8c <vfprintf+0x372>
    1e5e:	a1 fc       	sbrc	r10, 1
    1e60:	03 c0       	rjmp	.+6      	; 0x1e68 <vfprintf+0x34e>
    1e62:	88 e7       	ldi	r24, 0x78	; 120
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	02 c0       	rjmp	.+4      	; 0x1e6c <vfprintf+0x352>
    1e68:	88 e5       	ldi	r24, 0x58	; 88
    1e6a:	90 e0       	ldi	r25, 0x00	; 0
    1e6c:	b6 01       	movw	r22, r12
    1e6e:	0c c0       	rjmp	.+24     	; 0x1e88 <vfprintf+0x36e>
    1e70:	8a 2d       	mov	r24, r10
    1e72:	86 78       	andi	r24, 0x86	; 134
    1e74:	59 f0       	breq	.+22     	; 0x1e8c <vfprintf+0x372>
    1e76:	a1 fe       	sbrs	r10, 1
    1e78:	02 c0       	rjmp	.+4      	; 0x1e7e <vfprintf+0x364>
    1e7a:	8b e2       	ldi	r24, 0x2B	; 43
    1e7c:	01 c0       	rjmp	.+2      	; 0x1e80 <vfprintf+0x366>
    1e7e:	80 e2       	ldi	r24, 0x20	; 32
    1e80:	a7 fc       	sbrc	r10, 7
    1e82:	8d e2       	ldi	r24, 0x2D	; 45
    1e84:	b6 01       	movw	r22, r12
    1e86:	90 e0       	ldi	r25, 0x00	; 0
    1e88:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1e8c:	89 14       	cp	r8, r9
    1e8e:	38 f4       	brcc	.+14     	; 0x1e9e <vfprintf+0x384>
    1e90:	b6 01       	movw	r22, r12
    1e92:	80 e3       	ldi	r24, 0x30	; 48
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1e9a:	9a 94       	dec	r9
    1e9c:	f7 cf       	rjmp	.-18     	; 0x1e8c <vfprintf+0x372>
    1e9e:	8a 94       	dec	r8
    1ea0:	f3 01       	movw	r30, r6
    1ea2:	e8 0d       	add	r30, r8
    1ea4:	f1 1d       	adc	r31, r1
    1ea6:	80 81       	ld	r24, Z
    1ea8:	b6 01       	movw	r22, r12
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1eb0:	81 10       	cpse	r8, r1
    1eb2:	f5 cf       	rjmp	.-22     	; 0x1e9e <vfprintf+0x384>
    1eb4:	22 20       	and	r2, r2
    1eb6:	09 f4       	brne	.+2      	; 0x1eba <vfprintf+0x3a0>
    1eb8:	42 ce       	rjmp	.-892    	; 0x1b3e <vfprintf+0x24>
    1eba:	b6 01       	movw	r22, r12
    1ebc:	80 e2       	ldi	r24, 0x20	; 32
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <fputc>
    1ec4:	2a 94       	dec	r2
    1ec6:	f6 cf       	rjmp	.-20     	; 0x1eb4 <vfprintf+0x39a>
    1ec8:	f6 01       	movw	r30, r12
    1eca:	86 81       	ldd	r24, Z+6	; 0x06
    1ecc:	97 81       	ldd	r25, Z+7	; 0x07
    1ece:	02 c0       	rjmp	.+4      	; 0x1ed4 <vfprintf+0x3ba>
    1ed0:	8f ef       	ldi	r24, 0xFF	; 255
    1ed2:	9f ef       	ldi	r25, 0xFF	; 255
    1ed4:	2b 96       	adiw	r28, 0x0b	; 11
    1ed6:	e2 e1       	ldi	r30, 0x12	; 18
    1ed8:	0c 94 8e 11 	jmp	0x231c	; 0x231c <__epilogue_restores__>

00001edc <calloc>:
    1edc:	0f 93       	push	r16
    1ede:	1f 93       	push	r17
    1ee0:	cf 93       	push	r28
    1ee2:	df 93       	push	r29
    1ee4:	86 9f       	mul	r24, r22
    1ee6:	80 01       	movw	r16, r0
    1ee8:	87 9f       	mul	r24, r23
    1eea:	10 0d       	add	r17, r0
    1eec:	96 9f       	mul	r25, r22
    1eee:	10 0d       	add	r17, r0
    1ef0:	11 24       	eor	r1, r1
    1ef2:	c8 01       	movw	r24, r16
    1ef4:	0e 94 8a 0f 	call	0x1f14	; 0x1f14 <malloc>
    1ef8:	ec 01       	movw	r28, r24
    1efa:	00 97       	sbiw	r24, 0x00	; 0
    1efc:	29 f0       	breq	.+10     	; 0x1f08 <calloc+0x2c>
    1efe:	a8 01       	movw	r20, r16
    1f00:	60 e0       	ldi	r22, 0x00	; 0
    1f02:	70 e0       	ldi	r23, 0x00	; 0
    1f04:	0e 94 b6 10 	call	0x216c	; 0x216c <memset>
    1f08:	ce 01       	movw	r24, r28
    1f0a:	df 91       	pop	r29
    1f0c:	cf 91       	pop	r28
    1f0e:	1f 91       	pop	r17
    1f10:	0f 91       	pop	r16
    1f12:	08 95       	ret

00001f14 <malloc>:
    1f14:	0f 93       	push	r16
    1f16:	1f 93       	push	r17
    1f18:	cf 93       	push	r28
    1f1a:	df 93       	push	r29
    1f1c:	82 30       	cpi	r24, 0x02	; 2
    1f1e:	91 05       	cpc	r25, r1
    1f20:	10 f4       	brcc	.+4      	; 0x1f26 <malloc+0x12>
    1f22:	82 e0       	ldi	r24, 0x02	; 2
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	e0 91 fe 02 	lds	r30, 0x02FE	; 0x8002fe <__flp>
    1f2a:	f0 91 ff 02 	lds	r31, 0x02FF	; 0x8002ff <__flp+0x1>
    1f2e:	20 e0       	ldi	r18, 0x00	; 0
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	a0 e0       	ldi	r26, 0x00	; 0
    1f34:	b0 e0       	ldi	r27, 0x00	; 0
    1f36:	30 97       	sbiw	r30, 0x00	; 0
    1f38:	19 f1       	breq	.+70     	; 0x1f80 <malloc+0x6c>
    1f3a:	40 81       	ld	r20, Z
    1f3c:	51 81       	ldd	r21, Z+1	; 0x01
    1f3e:	02 81       	ldd	r16, Z+2	; 0x02
    1f40:	13 81       	ldd	r17, Z+3	; 0x03
    1f42:	48 17       	cp	r20, r24
    1f44:	59 07       	cpc	r21, r25
    1f46:	c8 f0       	brcs	.+50     	; 0x1f7a <malloc+0x66>
    1f48:	84 17       	cp	r24, r20
    1f4a:	95 07       	cpc	r25, r21
    1f4c:	69 f4       	brne	.+26     	; 0x1f68 <malloc+0x54>
    1f4e:	10 97       	sbiw	r26, 0x00	; 0
    1f50:	31 f0       	breq	.+12     	; 0x1f5e <malloc+0x4a>
    1f52:	12 96       	adiw	r26, 0x02	; 2
    1f54:	0c 93       	st	X, r16
    1f56:	12 97       	sbiw	r26, 0x02	; 2
    1f58:	13 96       	adiw	r26, 0x03	; 3
    1f5a:	1c 93       	st	X, r17
    1f5c:	27 c0       	rjmp	.+78     	; 0x1fac <malloc+0x98>
    1f5e:	00 93 fe 02 	sts	0x02FE, r16	; 0x8002fe <__flp>
    1f62:	10 93 ff 02 	sts	0x02FF, r17	; 0x8002ff <__flp+0x1>
    1f66:	22 c0       	rjmp	.+68     	; 0x1fac <malloc+0x98>
    1f68:	21 15       	cp	r18, r1
    1f6a:	31 05       	cpc	r19, r1
    1f6c:	19 f0       	breq	.+6      	; 0x1f74 <malloc+0x60>
    1f6e:	42 17       	cp	r20, r18
    1f70:	53 07       	cpc	r21, r19
    1f72:	18 f4       	brcc	.+6      	; 0x1f7a <malloc+0x66>
    1f74:	9a 01       	movw	r18, r20
    1f76:	bd 01       	movw	r22, r26
    1f78:	ef 01       	movw	r28, r30
    1f7a:	df 01       	movw	r26, r30
    1f7c:	f8 01       	movw	r30, r16
    1f7e:	db cf       	rjmp	.-74     	; 0x1f36 <malloc+0x22>
    1f80:	21 15       	cp	r18, r1
    1f82:	31 05       	cpc	r19, r1
    1f84:	f9 f0       	breq	.+62     	; 0x1fc4 <malloc+0xb0>
    1f86:	28 1b       	sub	r18, r24
    1f88:	39 0b       	sbc	r19, r25
    1f8a:	24 30       	cpi	r18, 0x04	; 4
    1f8c:	31 05       	cpc	r19, r1
    1f8e:	80 f4       	brcc	.+32     	; 0x1fb0 <malloc+0x9c>
    1f90:	8a 81       	ldd	r24, Y+2	; 0x02
    1f92:	9b 81       	ldd	r25, Y+3	; 0x03
    1f94:	61 15       	cp	r22, r1
    1f96:	71 05       	cpc	r23, r1
    1f98:	21 f0       	breq	.+8      	; 0x1fa2 <malloc+0x8e>
    1f9a:	fb 01       	movw	r30, r22
    1f9c:	93 83       	std	Z+3, r25	; 0x03
    1f9e:	82 83       	std	Z+2, r24	; 0x02
    1fa0:	04 c0       	rjmp	.+8      	; 0x1faa <malloc+0x96>
    1fa2:	90 93 ff 02 	sts	0x02FF, r25	; 0x8002ff <__flp+0x1>
    1fa6:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <__flp>
    1faa:	fe 01       	movw	r30, r28
    1fac:	32 96       	adiw	r30, 0x02	; 2
    1fae:	44 c0       	rjmp	.+136    	; 0x2038 <malloc+0x124>
    1fb0:	fe 01       	movw	r30, r28
    1fb2:	e2 0f       	add	r30, r18
    1fb4:	f3 1f       	adc	r31, r19
    1fb6:	81 93       	st	Z+, r24
    1fb8:	91 93       	st	Z+, r25
    1fba:	22 50       	subi	r18, 0x02	; 2
    1fbc:	31 09       	sbc	r19, r1
    1fbe:	39 83       	std	Y+1, r19	; 0x01
    1fc0:	28 83       	st	Y, r18
    1fc2:	3a c0       	rjmp	.+116    	; 0x2038 <malloc+0x124>
    1fc4:	20 91 fc 02 	lds	r18, 0x02FC	; 0x8002fc <__brkval>
    1fc8:	30 91 fd 02 	lds	r19, 0x02FD	; 0x8002fd <__brkval+0x1>
    1fcc:	23 2b       	or	r18, r19
    1fce:	41 f4       	brne	.+16     	; 0x1fe0 <malloc+0xcc>
    1fd0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1fd4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1fd8:	30 93 fd 02 	sts	0x02FD, r19	; 0x8002fd <__brkval+0x1>
    1fdc:	20 93 fc 02 	sts	0x02FC, r18	; 0x8002fc <__brkval>
    1fe0:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1fe4:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1fe8:	21 15       	cp	r18, r1
    1fea:	31 05       	cpc	r19, r1
    1fec:	41 f4       	brne	.+16     	; 0x1ffe <malloc+0xea>
    1fee:	2d b7       	in	r18, 0x3d	; 61
    1ff0:	3e b7       	in	r19, 0x3e	; 62
    1ff2:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1ff6:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1ffa:	24 1b       	sub	r18, r20
    1ffc:	35 0b       	sbc	r19, r21
    1ffe:	e0 91 fc 02 	lds	r30, 0x02FC	; 0x8002fc <__brkval>
    2002:	f0 91 fd 02 	lds	r31, 0x02FD	; 0x8002fd <__brkval+0x1>
    2006:	e2 17       	cp	r30, r18
    2008:	f3 07       	cpc	r31, r19
    200a:	a0 f4       	brcc	.+40     	; 0x2034 <malloc+0x120>
    200c:	2e 1b       	sub	r18, r30
    200e:	3f 0b       	sbc	r19, r31
    2010:	28 17       	cp	r18, r24
    2012:	39 07       	cpc	r19, r25
    2014:	78 f0       	brcs	.+30     	; 0x2034 <malloc+0x120>
    2016:	ac 01       	movw	r20, r24
    2018:	4e 5f       	subi	r20, 0xFE	; 254
    201a:	5f 4f       	sbci	r21, 0xFF	; 255
    201c:	24 17       	cp	r18, r20
    201e:	35 07       	cpc	r19, r21
    2020:	48 f0       	brcs	.+18     	; 0x2034 <malloc+0x120>
    2022:	4e 0f       	add	r20, r30
    2024:	5f 1f       	adc	r21, r31
    2026:	50 93 fd 02 	sts	0x02FD, r21	; 0x8002fd <__brkval+0x1>
    202a:	40 93 fc 02 	sts	0x02FC, r20	; 0x8002fc <__brkval>
    202e:	81 93       	st	Z+, r24
    2030:	91 93       	st	Z+, r25
    2032:	02 c0       	rjmp	.+4      	; 0x2038 <malloc+0x124>
    2034:	e0 e0       	ldi	r30, 0x00	; 0
    2036:	f0 e0       	ldi	r31, 0x00	; 0
    2038:	cf 01       	movw	r24, r30
    203a:	df 91       	pop	r29
    203c:	cf 91       	pop	r28
    203e:	1f 91       	pop	r17
    2040:	0f 91       	pop	r16
    2042:	08 95       	ret

00002044 <free>:
    2044:	cf 93       	push	r28
    2046:	df 93       	push	r29
    2048:	00 97       	sbiw	r24, 0x00	; 0
    204a:	09 f4       	brne	.+2      	; 0x204e <free+0xa>
    204c:	81 c0       	rjmp	.+258    	; 0x2150 <free+0x10c>
    204e:	fc 01       	movw	r30, r24
    2050:	32 97       	sbiw	r30, 0x02	; 2
    2052:	13 82       	std	Z+3, r1	; 0x03
    2054:	12 82       	std	Z+2, r1	; 0x02
    2056:	a0 91 fe 02 	lds	r26, 0x02FE	; 0x8002fe <__flp>
    205a:	b0 91 ff 02 	lds	r27, 0x02FF	; 0x8002ff <__flp+0x1>
    205e:	10 97       	sbiw	r26, 0x00	; 0
    2060:	81 f4       	brne	.+32     	; 0x2082 <free+0x3e>
    2062:	20 81       	ld	r18, Z
    2064:	31 81       	ldd	r19, Z+1	; 0x01
    2066:	82 0f       	add	r24, r18
    2068:	93 1f       	adc	r25, r19
    206a:	20 91 fc 02 	lds	r18, 0x02FC	; 0x8002fc <__brkval>
    206e:	30 91 fd 02 	lds	r19, 0x02FD	; 0x8002fd <__brkval+0x1>
    2072:	28 17       	cp	r18, r24
    2074:	39 07       	cpc	r19, r25
    2076:	51 f5       	brne	.+84     	; 0x20cc <free+0x88>
    2078:	f0 93 fd 02 	sts	0x02FD, r31	; 0x8002fd <__brkval+0x1>
    207c:	e0 93 fc 02 	sts	0x02FC, r30	; 0x8002fc <__brkval>
    2080:	67 c0       	rjmp	.+206    	; 0x2150 <free+0x10c>
    2082:	ed 01       	movw	r28, r26
    2084:	20 e0       	ldi	r18, 0x00	; 0
    2086:	30 e0       	ldi	r19, 0x00	; 0
    2088:	ce 17       	cp	r28, r30
    208a:	df 07       	cpc	r29, r31
    208c:	40 f4       	brcc	.+16     	; 0x209e <free+0x5a>
    208e:	4a 81       	ldd	r20, Y+2	; 0x02
    2090:	5b 81       	ldd	r21, Y+3	; 0x03
    2092:	9e 01       	movw	r18, r28
    2094:	41 15       	cp	r20, r1
    2096:	51 05       	cpc	r21, r1
    2098:	f1 f0       	breq	.+60     	; 0x20d6 <free+0x92>
    209a:	ea 01       	movw	r28, r20
    209c:	f5 cf       	rjmp	.-22     	; 0x2088 <free+0x44>
    209e:	d3 83       	std	Z+3, r29	; 0x03
    20a0:	c2 83       	std	Z+2, r28	; 0x02
    20a2:	40 81       	ld	r20, Z
    20a4:	51 81       	ldd	r21, Z+1	; 0x01
    20a6:	84 0f       	add	r24, r20
    20a8:	95 1f       	adc	r25, r21
    20aa:	c8 17       	cp	r28, r24
    20ac:	d9 07       	cpc	r29, r25
    20ae:	59 f4       	brne	.+22     	; 0x20c6 <free+0x82>
    20b0:	88 81       	ld	r24, Y
    20b2:	99 81       	ldd	r25, Y+1	; 0x01
    20b4:	84 0f       	add	r24, r20
    20b6:	95 1f       	adc	r25, r21
    20b8:	02 96       	adiw	r24, 0x02	; 2
    20ba:	91 83       	std	Z+1, r25	; 0x01
    20bc:	80 83       	st	Z, r24
    20be:	8a 81       	ldd	r24, Y+2	; 0x02
    20c0:	9b 81       	ldd	r25, Y+3	; 0x03
    20c2:	93 83       	std	Z+3, r25	; 0x03
    20c4:	82 83       	std	Z+2, r24	; 0x02
    20c6:	21 15       	cp	r18, r1
    20c8:	31 05       	cpc	r19, r1
    20ca:	29 f4       	brne	.+10     	; 0x20d6 <free+0x92>
    20cc:	f0 93 ff 02 	sts	0x02FF, r31	; 0x8002ff <__flp+0x1>
    20d0:	e0 93 fe 02 	sts	0x02FE, r30	; 0x8002fe <__flp>
    20d4:	3d c0       	rjmp	.+122    	; 0x2150 <free+0x10c>
    20d6:	e9 01       	movw	r28, r18
    20d8:	fb 83       	std	Y+3, r31	; 0x03
    20da:	ea 83       	std	Y+2, r30	; 0x02
    20dc:	49 91       	ld	r20, Y+
    20de:	59 91       	ld	r21, Y+
    20e0:	c4 0f       	add	r28, r20
    20e2:	d5 1f       	adc	r29, r21
    20e4:	ec 17       	cp	r30, r28
    20e6:	fd 07       	cpc	r31, r29
    20e8:	61 f4       	brne	.+24     	; 0x2102 <free+0xbe>
    20ea:	80 81       	ld	r24, Z
    20ec:	91 81       	ldd	r25, Z+1	; 0x01
    20ee:	84 0f       	add	r24, r20
    20f0:	95 1f       	adc	r25, r21
    20f2:	02 96       	adiw	r24, 0x02	; 2
    20f4:	e9 01       	movw	r28, r18
    20f6:	99 83       	std	Y+1, r25	; 0x01
    20f8:	88 83       	st	Y, r24
    20fa:	82 81       	ldd	r24, Z+2	; 0x02
    20fc:	93 81       	ldd	r25, Z+3	; 0x03
    20fe:	9b 83       	std	Y+3, r25	; 0x03
    2100:	8a 83       	std	Y+2, r24	; 0x02
    2102:	e0 e0       	ldi	r30, 0x00	; 0
    2104:	f0 e0       	ldi	r31, 0x00	; 0
    2106:	12 96       	adiw	r26, 0x02	; 2
    2108:	8d 91       	ld	r24, X+
    210a:	9c 91       	ld	r25, X
    210c:	13 97       	sbiw	r26, 0x03	; 3
    210e:	00 97       	sbiw	r24, 0x00	; 0
    2110:	19 f0       	breq	.+6      	; 0x2118 <free+0xd4>
    2112:	fd 01       	movw	r30, r26
    2114:	dc 01       	movw	r26, r24
    2116:	f7 cf       	rjmp	.-18     	; 0x2106 <free+0xc2>
    2118:	8d 91       	ld	r24, X+
    211a:	9c 91       	ld	r25, X
    211c:	11 97       	sbiw	r26, 0x01	; 1
    211e:	9d 01       	movw	r18, r26
    2120:	2e 5f       	subi	r18, 0xFE	; 254
    2122:	3f 4f       	sbci	r19, 0xFF	; 255
    2124:	82 0f       	add	r24, r18
    2126:	93 1f       	adc	r25, r19
    2128:	20 91 fc 02 	lds	r18, 0x02FC	; 0x8002fc <__brkval>
    212c:	30 91 fd 02 	lds	r19, 0x02FD	; 0x8002fd <__brkval+0x1>
    2130:	28 17       	cp	r18, r24
    2132:	39 07       	cpc	r19, r25
    2134:	69 f4       	brne	.+26     	; 0x2150 <free+0x10c>
    2136:	30 97       	sbiw	r30, 0x00	; 0
    2138:	29 f4       	brne	.+10     	; 0x2144 <free+0x100>
    213a:	10 92 ff 02 	sts	0x02FF, r1	; 0x8002ff <__flp+0x1>
    213e:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <__flp>
    2142:	02 c0       	rjmp	.+4      	; 0x2148 <free+0x104>
    2144:	13 82       	std	Z+3, r1	; 0x03
    2146:	12 82       	std	Z+2, r1	; 0x02
    2148:	b0 93 fd 02 	sts	0x02FD, r27	; 0x8002fd <__brkval+0x1>
    214c:	a0 93 fc 02 	sts	0x02FC, r26	; 0x8002fc <__brkval>
    2150:	df 91       	pop	r29
    2152:	cf 91       	pop	r28
    2154:	08 95       	ret

00002156 <strnlen_P>:
    2156:	fc 01       	movw	r30, r24
    2158:	05 90       	lpm	r0, Z+
    215a:	61 50       	subi	r22, 0x01	; 1
    215c:	70 40       	sbci	r23, 0x00	; 0
    215e:	01 10       	cpse	r0, r1
    2160:	d8 f7       	brcc	.-10     	; 0x2158 <strnlen_P+0x2>
    2162:	80 95       	com	r24
    2164:	90 95       	com	r25
    2166:	8e 0f       	add	r24, r30
    2168:	9f 1f       	adc	r25, r31
    216a:	08 95       	ret

0000216c <memset>:
    216c:	dc 01       	movw	r26, r24
    216e:	01 c0       	rjmp	.+2      	; 0x2172 <memset+0x6>
    2170:	6d 93       	st	X+, r22
    2172:	41 50       	subi	r20, 0x01	; 1
    2174:	50 40       	sbci	r21, 0x00	; 0
    2176:	e0 f7       	brcc	.-8      	; 0x2170 <memset+0x4>
    2178:	08 95       	ret

0000217a <strnlen>:
    217a:	fc 01       	movw	r30, r24
    217c:	61 50       	subi	r22, 0x01	; 1
    217e:	70 40       	sbci	r23, 0x00	; 0
    2180:	01 90       	ld	r0, Z+
    2182:	01 10       	cpse	r0, r1
    2184:	d8 f7       	brcc	.-10     	; 0x217c <strnlen+0x2>
    2186:	80 95       	com	r24
    2188:	90 95       	com	r25
    218a:	8e 0f       	add	r24, r30
    218c:	9f 1f       	adc	r25, r31
    218e:	08 95       	ret

00002190 <strrev>:
    2190:	dc 01       	movw	r26, r24
    2192:	fc 01       	movw	r30, r24
    2194:	67 2f       	mov	r22, r23
    2196:	71 91       	ld	r23, Z+
    2198:	77 23       	and	r23, r23
    219a:	e1 f7       	brne	.-8      	; 0x2194 <strrev+0x4>
    219c:	32 97       	sbiw	r30, 0x02	; 2
    219e:	04 c0       	rjmp	.+8      	; 0x21a8 <strrev+0x18>
    21a0:	7c 91       	ld	r23, X
    21a2:	6d 93       	st	X+, r22
    21a4:	70 83       	st	Z, r23
    21a6:	62 91       	ld	r22, -Z
    21a8:	ae 17       	cp	r26, r30
    21aa:	bf 07       	cpc	r27, r31
    21ac:	c8 f3       	brcs	.-14     	; 0x21a0 <strrev+0x10>
    21ae:	08 95       	ret

000021b0 <fputc>:
    21b0:	0f 93       	push	r16
    21b2:	1f 93       	push	r17
    21b4:	cf 93       	push	r28
    21b6:	df 93       	push	r29
    21b8:	fb 01       	movw	r30, r22
    21ba:	23 81       	ldd	r18, Z+3	; 0x03
    21bc:	21 fd       	sbrc	r18, 1
    21be:	03 c0       	rjmp	.+6      	; 0x21c6 <fputc+0x16>
    21c0:	8f ef       	ldi	r24, 0xFF	; 255
    21c2:	9f ef       	ldi	r25, 0xFF	; 255
    21c4:	2c c0       	rjmp	.+88     	; 0x221e <fputc+0x6e>
    21c6:	22 ff       	sbrs	r18, 2
    21c8:	16 c0       	rjmp	.+44     	; 0x21f6 <fputc+0x46>
    21ca:	46 81       	ldd	r20, Z+6	; 0x06
    21cc:	57 81       	ldd	r21, Z+7	; 0x07
    21ce:	24 81       	ldd	r18, Z+4	; 0x04
    21d0:	35 81       	ldd	r19, Z+5	; 0x05
    21d2:	42 17       	cp	r20, r18
    21d4:	53 07       	cpc	r21, r19
    21d6:	44 f4       	brge	.+16     	; 0x21e8 <fputc+0x38>
    21d8:	a0 81       	ld	r26, Z
    21da:	b1 81       	ldd	r27, Z+1	; 0x01
    21dc:	9d 01       	movw	r18, r26
    21de:	2f 5f       	subi	r18, 0xFF	; 255
    21e0:	3f 4f       	sbci	r19, 0xFF	; 255
    21e2:	31 83       	std	Z+1, r19	; 0x01
    21e4:	20 83       	st	Z, r18
    21e6:	8c 93       	st	X, r24
    21e8:	26 81       	ldd	r18, Z+6	; 0x06
    21ea:	37 81       	ldd	r19, Z+7	; 0x07
    21ec:	2f 5f       	subi	r18, 0xFF	; 255
    21ee:	3f 4f       	sbci	r19, 0xFF	; 255
    21f0:	37 83       	std	Z+7, r19	; 0x07
    21f2:	26 83       	std	Z+6, r18	; 0x06
    21f4:	14 c0       	rjmp	.+40     	; 0x221e <fputc+0x6e>
    21f6:	8b 01       	movw	r16, r22
    21f8:	ec 01       	movw	r28, r24
    21fa:	fb 01       	movw	r30, r22
    21fc:	00 84       	ldd	r0, Z+8	; 0x08
    21fe:	f1 85       	ldd	r31, Z+9	; 0x09
    2200:	e0 2d       	mov	r30, r0
    2202:	09 95       	icall
    2204:	89 2b       	or	r24, r25
    2206:	e1 f6       	brne	.-72     	; 0x21c0 <fputc+0x10>
    2208:	d8 01       	movw	r26, r16
    220a:	16 96       	adiw	r26, 0x06	; 6
    220c:	8d 91       	ld	r24, X+
    220e:	9c 91       	ld	r25, X
    2210:	17 97       	sbiw	r26, 0x07	; 7
    2212:	01 96       	adiw	r24, 0x01	; 1
    2214:	17 96       	adiw	r26, 0x07	; 7
    2216:	9c 93       	st	X, r25
    2218:	8e 93       	st	-X, r24
    221a:	16 97       	sbiw	r26, 0x06	; 6
    221c:	ce 01       	movw	r24, r28
    221e:	df 91       	pop	r29
    2220:	cf 91       	pop	r28
    2222:	1f 91       	pop	r17
    2224:	0f 91       	pop	r16
    2226:	08 95       	ret

00002228 <__ultoa_invert>:
    2228:	fa 01       	movw	r30, r20
    222a:	aa 27       	eor	r26, r26
    222c:	28 30       	cpi	r18, 0x08	; 8
    222e:	51 f1       	breq	.+84     	; 0x2284 <__ultoa_invert+0x5c>
    2230:	20 31       	cpi	r18, 0x10	; 16
    2232:	81 f1       	breq	.+96     	; 0x2294 <__ultoa_invert+0x6c>
    2234:	e8 94       	clt
    2236:	6f 93       	push	r22
    2238:	6e 7f       	andi	r22, 0xFE	; 254
    223a:	6e 5f       	subi	r22, 0xFE	; 254
    223c:	7f 4f       	sbci	r23, 0xFF	; 255
    223e:	8f 4f       	sbci	r24, 0xFF	; 255
    2240:	9f 4f       	sbci	r25, 0xFF	; 255
    2242:	af 4f       	sbci	r26, 0xFF	; 255
    2244:	b1 e0       	ldi	r27, 0x01	; 1
    2246:	3e d0       	rcall	.+124    	; 0x22c4 <__ultoa_invert+0x9c>
    2248:	b4 e0       	ldi	r27, 0x04	; 4
    224a:	3c d0       	rcall	.+120    	; 0x22c4 <__ultoa_invert+0x9c>
    224c:	67 0f       	add	r22, r23
    224e:	78 1f       	adc	r23, r24
    2250:	89 1f       	adc	r24, r25
    2252:	9a 1f       	adc	r25, r26
    2254:	a1 1d       	adc	r26, r1
    2256:	68 0f       	add	r22, r24
    2258:	79 1f       	adc	r23, r25
    225a:	8a 1f       	adc	r24, r26
    225c:	91 1d       	adc	r25, r1
    225e:	a1 1d       	adc	r26, r1
    2260:	6a 0f       	add	r22, r26
    2262:	71 1d       	adc	r23, r1
    2264:	81 1d       	adc	r24, r1
    2266:	91 1d       	adc	r25, r1
    2268:	a1 1d       	adc	r26, r1
    226a:	20 d0       	rcall	.+64     	; 0x22ac <__ultoa_invert+0x84>
    226c:	09 f4       	brne	.+2      	; 0x2270 <__ultoa_invert+0x48>
    226e:	68 94       	set
    2270:	3f 91       	pop	r19
    2272:	2a e0       	ldi	r18, 0x0A	; 10
    2274:	26 9f       	mul	r18, r22
    2276:	11 24       	eor	r1, r1
    2278:	30 19       	sub	r19, r0
    227a:	30 5d       	subi	r19, 0xD0	; 208
    227c:	31 93       	st	Z+, r19
    227e:	de f6       	brtc	.-74     	; 0x2236 <__ultoa_invert+0xe>
    2280:	cf 01       	movw	r24, r30
    2282:	08 95       	ret
    2284:	46 2f       	mov	r20, r22
    2286:	47 70       	andi	r20, 0x07	; 7
    2288:	40 5d       	subi	r20, 0xD0	; 208
    228a:	41 93       	st	Z+, r20
    228c:	b3 e0       	ldi	r27, 0x03	; 3
    228e:	0f d0       	rcall	.+30     	; 0x22ae <__ultoa_invert+0x86>
    2290:	c9 f7       	brne	.-14     	; 0x2284 <__ultoa_invert+0x5c>
    2292:	f6 cf       	rjmp	.-20     	; 0x2280 <__ultoa_invert+0x58>
    2294:	46 2f       	mov	r20, r22
    2296:	4f 70       	andi	r20, 0x0F	; 15
    2298:	40 5d       	subi	r20, 0xD0	; 208
    229a:	4a 33       	cpi	r20, 0x3A	; 58
    229c:	18 f0       	brcs	.+6      	; 0x22a4 <__ultoa_invert+0x7c>
    229e:	49 5d       	subi	r20, 0xD9	; 217
    22a0:	31 fd       	sbrc	r19, 1
    22a2:	40 52       	subi	r20, 0x20	; 32
    22a4:	41 93       	st	Z+, r20
    22a6:	02 d0       	rcall	.+4      	; 0x22ac <__ultoa_invert+0x84>
    22a8:	a9 f7       	brne	.-22     	; 0x2294 <__ultoa_invert+0x6c>
    22aa:	ea cf       	rjmp	.-44     	; 0x2280 <__ultoa_invert+0x58>
    22ac:	b4 e0       	ldi	r27, 0x04	; 4
    22ae:	a6 95       	lsr	r26
    22b0:	97 95       	ror	r25
    22b2:	87 95       	ror	r24
    22b4:	77 95       	ror	r23
    22b6:	67 95       	ror	r22
    22b8:	ba 95       	dec	r27
    22ba:	c9 f7       	brne	.-14     	; 0x22ae <__ultoa_invert+0x86>
    22bc:	00 97       	sbiw	r24, 0x00	; 0
    22be:	61 05       	cpc	r22, r1
    22c0:	71 05       	cpc	r23, r1
    22c2:	08 95       	ret
    22c4:	9b 01       	movw	r18, r22
    22c6:	ac 01       	movw	r20, r24
    22c8:	0a 2e       	mov	r0, r26
    22ca:	06 94       	lsr	r0
    22cc:	57 95       	ror	r21
    22ce:	47 95       	ror	r20
    22d0:	37 95       	ror	r19
    22d2:	27 95       	ror	r18
    22d4:	ba 95       	dec	r27
    22d6:	c9 f7       	brne	.-14     	; 0x22ca <__ultoa_invert+0xa2>
    22d8:	62 0f       	add	r22, r18
    22da:	73 1f       	adc	r23, r19
    22dc:	84 1f       	adc	r24, r20
    22de:	95 1f       	adc	r25, r21
    22e0:	a0 1d       	adc	r26, r0
    22e2:	08 95       	ret

000022e4 <__prologue_saves__>:
    22e4:	2f 92       	push	r2
    22e6:	3f 92       	push	r3
    22e8:	4f 92       	push	r4
    22ea:	5f 92       	push	r5
    22ec:	6f 92       	push	r6
    22ee:	7f 92       	push	r7
    22f0:	8f 92       	push	r8
    22f2:	9f 92       	push	r9
    22f4:	af 92       	push	r10
    22f6:	bf 92       	push	r11
    22f8:	cf 92       	push	r12
    22fa:	df 92       	push	r13
    22fc:	ef 92       	push	r14
    22fe:	ff 92       	push	r15
    2300:	0f 93       	push	r16
    2302:	1f 93       	push	r17
    2304:	cf 93       	push	r28
    2306:	df 93       	push	r29
    2308:	cd b7       	in	r28, 0x3d	; 61
    230a:	de b7       	in	r29, 0x3e	; 62
    230c:	ca 1b       	sub	r28, r26
    230e:	db 0b       	sbc	r29, r27
    2310:	0f b6       	in	r0, 0x3f	; 63
    2312:	f8 94       	cli
    2314:	de bf       	out	0x3e, r29	; 62
    2316:	0f be       	out	0x3f, r0	; 63
    2318:	cd bf       	out	0x3d, r28	; 61
    231a:	09 94       	ijmp

0000231c <__epilogue_restores__>:
    231c:	2a 88       	ldd	r2, Y+18	; 0x12
    231e:	39 88       	ldd	r3, Y+17	; 0x11
    2320:	48 88       	ldd	r4, Y+16	; 0x10
    2322:	5f 84       	ldd	r5, Y+15	; 0x0f
    2324:	6e 84       	ldd	r6, Y+14	; 0x0e
    2326:	7d 84       	ldd	r7, Y+13	; 0x0d
    2328:	8c 84       	ldd	r8, Y+12	; 0x0c
    232a:	9b 84       	ldd	r9, Y+11	; 0x0b
    232c:	aa 84       	ldd	r10, Y+10	; 0x0a
    232e:	b9 84       	ldd	r11, Y+9	; 0x09
    2330:	c8 84       	ldd	r12, Y+8	; 0x08
    2332:	df 80       	ldd	r13, Y+7	; 0x07
    2334:	ee 80       	ldd	r14, Y+6	; 0x06
    2336:	fd 80       	ldd	r15, Y+5	; 0x05
    2338:	0c 81       	ldd	r16, Y+4	; 0x04
    233a:	1b 81       	ldd	r17, Y+3	; 0x03
    233c:	aa 81       	ldd	r26, Y+2	; 0x02
    233e:	b9 81       	ldd	r27, Y+1	; 0x01
    2340:	ce 0f       	add	r28, r30
    2342:	d1 1d       	adc	r29, r1
    2344:	0f b6       	in	r0, 0x3f	; 63
    2346:	f8 94       	cli
    2348:	de bf       	out	0x3e, r29	; 62
    234a:	0f be       	out	0x3f, r0	; 63
    234c:	cd bf       	out	0x3d, r28	; 61
    234e:	ed 01       	movw	r28, r26
    2350:	08 95       	ret

00002352 <_exit>:
    2352:	f8 94       	cli

00002354 <__stop_program>:
    2354:	ff cf       	rjmp	.-2      	; 0x2354 <__stop_program>
